# Deploy to GitHub Pages workflow
# Last updated: 2024-03-19
name: Deploy to GitHub Pages

# Workflow to build and deploy the application to GitHub Pages
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        id: install
        run: |
          echo "Installing dependencies..."
          npm ci --verbose
          cd frontend && npm install vite-plugin-pwa --save-dev
          if [ $? -ne 0 ]; then
            echo "::error::Failed to install dependencies"
            exit 1
          fi
          echo "Dependencies installed successfully"

      - name: Debug Environment
        id: debug
        run: |
          echo "Node version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json

      - name: Build
        id: build
        env:
          VITE_SUPABASE_URL: "https://pauafmgoewfdhwnsexzy.supabase.co"
          VITE_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhdWFmbWdvZXdmZGh3bnNleHp5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY2ODAwMTgsImV4cCI6MjA2MjI1NjAxOH0.iSTx9Upe8wekbKvk5ZiUMeWGi-WB67gqdZG8Bf-DO-0"
          VITE_SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhdWFmbWdvZXdmZGh3bnNleHp5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NjY4MDAxOCwiZXhwIjoyMDYyMjU2MDE4fQ.AmhwlpdZxs__o8VPv4N2Zf-3zb8JgiDqyJfNnEHQX1k"
        run: |
          echo "Starting build process..."
          echo "Environment variables set"
          echo "VITE_SUPABASE_URL is set: $([ ! -z "$VITE_SUPABASE_URL" ] && echo 'yes' || echo 'no')"
          echo "VITE_SUPABASE_ANON_KEY is set: $([ ! -z "$VITE_SUPABASE_ANON_KEY" ] && echo 'yes' || echo 'no')"
          echo "VITE_SUPABASE_SERVICE_ROLE_KEY is set: $([ ! -z "$VITE_SUPABASE_SERVICE_ROLE_KEY" ] && echo 'yes' || echo 'no')"
          
          echo "Running build command..."
          npm run build --verbose
          BUILD_EXIT_CODE=$?
          
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "::error::Build failed with exit code $BUILD_EXIT_CODE"
            echo "Build error output:"
            cat npm-debug.log || true
            exit 1
          fi
          
          echo "Checking build output..."
          if [ ! -f "frontend/dist/index.html" ]; then
            echo "::error::index.html not found in build output"
            echo "Contents of dist directory:"
            ls -la frontend/dist || true
            exit 1
          fi
          echo "Build completed successfully"

      - name: Deploy
        id: deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: frontend/dist
          branch: gh-pages
          clean: true

      - name: Verify Deployment
        id: verify
        continue-on-error: true  # Don't fail the workflow if verification fails
        run: |
          echo "Waiting for deployment to complete..."
          sleep 120  # Wait for 2 minutes
          echo "Checking deployment status..."
          echo "Attempting to access: https://ajinkyapatil.github.io/elephant-watch-app/"
          curl -v https://ajinkyapatil.github.io/elephant-watch-app/ > response.txt 2>&1
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://ajinkyapatil.github.io/elephant-watch-app/)
          echo "Response status code: $STATUS"
          echo "Full response:"
          cat response.txt
          if [ "$STATUS" != "200" ]; then
            echo "::warning::Deployment verification failed. Status code: $STATUS"
            echo "::warning::The site might still be deploying. Please check https://ajinkyapatil.github.io/elephant-watch-app/ in a few minutes."
          else
            echo "Deployment verified successfully"
          fi 