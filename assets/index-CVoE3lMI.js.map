{"version":3,"mappings":"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","names":["TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","cn","inputs","twMerge","clsx","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","ref","jsx","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","jsxs","theme","useTheme","Sonner","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","supabaseUrl","supabaseAnonKey","STORAGE_KEY","supabaseInstance","customStorage","key","error","value","getSupabaseClient","createClient","data","supabase","checkSupabaseConnection","hasLocalSession","storageError","timeoutPromise","_","reject","connectionPromise","statusCode","useNetworkStatus","isOnline","setIsOnline","useState","useEffect","handleOnline","handleOffline","requestLocationPermission","Capacitor","status","Geolocation","checkLocationPermission","getCurrentPosition","position","FullPageLoader","message","Loader2","SESSION_EXPIRATION","initialState","AuthContext","createContext","AuthProvider","children","navigate","setNavigate","to","promiseWithTimeout","promise","timeoutMs","errorMessage","fetchUserProfile","useCallback","userId","supabaseUser","profileData","result","timeoutError","user","userError","profileResult","profile","profileError","extendedUser","_a","_b","_c","isMounted","onlineStatus","session","userProfile","storedSession","Preferences","parsedSession","sessionTimestamp","sessionDate","parseError","currentSession","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","cachedProfileStr","cachedProfile","cacheError","mainError","prevState","handleSignIn","email","password","rememberMe","loginAttempt","locationData","history","lastIndex","err","locationError","permissionError","handleOrientation","event","sensorError","loginHistoryStr","loginHistory","storedSessionStr","cachedUserStr","cachedUser","offlineError","authResponse","noUserError","sessionWithMetadata","unexpectedError","handleSignOut","handleResetPassword","handleUpdatePassword","newPassword","setNavigation","nav","refreshUser","isAdmin","useMemo","isManager","isDataCollector","canCreateUserWithRole","role","canManageUsers","canViewReports","canEditReports","hasPermission","permission","contextValue","useAuth","context","useContext","Footer","ProtectedRoute","initialized","location","useLocation","Outlet","Navigate","buttonVariants","Button","size","asChild","Comp","Slot","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","ChevronRight","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","Check","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","Circle","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","useNavigate","loading","signIn","contextSignOut","resetPassword","updatePassword","isAuthenticated","hasRole","hasAnyRole","roles","hasAllRoles","signOut","checkPermission","Dialog","DialogPrimitive.Root","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","ActivityReportService","NotificationBell","notifications","setNotifications","unreadCount","setUnreadCount","isLoading","setIsLoading","selectedNotification","setSelectedNotification","activityDetails","setActivityDetails","modalOpen","setModalOpen","activityLoading","setActivityLoading","divisions","setDivisions","ranges","setRanges","beats","setBeats","fetchMeta","divRes","rangeRes","beatRes","div","r","b","getDivisionName","d","getRangeName","found","getBeatName","fetchNotifications","notif","n","markAsRead","notificationId","prev","markAllAsRead","handleNotificationClick","notification","details","channel","Fragment","Bell","displayValue","Header","isMobileMenuOpen","setIsMobileMenuOpen","e","Link","Menu","WifiOff","LogOut","NavigationSetup","Index","lazy","__vitePreload","NotFound","ReportActivityPage","Dashboard","Admin","Login","AdminUsers","AdminObservations","AdminStatistics","AdminSettings","AdminNotifications","ErrorBoundary","Component","errorInfo","queryClient","QueryClient","ProtectedLayout","router","createHashRouter","Suspense","AppProviders","QueryClientProvider","AppContent","RouterProvider","App","createRoot"],"ignoreList":[],"sources":["../../src/hooks/use-toast.ts","../../src/lib/utils.ts","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/components/ui/sonner.tsx","../../src/components/ui/tooltip.tsx","../../src/lib/supabaseClient.ts","../../src/utils/networkStatus.ts","../../src/utils/locationService.ts","../../src/components/ui/FullPageLoader.tsx","../../src/contexts/NewAuthContext.tsx","../../src/components/Footer.tsx","../../src/components/ProtectedRoute.tsx","../../src/components/ui/button.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/hooks/useAuth.ts","../../src/components/ui/dialog.tsx","../../src/lib/supabase.ts","../../src/services/activity-report.service.ts","../../src/components/NotificationBell.tsx","../../src/components/Header.tsx","../../src/components/NavigationSetup.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import { createClient } from '@supabase/supabase-js';\n\n// These environment variables will be read from your .env file\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL?.trim();\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY?.trim();\n\n// Storage key constant for consistency\nconst STORAGE_KEY = 'sb-vfsyjvjghftfebvxyjba-auth-token';\n\n// Validate environment variables\nif (!supabaseUrl || !supabaseUrl.startsWith('https://')) {\n  throw new Error('Invalid VITE_SUPABASE_URL format');\n}\n\nif (!supabaseAnonKey || !supabaseAnonKey.startsWith('eyJ')) {\n  throw new Error('Invalid VITE_SUPABASE_ANON_KEY format');\n}\n\n// Create a single instance of the Supabase client\nlet supabaseInstance: ReturnType<typeof createClient> | null = null;\n\n// Custom storage implementation with debugging\nconst customStorage = {\n  getItem: (key: string): string | null => {\n    try {\n      if (import.meta.env.DEV) {\n        console.log(`Getting item from storage: ${key}`);\n      }\n      const value = localStorage.getItem(key);\n      if (import.meta.env.DEV) {\n        console.log(`Item ${key} ${value ? 'found' : 'not found'}`);\n      }\n      return value;\n    } catch (error) {\n      console.error(`Error getting item ${key} from storage:`, error);\n      return null;\n    }\n  },\n  setItem: (key: string, value: string): void => {\n    try {\n      if (import.meta.env.DEV) {\n        console.log(`Setting item in storage: ${key}`);\n      }\n      localStorage.setItem(key, value);\n    } catch (error) {\n      console.error(`Error setting item ${key} in storage:`, error);\n    }\n  },\n  removeItem: (key: string): void => {\n    try {\n      if (import.meta.env.DEV) {\n        console.log(`Removing item from storage: ${key}`);\n      }\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.error(`Error removing item ${key} from storage:`, error);\n    }\n  },\n};\n\nexport const getSupabaseClient = () => {\n  if (supabaseInstance) {\n    return supabaseInstance;\n  }\n\n  if (import.meta.env.DEV) {\n    console.log('Creating new Supabase client instance');\n  }\n\n  try {\n    supabaseInstance = createClient(supabaseUrl, supabaseAnonKey, {\n      auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true,\n        storage: customStorage,\n        storageKey: STORAGE_KEY,\n        flowType: 'pkce',\n        debug: import.meta.env.DEV\n      }\n    });\n\n    // Add debug logging for auth state changes in development\n    if (import.meta.env.DEV) {\n      supabaseInstance.auth.onAuthStateChange((event, session) => {\n        console.log('Supabase auth state changed:', {\n          event,\n          userId: session?.user?.id,\n          timestamp: new Date().toISOString()\n        });\n      });\n    }\n\n    // Test the connection and session\n    supabaseInstance.auth.getSession().then(({ data, error }) => {\n      if (error) {\n        console.error('Error testing Supabase connection:', error);\n      } else {\n        console.log('Supabase connection test successful:', {\n          hasSession: !!data.session,\n          timestamp: new Date().toISOString()\n        });\n      }\n    });\n\n    return supabaseInstance;\n  } catch (error) {\n    console.error('Error creating Supabase client:', error);\n    throw error;\n  }\n};\n\n// Export the singleton instance\nexport const supabase = getSupabaseClient();\n\n// Helper function to check Supabase connection\nexport const checkSupabaseConnection = async () => {\n  try {\n    console.log('Checking Supabase connection (offline operation will still work)...');\n\n    // Check if we have a locally stored session first\n    let hasLocalSession = false;\n    try {\n      const storedSession = localStorage.getItem(STORAGE_KEY);\n      hasLocalSession = !!storedSession;\n    } catch (storageError) {\n      console.warn('Error checking local storage for session:', storageError);\n    }\n\n    // Set a timeout to prevent hanging too long on network requests when offline\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(() => reject(new Error('Connection check timed out')), 3000); // 3 second timeout\n    });\n\n    const connectionPromise = supabase.from('users').select('id').limit(1);\n    \n    // Race between timeout and actual request\n    const { error } = await Promise.race([\n      connectionPromise,\n      timeoutPromise\n    ]) as { error?: { status?: number } };\n\n    if (!error) {\n      console.log('Supabase connection successful');\n      return true;\n    }\n\n    // Treat auth/permission errors as \"still connected\" because they prove\n    // the backend responded.\n    const statusCode = error?.status;\n    if (statusCode === 401 || statusCode === 403) {\n      console.warn('Supabase reachable but access denied (expected for unauthenticated request).');\n      return true;\n    }\n\n    if (hasLocalSession) {\n      console.log('Supabase connection failed, but local session exists. App will work offline.');\n      return true; // Return true to prevent logout when operating offline with cached session\n    }\n\n    console.error('Supabase connection error:', error);\n    return false;\n  } catch (error) {\n    // Even if connection check fails with an exception, as long as we have a local session, \n    // we should return true to enable offline operation\n    try {\n      const storedSession = localStorage.getItem(STORAGE_KEY);\n      if (storedSession) {\n        console.log('Supabase connection check failed, but local session exists. Will work offline.');\n        return true; \n      }\n    } catch (storageError) {\n      console.warn('Error checking local storage for session:', storageError);\n    }\n    \n    console.error('Supabase connection error:', error);\n    return false;\n  }\n};\n\n// Helper function to get current user\nexport const getCurrentUser = async () => {\n  try {\n    const { data: { session } } = await supabase.auth.getSession();\n    return session?.user || null;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n};\n\n// Helper function for authentication\nexport const signInWithRedirect = async (provider: 'google' | 'phone' | 'email', options: any = {}) => {\n  try {\n    let signInResult;\n    \n    if (provider === 'google') {\n      signInResult = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: window.location.origin\n        }\n      });\n    } else if (provider === 'phone') {\n      signInResult = await supabase.auth.signInWithPassword({\n        phone: options.phone,\n        password: options.password\n      });\n    } else {\n      signInResult = await supabase.auth.signInWithPassword({\n        email: options.email,\n        password: options.password\n      });\n    }\n\n    if (signInResult.error) {\n      console.error('Sign in failed:', signInResult.error);\n      throw signInResult.error;\n    }\n\n    return signInResult;\n  } catch (error) {\n    console.error('Sign in error:', error);\n    throw error;\n  }\n};\n\n// Update the user type to include separate email and phone fields\nexport type User = {\n  id: string;\n  email: string | null;\n  phone: string | null;\n  password_hash: string;\n  role: 'admin' | 'manager' | 'data_collector';\n  status: 'active' | 'inactive';\n  created_at: string;\n  updated_at: string;\n};\n","import { useState, useEffect } from 'react';\n\nexport const useNetworkStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return { isOnline };\n};\n","import { Geolocation, PermissionStatus } from '@capacitor/geolocation';\nimport { Capacitor } from '@capacitor/core';\n\n// Interface for location data\nexport interface LocationData {\n  latitude: number;\n  longitude: number;\n  accuracy: number;\n  timestamp: number;\n}\n\n/**\n * Request location permissions explicitly\n * @returns Promise with permission status\n */\nexport const requestLocationPermission = async (): Promise<PermissionStatus> => {\n  console.log('Requesting location permission');\n  if (!Capacitor.isNativePlatform()) {\n    console.warn('Geolocation is not available on web platform. Returning default denied status.');\n    return { location: 'denied', coarseLocation: 'denied' };\n  }\n  try {\n    const status = await Geolocation.requestPermissions();\n    console.log('Location permission status:', status);\n    return status;\n  } catch (error) {\n    console.error('Error requesting location permission:', error);\n    throw error;\n  }\n};\n\n/**\n * Check if location permissions are granted\n * @returns Promise with boolean indicating if permission is granted\n */\nexport const checkLocationPermission = async (): Promise<boolean> => {\n  try {\n    const status = await Geolocation.checkPermissions();\n    return status.location === 'granted';\n  } catch (error) {\n    console.error('Error checking location permissions:', error);\n    return false;\n  }\n};\n\n/**\n * Get current position with proper error handling\n * @param options Optional position options\n * @returns Promise with location data\n */\nexport const getCurrentPosition = async (): Promise<LocationData> => {\n  if (!Capacitor.isNativePlatform()) {\n    console.warn('Geolocation is not available on web platform. Returning default location.');\n    // Return a default or null location for web\n    return {\n      latitude: 0,\n      longitude: 0,\n      accuracy: 0,\n      timestamp: Date.now()\n    };\n  }\n  try {\n    // First ensure we have permission\n    const hasPermission = await checkLocationPermission();\n    \n    if (!hasPermission) {\n      // Request permission if not granted\n      const permissionStatus = await requestLocationPermission();\n      if (permissionStatus.location !== 'granted') {\n        throw new Error('Location permission denied');\n      }\n    }\n    \n    // Get position with high accuracy\n    const position = await Geolocation.getCurrentPosition({\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0\n    });\n    \n    return {\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      accuracy: position.coords.accuracy,\n      timestamp: position.timestamp\n    };\n  } catch (error) {\n    console.error('Error getting current position:', error);\n    throw error;\n  }\n};\n","import React from 'react';\nimport { Loader2 } from 'lucide-react';\n\ninterface FullPageLoaderProps {\n  message?: string;\n}\n\nexport const FullPageLoader: React.FC<FullPageLoaderProps> = ({ message = 'Loading...' }) => {\n  return (\n    <div className=\"fixed inset-0 z-50 flex flex-col items-center justify-center bg-background/80 backdrop-blur-sm\">\n      <div className=\"text-center\">\n        <Loader2 className=\"mx-auto mb-4 h-12 w-12 animate-spin text-primary\" />\n        <p className=\"text-lg font-semibold text-foreground\">{message}</p>\n        <p className=\"text-sm text-muted-foreground\">Please wait a moment.</p>\n      </div>\n    </div>\n  );\n}; ","import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  ReactNode,\n} from 'react';\nimport { Session, User } from '@supabase/supabase-js';\nimport { Profile } from '../types/supabase';\nimport { supabase } from '@/lib/supabaseClient';\nimport { Preferences } from '@capacitor/preferences';\nimport { useNetworkStatus } from '../utils/networkStatus';\nimport { getCurrentPosition, requestLocationPermission } from '../utils/locationService';\nimport { FullPageLoader } from '@/components/ui/FullPageLoader';\n\n\n// Storage key for session persistence\nconst STORAGE_KEY = 'sb-vfsyjvjghftfebvxyjba-auth-token';\n\n// Session expiration duration (30 days in milliseconds)\nconst SESSION_EXPIRATION = 30 * 24 * 60 * 60 * 1000; // 30 days\n\n// User roles\nexport type UserRole = 'admin' | 'manager' | 'data_collector' | 'viewer';\n\n// User positions\nexport type UserPosition = 'Ranger' | 'DFO' | 'Officer' | 'Guard' | 'Manager' | 'Admin';\n\n// User status\nexport type UserStatus = 'active' | 'inactive' | 'pending';\n\n// Permission types\nexport type Permission = \n  | 'view_dashboard'\n  | 'manage_users'\n  | 'view_reports'\n  | 'create_reports'\n  | 'edit_reports'\n  | 'delete_reports'\n  | 'view_admin_panel'\n  | 'manage_settings';\n\n// User metadata stored in auth.users\nexport interface UserMetadata {\n  first_name?: string;\n  last_name?: string;\n  role?: UserRole;\n  position?: UserPosition;\n  avatar_url?: string;\n  [key: string]: any;\n}\n\nexport interface ExtendedUser {\n  id: string;\n  auth_id: string;\n  first_name: string;\n  last_name: string;\n  email: string | null;\n  phone: string | null;\n  role: UserRole;\n  position: UserPosition;\n  status: 'active' | 'inactive' | 'pending';\n  created_at: string;\n  updated_at: string;\n  last_login_at: string | null;\n  avatar_url: string;\n  metadata: Record<string, any>;\n  permissions?: string[];\n  cached_at?: string; // Timestamp for cache management\n}\n\n// Auth state type\ntype AuthState = {\n  user: ExtendedUser | null;\n  session: Session | null;\n  loading: boolean;\n  error: string | null;\n  initialized: boolean;\n};\n\n// Initial auth state\nconst initialState: AuthState = {\n  user: null,\n  session: null,\n  loading: true,\n  error: null,\n  initialized: false,\n};\n\n// Authentication context type\nexport interface AuthContextType extends AuthState {\n  // Authentication methods\n  signIn: (email: string, password: string, rememberMe?: boolean) => Promise<{\n    user: ExtendedUser | null;\n    error: Error | null\n  }>;\n  signOut: () => Promise<{ error: Error | null }>;\n  refreshUser: () => Promise<void>;\n  resetPassword: (email: string) => Promise<{ error: Error | null }>;\n  updatePassword: (newPassword: string) => Promise<{ error: Error | null }>;\n  \n  // Permission checks\n  canCreateUserWithRole: (role: UserRole) => boolean;\n  canManageUsers: () => boolean;\n  canViewReports: () => boolean;\n  canEditReports: () => boolean;\n  hasPermission: (permission: Permission) => boolean;\n  \n  // Navigation\n  setNavigation: (nav: (to: string) => void) => void;\n  navigate: (to: string) => void;\n  \n  // Convenience methods\n  isAdmin: boolean;\n  \n  // Auth state\n  initialized: boolean;\n};\n\n// Create the auth context with default values\nconst AuthContext = createContext<AuthContextType>({\n  ...initialState,\n  signIn: async () => ({ user: null, error: new Error('AuthContext not initialized') }),\n  signOut: async () => ({ error: new Error('AuthContext not initialized') }),\n  refreshUser: async () => {},\n  resetPassword: async () => ({ error: new Error('AuthContext not initialized') }),\n  updatePassword: async () => ({ error: new Error('AuthContext not initialized') }),\n  canCreateUserWithRole: () => false,\n  canManageUsers: () => false,\n  canViewReports: () => false,\n  canEditReports: () => false,\n  hasPermission: () => false,\n  setNavigation: () => {},\n  navigate: () => console.warn('Navigation not initialized'),\n  isAdmin: false,\n  initialized: false,\n});\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, setState] = useState<AuthState>(initialState);\n  const [navigate, setNavigate] = useState<((to: string) => void) | null>(() => {\n    return (to: string) => {\n      console.warn('Navigation not yet initialized. Attempted to navigate to:', to);\n    };\n  });\n  const { isOnline } = useNetworkStatus();\n  \n  // Memoized fetchUserProfile to avoid re-renders - properly moved inside component\n\n  // Function to create a timeout for any promise\n  const promiseWithTimeout = async (promise: Promise<any>, timeoutMs: number, errorMessage: string) => {\n    // Create a promise that rejects in <timeoutMs> milliseconds\n    const timeoutPromise = new Promise((_, reject) => {\n      const id = setTimeout(() => {\n        clearTimeout(id);\n        reject(new Error(`Timeout after ${timeoutMs}ms: ${errorMessage}`));\n      }, timeoutMs);\n    });\n  \n    // Returns a race between our timeout and the passed in promise\n    return Promise.race([\n      promise,\n      timeoutPromise\n    ]);\n  };\n\n  const fetchUserProfile = useCallback(async (userId: string): Promise<ExtendedUser> => {\n    console.log(\"Checking Supabase connection (will continue offline if unavailable)...\", userId);\n    console.log(\"fetchUserProfile: Checking for cached user data first...\");\n    \n    // No valid cached data, fetch from API\n    console.log(\"fetchUserProfile: Calling supabase.auth.getUser()...\");\n    let supabaseUser: User | null = null;\n    let profileData: Profile | null = null;\n\n    try {\n      // Use timeout to prevent indefinite hang\n      let result;\n      try {\n        result = await promiseWithTimeout(\n          supabase.auth.getUser(),\n          10000, // 10 second timeout\n          \"supabase.auth.getUser() call timed out\"\n        );\n      } catch (timeoutError) {\n        console.error(\"fetchUserProfile: Timeout error:\", timeoutError);\n        throw new Error(\"Could not get authentication data: network request timed out\");\n      }\n      \n      const { data: { user }, error: userError } = result;\n      supabaseUser = user;\n\n      console.log(\"fetchUserProfile: supabase.auth.getUser() completed. User error:\", userError, \"User exists:\", !!supabaseUser);\n      console.log(\"DEBUG: supabaseUser object:\", supabaseUser);\n\n      if (userError) {\n        console.error(\"fetchUserProfile: Error from supabase.auth.getUser():\", userError);\n        throw userError;\n      }\n      if (!supabaseUser) {\n        console.warn(\"fetchUserProfile: No user returned from supabase.auth.getUser().\");\n        throw new Error(\"No user returned from Supabase auth.\");\n      }\n\n      // Fetch profile data with timeout\n      let profileResult;\n      try {\n        // Convert PostgrestBuilder to Promise for TypeScript compatibility\n        const fetchProfile = async () => {\n          // Make sure supabaseUser exists before trying to use it\n          if (!supabaseUser) {\n            throw new Error(\"Cannot fetch profile: user is null\");\n          }\n          \n          return await supabase\n            .from('users')\n            .select(`id, first_name, last_name, email, phone, role, position`)\n            .eq('auth_id', supabaseUser.id)\n            .single();\n        };\n        \n        profileResult = await promiseWithTimeout(\n          fetchProfile(),\n          10000, // 10 second timeout\n          \"Profile fetch from Supabase timed out\"\n        );\n      } catch (timeoutError) {\n        console.error(\"fetchUserProfile: Profile fetch timeout:\", timeoutError);\n        throw new Error(\"Could not get profile data: network request timed out\");\n      }\n      \n      const { data: profile, error: profileError } = profileResult;\n      profileData = profile;\n\n      console.log(\"DEBUG: Profile data from 'profiles' table:\", profileData);\n      console.log(\"DEBUG: Profile fetch error:\", profileError);\n      console.log(\"DEBUG: Role from profileData:\", profileData?.role);\n\n      if (profileError) {\n        console.error(\"fetchUserProfile: Error fetching profile from 'profiles' table:\", profileError);\n        throw profileError;\n      }\n\n      if (!profileData) {\n        console.warn(\"fetchUserProfile: No profile data found for user:\", supabaseUser.id);\n        throw new Error(\"No profile data found.\");\n      }\n\n    } catch (error) {\n      console.error(\"fetchUserProfile: An unexpected error occurred during user profile fetch:\", error);\n      throw error;\n    }\n\n    // Correctly construct ExtendedUser from supabaseUser and profileData\n    const extendedUser = {\n      id: supabaseUser.id,\n      auth_id: supabaseUser.id,\n      first_name: profileData?.first_name || '',\n      last_name: profileData?.last_name || '',\n      email: supabaseUser.email || null,\n      phone: supabaseUser.phone || null,\n      role: (profileData?.role || 'viewer') as UserRole, // Use role from profileData\n      position: (supabaseUser.user_metadata?.position || 'field_agent') as UserPosition,\n      status: (supabaseUser.user_metadata?.status || 'active') as UserStatus,\n      created_at: supabaseUser.created_at || new Date().toISOString(),\n      updated_at: supabaseUser.updated_at || new Date().toISOString(),\n      last_login_at: supabaseUser.last_sign_in_at || null,\n      avatar_url: '', // Removed avatar_url as it's not in the 'users' table\n      metadata: supabaseUser.user_metadata || {},\n      permissions: supabaseUser.user_metadata?.permissions || [],\n      cached_at: new Date().toISOString() // Add timestamp for cache invalidation\n    };\n\n    console.log(\"DEBUG: Final extendedUser object before return:\", extendedUser);\n    console.log(\"DEBUG: Role in final extendedUser object:\", extendedUser.role);\n    \n\n    \n    return extendedUser;\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true; // Declare isMounted here\n\n    console.log(\"AuthProvider: Running initialization effect.\");\n\n    const initializeAuth = async (onlineStatus: boolean) => {\n      console.log(\"AuthProvider: Starting initializeAuth.\");\n      let session: Session | null = null; // Declare session here\n      let userProfile: ExtendedUser | null = null; // Declare userProfile here\n\n      try {\n        // Try to load session from Capacitor Preferences first\n        console.log(\"AuthProvider: Attempting to load session from preferences...\");\n        const { value: storedSession } = await Preferences.get({ key: STORAGE_KEY });\n        console.log(\"AuthProvider: Preferences.get completed. Stored session exists:\", !!storedSession);\n\n        if (storedSession) {\n          try {\n            const parsedSession = JSON.parse(storedSession);\n            \n            // Check if the session is still within our 30-day validity period\n            const sessionTimestamp = parsedSession.created_at || parsedSession.expires_at;\n            const sessionDate = new Date(sessionTimestamp).getTime();\n            const currentDate = new Date().getTime();\n            const isSessionValid = (currentDate - sessionDate) < SESSION_EXPIRATION;\n            \n            if (isSessionValid) {\n              // When offline, just use the stored session without validation\n              if (!onlineStatus) {\n                session = parsedSession;\n                console.log(\"AuthProvider: Offline mode - using stored session without validation.\");\n              } else {\n                // Online mode - try to validate with Supabase\n                try {\n                  await supabase.auth.setSession(parsedSession);\n                  session = parsedSession; // Assign to the outer-scoped session\n                  console.log(\"AuthProvider: Session restored and validated with Supabase.\");\n                } catch (validationError) {\n                  // Even if online validation fails, keep the session if within 30 days\n                  console.log(\"AuthProvider: Online validation failed, but session is within 30 days. Keeping session.\");\n                  session = parsedSession;\n                }\n              }\n            } else {\n              console.log(\"AuthProvider: Stored session expired (older than 30 days). Clearing.\");\n              await Preferences.remove({ key: STORAGE_KEY });\n            }\n          } catch (parseError) {\n            console.error(\"AuthProvider: Failed to parse stored session.\", parseError);\n            await Preferences.remove({ key: STORAGE_KEY });\n            console.log(\"AuthProvider: Invalid session format. Clearing.\");\n          }\n        }\n\n        // If no session from preferences, and we are online, try to get it from Supabase\n        if (!session && onlineStatus) {\n          console.log(\"AuthProvider: No session from preferences, attempting to get from Supabase...\");\n          try {\n            const { data: { session: currentSession } } = await supabase.auth.getSession();\n            console.log(\"AuthProvider: supabase.auth.getSession completed. Session exists:\", !!currentSession);\n            session = currentSession;\n            console.log(\"AuthProvider: Fetched session from Supabase.\");\n          } catch (error) {\n            console.warn(\"AuthProvider: Failed to get session from Supabase (possibly network issue):\");\n          }\n        }\n\n        if (session?.user) {\n          console.log(\"AuthProvider: Session user found, attempting to fetch user profile.\");\n          // Attempt to fetch full profile only if online, otherwise use minimal user data from session\n          if (onlineStatus) {\n            try {\n              userProfile = await fetchUserProfile(session.user.id);\n              console.log(\"AuthProvider: fetchUserProfile completed.\");\n            } catch (profileError) {\n              console.warn(\"AuthProvider: Failed to fetch user profile during initialization (possibly offline or error).\", profileError);\n              // Fallback to minimal user if online fetch fails\n              userProfile = {\n                id: session.user.id,\n                auth_id: session.user.id,\n                first_name: session.user.user_metadata?.first_name || '',\n                last_name: session.user.user_metadata?.last_name || '',\n                email: session.user.email || null,\n                phone: session.user.phone || null,\n                role: (session.user.user_metadata?.role || 'viewer') as UserRole,\n                position: (session.user.user_metadata?.position || 'field_agent') as UserPosition,\n                status: (session.user.user_metadata?.status || 'active') as UserStatus,\n                created_at: session.user.created_at || new Date().toISOString(),\n                updated_at: session.user.updated_at || new Date().toISOString(),\n                last_login_at: session.user.last_sign_in_at || new Date().toISOString(),\n                avatar_url: session.user.user_metadata?.avatar_url || '',\n                metadata: session.user.user_metadata || {},\n                permissions: session.user.user_metadata?.permissions || [],\n              };\n            }\n          } else {\n            // If offline, use the session's user data directly\n            userProfile = {\n              id: session.user.id,\n              auth_id: session.user.id,\n              first_name: session.user.user_metadata?.first_name || '',\n              last_name: session.user.user_metadata?.last_name || '',\n              email: session.user.email || null,\n              phone: session.user.phone || null,\n              role: (session.user.user_metadata?.role || 'viewer') as UserRole,\n              position: (session.user.user_metadata?.position || 'field_agent') as UserPosition,\n              status: (session.user.user_metadata?.status || 'active') as UserStatus,\n              created_at: session.user.created_at || new Date().toISOString(),\n              updated_at: session.user.updated_at || new Date().toISOString(),\n              last_login_at: session.user.last_sign_in_at || new Date().toISOString(),\n              avatar_url: session.user.user_metadata?.avatar_url || '',\n              metadata: session.user.user_metadata || {},\n              permissions: session.user.user_metadata?.permissions || [],\n              cached_at: new Date().toISOString(), // Add timestamp for cache invalidation\n            };\n            \n            // Try to retrieve cached profile first, even when offline\n            try {\n              const { value: cachedProfileStr } = await Preferences.get({ key: `user_profile_${session.user.id}` });\n              if (cachedProfileStr) {\n                const cachedProfile = JSON.parse(cachedProfileStr);\n                // Use cached profile if it's more complete than the basic one\n                if (cachedProfile.avatar_url && !userProfile.avatar_url) {\n                  userProfile.avatar_url = cachedProfile.avatar_url;\n                }\n                // Any other cached properties we want to use can be added here\n              }\n            } catch (cacheError) {\n              console.warn('AuthProvider: Error retrieving cached profile:', cacheError);\n            }\n            console.log(\"AuthProvider: Offline, using session user for profile.\");\n          }\n        }\n      } catch (mainError) {\n        console.error(\"AuthProvider: Error during main initialization process:\", mainError);\n      } finally {\n        console.log(\"AuthProvider: initializeAuth finally block reached. isMounted:\", isMounted);\n        if (isMounted) {\n          setState(prevState => ({\n            ...prevState,\n            user: userProfile,\n            session,\n            error: null,\n            loading: false,\n            initialized: true, // Ensure initialized is set to true\n          }));\n        }\n      }\n    };\n\n    initializeAuth(isOnline); // Call initializeAuth with the current online status\n  }, [isOnline, fetchUserProfile]);\n\n  // Refresh user data\n  // Sign in handler - with offline support and login tracking\n  const handleSignIn = useCallback(async (email: string, password: string, rememberMe: boolean = true): Promise<{\n    user: ExtendedUser | null;\n    error: Error | null\n  }> => {\n    console.log(\"handleSignIn: Attempting to sign in user:\", email);\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    // Record login attempt with device information and location if available\n    const loginAttempt: any = {\n      email,\n      timestamp: new Date().toISOString(),\n      success: false,\n      online: isOnline,\n      deviceInfo: {\n        userAgent: navigator.userAgent,\n        platform: navigator.platform,\n        screenSize: `${window.screen.width}x${window.screen.height}`,\n      }\n    };\n    \n    // Try to get geolocation data through the Capacitor Geolocation plugin\n    try {\n      // Request location permissions first\n      await requestLocationPermission();\n      \n      // Then try to get the current position\n      try {\n        const locationData = await getCurrentPosition();\n        \n        // When position is available, update the login record\n        loginAttempt.location = locationData;\n        \n        // Update the stored login history with location\n        try {\n          const { value } = await Preferences.get({ key: 'login_history' });\n          let history = value ? JSON.parse(value) : [];\n          \n          // Find and update the most recent login attempt\n          if (history.length > 0) {\n            const lastIndex = history.length - 1;\n            if (history[lastIndex].email === email) {\n              history[lastIndex].location = loginAttempt.location;\n              await Preferences.set({\n                key: 'login_history',\n                value: JSON.stringify(history)\n              });\n              console.log(\"Location data added to login history\");\n            }\n          }\n        } catch (err) {\n          console.warn(\"Failed to update location in login history:\", err);\n        }\n      } catch (locationError) {\n        console.warn(\"Error getting location:\", locationError);\n      }\n    } catch (permissionError) {\n      console.warn(\"Location permission error:\", permissionError);\n    }\n      \n    // Try to get device orientation (compass) if available\n    try {\n      if (window.DeviceOrientationEvent) {\n        const handleOrientation = (event: DeviceOrientationEvent) => {\n          // Only capture orientation once\n          window.removeEventListener('deviceorientation', handleOrientation);\n          \n          if (event.alpha !== null) {\n            loginAttempt.orientation = {\n              alpha: event.alpha, // compass direction (0-360)\n              beta: event.beta,   // front-to-back tilt\n              gamma: event.gamma  // left-to-right tilt\n            };\n            \n            // Update stored login history with orientation data\n            Preferences.get({ key: 'login_history' }).then(({ value }) => {\n              let history = value ? JSON.parse(value) : [];\n              if (history.length > 0) {\n                const lastIndex = history.length - 1;\n                if (history[lastIndex].email === email) {\n                  history[lastIndex].orientation = loginAttempt.orientation;\n                  Preferences.set({\n                    key: 'login_history',\n                    value: JSON.stringify(history)\n                  });\n                  console.log(\"Orientation data added to login history\");\n                }\n              }\n            }).catch(err => {\n              console.warn(\"Failed to update orientation in login history:\", err);\n            });\n          }\n        };\n        \n        // Request device orientation permission and data\n        window.addEventListener('deviceorientation', handleOrientation, true);\n      }\n    } catch (sensorError) {\n      console.warn(\"Error accessing device sensors:\", sensorError);\n    }\n    \n    try {\n      // Store login attempt in Preferences\n      const { value: loginHistoryStr } = await Preferences.get({ key: 'login_history' });\n      const loginHistory = loginHistoryStr ? JSON.parse(loginHistoryStr) : [];\n      loginHistory.push(loginAttempt);\n      await Preferences.set({\n        key: 'login_history',\n        value: JSON.stringify(loginHistory)\n      });\n      \n      // If offline, check for cached credentials\n      if (!isOnline) {\n        console.log(\"handleSignIn: Offline mode, checking cached session\");\n        try {\n          const { value: storedSessionStr } = await Preferences.get({ key: STORAGE_KEY });\n          if (storedSessionStr) {\n            const storedSession = JSON.parse(storedSessionStr);\n            \n            // Also load cached user profile\n            const { value: cachedUserStr } = await Preferences.get({\n              key: `user_profile_${storedSession.user.id}`\n            });\n            \n            if (cachedUserStr) {\n              const cachedUser = JSON.parse(cachedUserStr);\n              const cachedEmail = cachedUser.email;\n              \n              // Basic offline validation - just check if emails match\n              // In a real app, we'd want more secure offline auth\n              if (cachedEmail === email) {\n                console.log(\"handleSignIn: Offline login successful with cached credentials\");\n                \n                // Update login history to mark success\n                loginHistory[loginHistory.length - 1].success = true;\n                await Preferences.set({\n                  key: 'login_history',\n                  value: JSON.stringify(loginHistory)\n                });\n                \n                setState(prevState => ({\n                  ...prevState,\n                  user: cachedUser,\n                  session: storedSession,\n                  loading: false,\n                  error: null,\n                }));\n                \n                return {\n                  user: cachedUser,\n                  error: null\n                };\n              }\n            }\n            \n            // If we reach here, offline login failed\n            const offlineError = new Error(\"Offline login failed. Please ensure you've logged in at least once with internet connection.\");\n            setState(prevState => ({ ...prevState, loading: false, error: offlineError.message }));\n            return { user: null, error: offlineError };\n          }\n        } catch (offlineError) {\n          console.error(\"handleSignIn: Error during offline login:\", offlineError);\n          setState(prevState => ({\n            ...prevState,\n            loading: false,\n            error: \"Offline login failed. No cached session available.\"\n          }));\n          return {\n            user: null,\n            error: offlineError instanceof Error\n              ? offlineError\n              : new Error(\"Offline login failed\")\n          };\n        }\n      }\n      \n      // Online login with Supabase\n      console.log(\"handleSignIn: Online mode, calling Supabase auth\");\n      const authResponse = await promiseWithTimeout(\n        supabase.auth.signInWithPassword({ email, password }),\n        15000, // 15 second timeout\n        \"Supabase auth login request timed out\"\n      );\n      \n      const { data, error } = authResponse;\n      \n      if (error) {\n        console.error(\"handleSignIn: Error signing in with Supabase:\", error);\n        setState(prevState => ({ ...prevState, loading: false, error: error.message }));\n        return { user: null, error };\n      }\n      \n      if (!data.user || !data.session) {\n        const noUserError = new Error(\"No user or session returned from Supabase auth\");\n        console.error(\"handleSignIn: No user returned in auth response\");\n        setState(prevState => ({ ...prevState, loading: false, error: noUserError.message }));\n        return { user: null, error: noUserError };\n      }\n      \n      console.log(\"handleSignIn: Supabase auth successful, getting full user profile\");\n      \n      // Update login history to mark success\n      loginHistory[loginHistory.length - 1].success = true;\n      await Preferences.set({\n        key: 'login_history',\n        value: JSON.stringify(loginHistory)\n      });\n      \n      // Store session in Preferences for offline use if rememberMe is true\n      if (rememberMe) {\n        // Add timestamp information to ensure we can track the 30-day expiration\n        const sessionWithMetadata = {\n          ...data.session,\n          created_at: new Date().toISOString(),\n          local_expiry: new Date(Date.now() + SESSION_EXPIRATION).toISOString()\n        };\n        \n        await Preferences.set({\n          key: STORAGE_KEY,\n          value: JSON.stringify(sessionWithMetadata)\n        });\n        \n        console.log(\"handleSignIn: Session stored with 30-day local expiration date:\", sessionWithMetadata.local_expiry);\n      }\n      \n      // Get full user profile with location data and permissions\n      let userProfile: ExtendedUser;\n      try {\n        userProfile = await fetchUserProfile(data.user.id);\n        \n        // Store user profile for offline use\n        await Preferences.set({\n          key: `user_profile_${data.user.id}`,\n          value: JSON.stringify({\n            ...userProfile,\n            cached_at: new Date().toISOString()\n          })\n        });\n        \n        console.log(\"handleSignIn: User profile fetched and cached successfully\");\n      } catch (profileError) {\n        console.warn(\"handleSignIn: Error fetching full profile, using basic user data\", profileError);\n        // Still continue with basic user info if profile fetch fails\n        userProfile = {\n          id: data.user.id,\n          auth_id: data.user.id,\n          first_name: data.user.user_metadata?.first_name || '',\n          last_name: data.user.user_metadata?.last_name || '',\n          email: data.user.email || null,\n          phone: data.user.phone || null,\n          role: (data.user.user_metadata?.role || 'viewer') as UserRole,\n          position: (data.user.user_metadata?.position || 'field_agent') as UserPosition,\n          status: (data.user.user_metadata?.status || 'active') as UserStatus,\n          created_at: data.user.created_at || new Date().toISOString(),\n          updated_at: data.user.updated_at || new Date().toISOString(),\n          last_login_at: data.user.last_sign_in_at || new Date().toISOString(),\n          avatar_url: data.user.user_metadata?.avatar_url || '',\n          metadata: data.user.user_metadata || {},\n          permissions: data.user.user_metadata?.permissions || [],\n          cached_at: new Date().toISOString()\n        };\n        \n        // Still cache the basic user profile\n        await Preferences.set({\n          key: `user_profile_${data.user.id}`,\n          value: JSON.stringify(userProfile)\n        });\n      }\n      \n      setState(prevState => ({\n        ...prevState,\n        user: userProfile,\n        session: data.session,\n        loading: false,\n        error: null,\n      }));\n      \n      return { user: userProfile, error: null };\n      \n    } catch (unexpectedError) {\n      console.error(\"handleSignIn: Unexpected error during sign in:\", unexpectedError);\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: unexpectedError instanceof Error ? unexpectedError.message : \"An unexpected error occurred\"\n      }));\n      return {\n        user: null,\n        error: unexpectedError instanceof Error ? unexpectedError : new Error(\"Unknown error during sign in\")\n      };\n    }\n  }, [setState, isOnline, fetchUserProfile]);\n  \n  // Sign out handler\n  const handleSignOut = useCallback(async (): Promise<{ error: Error | null }> => {\n    console.log(\"handleSignOut: Signing out user\");\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    try {\n      // Record sign out in login history\n      const { value: loginHistoryStr } = await Preferences.get({ key: 'login_history' });\n      const loginHistory = loginHistoryStr ? JSON.parse(loginHistoryStr) : [];\n      \n      loginHistory.push({\n        timestamp: new Date().toISOString(),\n        event: 'signout',\n        online: isOnline,\n        userId: state.user?.id || null\n      });\n      \n      await Preferences.set({\n        key: 'login_history',\n        value: JSON.stringify(loginHistory)\n      });\n      \n      // If online, sign out from Supabase\n      if (isOnline) {\n        const { error } = await supabase.auth.signOut();\n        if (error) throw error;\n      }\n      \n      // Always remove cached session\n      await Preferences.remove({ key: STORAGE_KEY });\n      \n      // Don't remove cached user profiles to allow offline login later\n      \n      setState({\n        user: null,\n        session: null,\n        loading: false,\n        error: null,\n        initialized: true,\n      });\n      \n      return { error: null };\n    } catch (error) {\n      console.error('Error signing out:', error);\n      \n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error instanceof Error ? error.message : \"Error signing out\"\n      }));\n      \n      return { error: error instanceof Error ? error : new Error(\"Error signing out\") };\n    }\n  }, [setState, isOnline, state.user]);\n  \n  // Reset password\n  const handleResetPassword = useCallback(async (email: string): Promise<{ error: Error | null }> => {\n    console.log(\"handleResetPassword: Requesting password reset for:\", email);\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    try {\n      if (!isOnline) {\n        throw new Error(\"Cannot reset password while offline\");\n      }\n      \n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: window.location.origin + '/reset-password',\n      });\n      \n      if (error) throw error;\n      \n      setState(prevState => ({ ...prevState, loading: false }));\n      return { error: null };\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      \n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error instanceof Error ? error.message : \"Error resetting password\"\n      }));\n      \n      return { error: error instanceof Error ? error : new Error(\"Error resetting password\") };\n    }\n  }, [setState, isOnline]);\n  \n  // Update password\n  const handleUpdatePassword = useCallback(async (newPassword: string): Promise<{ error: Error | null }> => {\n    console.log(\"handleUpdatePassword: Updating password\");\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    try {\n      if (!isOnline) {\n        throw new Error(\"Cannot update password while offline\");\n      }\n      \n      const { error } = await supabase.auth.updateUser({\n        password: newPassword,\n      });\n      \n      if (error) throw error;\n      \n      setState(prevState => ({ ...prevState, loading: false }));\n      return { error: null };\n    } catch (error) {\n      console.error('Error updating password:', error);\n      \n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error instanceof Error ? error.message : \"Error updating password\"\n      }));\n      \n      return { error: error instanceof Error ? error : new Error(\"Error updating password\") };\n    }\n  }, [setState, isOnline]);\n  \n  // Navigation setter\n  const setNavigation = useCallback((nav: (to: string) => void) => {\n    setNavigate(() => nav);\n  }, []);\n  \n  // Refresh user data\n  const refreshUser = useCallback(async () => {\n    try {\n      const { data: { user }, error } = await supabase.auth.getUser();\n      \n      if (error) throw error;\n      if (!user) return;\n      \n      const userProfile = await fetchUserProfile(user.id);\n      if (userProfile) {\n        setState(prevState => ({ ...prevState, user: userProfile }));\n      }\n    } catch (error) {\n      console.error('Error refreshing user:', error);\n      throw error;\n    }\n  }, [setState, fetchUserProfile]);\n\n  // Permission checks\n  const isAdmin = useMemo(() => state.user?.role === 'admin', [state.user]);\n  const isManager = useMemo(() => state.user?.role === 'manager', [state.user]);\n  const isDataCollector = useMemo(() => state.user?.role === 'data_collector', [state.user]);\n\n  const canCreateUserWithRole = useCallback((role: UserRole): boolean => {\n    if (!state.user) return false;\n    \n    switch (state.user.role) {\n      case 'admin':\n        return true;\n      case 'manager':\n        return ['data_collector', 'viewer'].includes(role);\n      default:\n        return false;\n    }\n  }, [state.user]);\n\n  const canManageUsers = useCallback((): boolean => {\n    return isAdmin || isManager;\n  }, [isAdmin, isManager]);\n\n  const canViewReports = useCallback((): boolean => {\n    return !!state.user;\n  }, [state.user]);\n\n  const canEditReports = useCallback((): boolean => {\n    return isAdmin || isDataCollector;\n  }, [isAdmin, isDataCollector]);\n\n  const hasPermission = useCallback((permission: Permission): boolean => {\n    if (!state.user) return false;\n    \n    switch (permission) {\n      case 'manage_users':\n        return canManageUsers();\n      case 'view_reports':\n        return canViewReports();\n      case 'edit_reports':\n        return canEditReports();\n      default:\n        return false;\n    }\n  }, [state.user, canManageUsers, canViewReports, canEditReports]);\n\n  // Context value\n  const contextValue = useMemo<AuthContextType>(() => ({\n    ...state,\n    signIn: handleSignIn,\n    signOut: handleSignOut,\n    refreshUser,\n    resetPassword: handleResetPassword,\n    updatePassword: handleUpdatePassword,\n    canCreateUserWithRole,\n    canManageUsers,\n    canViewReports,\n    canEditReports,\n    hasPermission,\n    setNavigation,\n    navigate: (to: string) => {\n      if (navigate) {\n        navigate(to);\n      } else {\n        console.warn('Navigation not initialized');\n      }\n    },\n    isAdmin: state.user?.role === 'admin',\n    initialized: state.initialized,\n  }), [\n    state,\n    handleSignIn,\n    handleSignOut,\n    refreshUser,\n    handleResetPassword,\n    handleUpdatePassword,\n    canCreateUserWithRole,\n    canManageUsers,\n    canViewReports,\n    canEditReports,\n    hasPermission,\n    navigate,\n    setNavigation\n  ]);\n\n  if (!state.initialized) {\n    return <FullPageLoader message=\"Initializing authentication...\" />;\n  }\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n","import React from \"react\";\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-gradient-to-r from-blue-600 to-green-600 text-white py-4 mt-8\">\n      <div className=\"container mx-auto px-2 sm:px-4 text-center\">\n        <p className=\"text-xs sm:text-sm font-medium\">© {new Date().getFullYear()} Eravat - Advanced Elephant Monitoring & Conservation Platform</p>\n      </div>\n    </footer>\n  );\n} ","import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation, Outlet } from 'react-router-dom';\nimport { useAuth } from '@/contexts/NewAuthContext';\nimport { UserRole } from '@/types/auth';\nimport { Loader2 } from 'lucide-react';\nimport { supabase } from '@/lib/supabaseClient';\nimport { FullPageLoader } from '@/components/ui/FullPageLoader';\n\n// Storage key constant for consistency\nconst STORAGE_KEY = 'sb-vfsyjvjghftfebvxyjba-auth-token';\n\n// The fixed user ID we found in the diagnostics\nconst KNOWN_USER_ID = 'cda0c1cd-c91a-41c5-9bb8-93a1df73df6d';\nconst KNOWN_AUTH_ID = '5d261670-4476-4892-b3a4-3009cf49413b';\n\n// Function to check if there's a session in localStorage\nfunction hasLocalStorageSession(): boolean {\n  try {\n    const sessionStr = localStorage.getItem(STORAGE_KEY);\n    if (!sessionStr) return false;\n\n    const session = JSON.parse(sessionStr);\n    if (!session.access_token) return false;\n\n    // Check if session is expired\n    const now = Math.floor(Date.now() / 1000);\n    if (session.expires_at && session.expires_at < now) {\n      console.log('Local session exists but is expired');\n      return false;\n    }\n\n    return true;\n  } catch (e) {\n    console.error('Error checking localStorage session:', e);\n    return false;\n  }\n}\n\n// Function to create an emergency user object if needed\nasync function getEmergencyUserProfile(): Promise<any> {\n  // First try to get from database\n  try {\n    const { data: profile } = await supabase\n      .from('users')\n      .select('*')\n      .eq('id', KNOWN_USER_ID)\n      .single();\n\n    if (profile) {\n      console.log('Successfully loaded emergency user from database');\n      return profile;\n    }\n  } catch (e) {\n    console.error('Error fetching emergency user:', e);\n  }\n\n  // Fallback to hardcoded profile\n  return {\n    id: KNOWN_USER_ID,\n    auth_id: KNOWN_AUTH_ID,\n    email: \"yash.tagai@gmail.com\",\n    phone: \"9713010045\",\n    role: \"admin\",\n    first_name: \"Yash\",\n    last_name: \"Tagai\",\n    position: \"DFO\",\n    status: \"active\",\n    created_at: new Date().toISOString(),\n    updated_at: null\n  };\n}\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: UserRole;\n}\n\nexport const ProtectedRoute: React.FC = () => {\n  const { user, initialized } = useAuth();\n  const location = useLocation();\n\n  if (!initialized) {\n    // While the auth state is being determined, show a full-page loading indicator.\n    return <FullPageLoader message=\"Initializing session...\" />;\n  }\n\n  if (!user) {\n    // If initialization is complete and there's no user, redirect to login.\n    // Pass the original location in state so we can redirect back after login.\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If initialization is complete and a user exists, render the child routes.\n  return <Outlet />;\n};","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import { useContext, useMemo } from 'react';\nimport type { UserRole, AuthContextType, ExtendedUser } from '@/contexts/NewAuthContext';\nimport AuthContext from '@/contexts/NewAuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from '@/components/ui/use-toast';\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  const {\n    user,\n    session,\n    loading,\n    error,\n    signIn,\n    signOut: contextSignOut,\n    resetPassword,\n    updatePassword,\n    refreshUser,\n    initialized,\n  } = context;\n\n  const isAuthenticated = useMemo(() => !!user && !!session, [user, session]);\n  const isAdmin = useMemo(() => user?.role === 'admin', [user]);\n  const hasRole = useMemo(() => (role: UserRole) => user?.role === role, [user]);\n  const hasAnyRole = useMemo(() => (roles: UserRole[]) => user ? roles.includes(user.role) : false, [user]);\n  const hasAllRoles = useMemo(() => (roles: UserRole[]) => user ? roles.every(role => user.role === role) : false, [user]);\n\n  const signOut = async () => {\n    try {\n      await contextSignOut();\n      toast({\n        title: 'Signed out',\n        description: 'You have been signed out successfully.',\n      });\n      navigate('/login');\n    } catch (error) {\n      console.error('Sign out error:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to sign out. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const checkPermission = (permission: string) => {\n    if (!user) return false;\n    \n    // Admin has all permissions\n    if (user.role === 'admin') return true;\n    \n    // Implement permission logic based on user role\n    switch (permission) {\n      case 'view_dashboard':\n        return ['admin', 'manager', 'data_collector', 'viewer'].includes(user.role);\n      case 'manage_users':\n        return ['admin', 'manager'].includes(user.role);\n      case 'view_reports':\n        return ['admin', 'manager', 'data_collector', 'viewer'].includes(user.role);\n      case 'create_reports':\n        return ['admin', 'manager', 'data_collector'].includes(user.role);\n      case 'edit_reports':\n        return ['admin', 'manager', 'data_collector'].includes(user.role);\n      case 'delete_reports':\n        return ['admin', 'manager'].includes(user.role);\n      case 'view_admin_panel':\n        return ['admin', 'manager'].includes(user.role);\n      case 'manage_settings':\n        return ['admin'].includes(user.role);\n      default:\n        return false;\n    }\n  };\n\n  return {\n    // State\n    user,\n    session,\n    loading,\n    error,\n    isAuthenticated,\n    isAdmin,\n    initialized,\n    \n    // Actions\n    signIn,\n    signOut,\n    resetPassword,\n    updatePassword,\n    refreshUser,\n    \n    // Role and permission checks\n    hasRole,\n    hasAnyRole,\n    hasAllRoles,\n    hasPermission: checkPermission,\n    \n    // Helpers\n    canCreateUserWithRole: (role: UserRole) => {\n      if (!user) return false;\n      if (user.role === 'admin') return true;\n      if (user.role === 'manager' && role !== 'admin') return true;\n      return false;\n    },\n    canManageUsers: () => checkPermission('manage_users'),\n    canViewReports: () => checkPermission('view_reports'),\n    canEditReports: () => checkPermission('edit_reports'),\n  };\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import { getSupabaseClient } from './supabaseClient';\n\n// Export the singleton Supabase client instance\nexport const supabase = getSupabaseClient();","import { supabase } from '@/lib/supabase';\nimport { ActivityReport, ActivityReportInput } from '@/types/activity-report';\n\nexport async function getActivityReport(id: string): Promise<ActivityReport | null> {\n  try {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) throw error;\n    return data as unknown as ActivityReport;\n  } catch (error) {\n    console.error('Error fetching activity report:', error);\n    return null;\n  }\n}\n\n// Type for the result returned by the Postgres function\ninterface InsertActivityReportWithSpatialResult {\n  id: string;\n  associated_division: string;\n  associated_division_id: string;\n  associated_range: string;\n  associated_range_id: string;\n  associated_beat: string;\n  associated_beat_id: string;\n  user_ids: string[];\n}\n\nexport async function createActivityReport(report: ActivityReportInput): Promise<ActivityReport | null> {\n  try {\n    // Map ActivityReportInput to Postgres function parameters\n    const {\n      user_id,\n      latitude,\n      longitude,\n      activity_date,\n      activity_time,\n      observation_type,\n      total_elephants,\n      male_elephants,\n      female_elephants,\n      unknown_elephants,\n      calves,\n      indirect_sighting_type,\n      loss_type,\n      compass_bearing,\n      photo_url\n    } = report;\n\n    const { data, error } = await supabase.rpc('insert_activity_report_with_spatial', {\n      p_user_id: user_id,\n      p_latitude: latitude ? Number(latitude) : null,\n      p_longitude: longitude ? Number(longitude) : null,\n      p_activity_date: activity_date,\n      p_activity_time: activity_time,\n      p_observation_type: observation_type,\n      p_total_elephants: total_elephants ?? null,\n      p_male_elephants: male_elephants ?? null,\n      p_female_elephants: female_elephants ?? null,\n      p_unknown_elephants: unknown_elephants ?? null,\n      p_calves: calves ?? null,\n      p_indirect_sighting_type: indirect_sighting_type ?? null,\n      p_loss_type: loss_type ?? null,\n      p_compass_bearing: compass_bearing ?? null,\n      p_photo_url: photo_url ?? null\n    });\n\n    if (error) throw error;\n    // The function returns an array, take the first result\n    if (data && Array.isArray(data) && data.length > 0) {\n      const result = data[0];\n      return {\n        ...report,\n        id: result.id,\n        associated_division: result.associated_division,\n        associated_division_id: result.associated_division_id,\n        associated_range: result.associated_range,\n        associated_range_id: result.associated_range_id,\n        associated_beat: result.associated_beat,\n        associated_beat_id: result.associated_beat_id,\n        user_ids: result.user_ids\n      } as ActivityReport;\n    }\n    return null;\n  } catch (error) {\n    console.error('Error creating activity report:', error);\n    return null;\n  }\n}\n\n\n\nexport async function updateActivityReport(id: string, report: Partial<ActivityReportInput>): Promise<ActivityReport | null> {\n  try {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .update(report)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) throw error;\n    return data as unknown as ActivityReport;\n  } catch (error) {\n    console.error('Error updating activity report:', error);\n    return null;\n  }\n}\n\nexport async function deleteActivityReport(id: string): Promise<boolean> {\n  try {\n    const { error } = await supabase\n      .from('activity_reports')\n      .delete()\n      .eq('id', id);\n\n    if (error) throw error;\n    return true;\n  } catch (error) {\n    console.error('Error deleting activity report:', error);\n    return false;\n  }\n}\n\nexport async function listActivityReports(): Promise<ActivityReport[]> {\n  try {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n    return data as unknown as ActivityReport[];\n  } catch (error) {\n    console.error('Error listing activity reports:', error);\n    return [];\n  }\n}\n\nexport class ActivityReportService {\n  private static instance: ActivityReportService;\n\n  private constructor() {}\n\n  public static getInstance(): ActivityReportService {\n    if (!ActivityReportService.instance) {\n      ActivityReportService.instance = new ActivityReportService();\n    }\n    return ActivityReportService.instance;\n  }\n\n  async getById(id: string): Promise<ActivityReport> {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) throw error;\n    return data as unknown as ActivityReport;\n  }\n}\n\nfunction isActivityReport(data: unknown): data is ActivityReport {\n  if (!data || typeof data !== 'object') return false;\n  const report = data as Partial<ActivityReport>;\n  return (\n    typeof report.id === 'string' &&\n    typeof report.status === 'string' &&\n    typeof report.is_offline === 'boolean' &&\n    typeof report.user_id === 'string' &&\n    report.activity_date instanceof Date &&\n    typeof report.latitude === 'string' &&\n    typeof report.longitude === 'string'\n  );\n}\n\nexport const activityReportService = {\n  async create(report: ActivityReportInput): Promise<ActivityReport> {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .insert(report)\n      .select()\n      .single();\n\n    if (error) throw error;\n    if (!isActivityReport(data)) throw new Error('Invalid activity report data');\n    return data;\n  },\n\n  async update(id: string, report: Partial<ActivityReportInput>): Promise<ActivityReport> {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .update(report)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) throw error;\n    if (!isActivityReport(data)) throw new Error('Invalid activity report data');\n    return data;\n  },\n\n  async getById(id: string): Promise<ActivityReport> {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .select()\n      .eq('id', id)\n      .single();\n\n    if (error) throw error;\n    if (!isActivityReport(data)) throw new Error('Invalid activity report data');\n    return data;\n  },\n\n  async getAll(): Promise<ActivityReport[]> {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .select()\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n    if (!Array.isArray(data)) throw new Error('Invalid response format');\n    if (!data.every(isActivityReport)) throw new Error('Invalid activity report data in response');\n    return data as unknown as ActivityReport[];\n  },\n\n  async delete(id: string): Promise<ActivityReport> {\n    const { data, error } = await supabase\n      .from('activity_reports')\n      .delete()\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) throw error;\n    if (!isActivityReport(data)) throw new Error('Invalid activity report data');\n    return data;\n  }\n}; ","import React, { useEffect, useState } from 'react';\nimport { Bell } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { supabase } from '@/lib/supabaseClient';\nimport { useAuth } from '@/contexts/NewAuthContext';\nimport { toast } from 'sonner';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { ActivityReportService } from '@/services/activity-report.service';\nimport type { ActivityReport } from '@/types/activity-report';\n\ninterface Division {\n  id: string;\n  name: string;\n}\n\ninterface NotificationData {\n  activity_id?: string;\n  division_id?: string;\n  range_id?: string;\n}\n\ninterface Notification {\n  id: string;\n  message: string;\n  created_at: string;\n  is_read: boolean;\n  type: string;\n  data: NotificationData;\n}\n\nexport function NotificationBell() {\n  const { user } = useAuth();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedNotification, setSelectedNotification] = useState<Notification | null>(null);\n  const [activityDetails, setActivityDetails] = useState<ActivityReport | null>(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [activityLoading, setActivityLoading] = useState(false);\n\n  // New: State for division, range, beat name mapping\n  const [divisions, setDivisions] = useState<{ id: string; name: string }[]>([]);\n  const [ranges, setRanges] = useState<{ id: string; name: string }[]>([]);\n  const [beats, setBeats] = useState<{ id: string; name: string }[]>([]);\n\n  // New: Fetch all divisions, ranges, beats on mount\n  useEffect(() => {\n    async function fetchMeta() {\n      const [divRes, rangeRes, beatRes] = await Promise.all([\n        supabase.from('divisions').select('id, name'),\n        supabase.from('ranges').select('new_id, name'),\n        supabase.from('beats').select('new_id, name'),\n      ]);\n      if (!divRes.error) {\n        const divisions = (divRes.data || []).map((div: any) => ({\n          id: String(div.id),\n          name: String(div.name)\n        }));\n        setDivisions(divisions);\n      }\n      if (!rangeRes.error) setRanges((rangeRes.data || []).map((r: any) => ({ id: r.new_id, name: r.name })));\n      if (!beatRes.error) setBeats((beatRes.data || []).map((b: any) => ({ id: b.new_id, name: b.name })));\n    }\n    fetchMeta();\n  }, []);\n\n  // New: Helper functions to get names from IDs\n  const getDivisionName = (id?: string | null) => divisions.find(d => d.id === id)?.name || id || '';\n  const getRangeName = (id?: string | null) => {\n    const found = ranges.find(r => r.id === id || (r as any).new_id === id);\n    return found?.name || id || '';\n  };\n  const getBeatName = (id?: string | null) => beats.find(b => b.id === id)?.name || id || '';\n\n  const fetchNotifications = async () => {\n    if (!user?.id) return;\n\n    try {\n      setIsLoading(true);\n      const { data, error } = await supabase\n        .from('notifications')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n        .limit(10);\n\n      if (error) throw error;\n\n      const notifications = (data || []).map((notif: any) => ({\n        id: String(notif.id),\n        message: String(notif.message),\n        created_at: String(notif.created_at),\n        is_read: Boolean(notif.is_read),\n        type: String(notif.type),\n        data: notif.data || {}\n      }));\n      setNotifications(notifications);\n      setUnreadCount(notifications.filter(n => !n.is_read).length);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n      toast.error('Failed to load notifications');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const markAsRead = async (notificationId: string) => {\n    if (!user?.id) return;\n\n    try {\n      const { error } = await supabase\n        .from('notifications')\n        .update({ is_read: true })\n        .eq('id', notificationId)\n        .eq('user_id', user.id);\n\n      if (error) throw error;\n\n      setNotifications(prev =>\n        prev.map(n =>\n          n.id === notificationId ? { ...n, is_read: true } : n\n        )\n      );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n      toast.error('Failed to mark notification as read');\n    }\n  };\n\n  const markAllAsRead = async () => {\n    if (!user?.id) return;\n\n    try {\n      const { error } = await supabase\n        .from('notifications')\n        .update({ is_read: true })\n        .eq('user_id', user.id)\n        .eq('is_read', false);\n\n      if (error) throw error;\n\n      setNotifications(prev =>\n        prev.map(n => ({ ...n, is_read: true }))\n      );\n      setUnreadCount(0);\n    } catch (error) {\n      console.error('Error marking all notifications as read:', error);\n      toast.error('Failed to mark all notifications as read');\n    }\n  };\n\n  const handleNotificationClick = async (notification: Notification) => {\n    setSelectedNotification(notification);\n    setActivityDetails(null);\n    setModalOpen(true);\n    if (notification.data.activity_id) {\n      setActivityLoading(true);\n      try {\n        const details = await ActivityReportService.getInstance().getById(notification.data.activity_id);\n        setActivityDetails(details);\n      } catch (err) {\n        toast.error('Failed to load activity details');\n      } finally {\n        setActivityLoading(false);\n      }\n    }\n    if (!notification.is_read) {\n      markAsRead(notification.id);\n    }\n  };\n\n  useEffect(() => {\n    if (user?.id) {\n      fetchNotifications();\n\n      // Subscribe to new notifications\n      const channel = supabase\n        .channel(`notifications-${user.id}`)\n        .on(\n          'postgres_changes',\n          {\n            event: '*',\n            schema: 'public',\n            table: 'notifications',\n            filter: `user_id=eq.${user.id}`,\n          },\n          () => {\n            fetchNotifications();\n          }\n        )\n        .subscribe();\n\n      return () => {\n        supabase.removeChannel(channel);\n      };\n    }\n  }, [user?.id]);\n\n  if (!user) return null;\n\n  return (\n    <>\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"relative h-12 w-12\"\n            aria-label=\"View notifications\"\n          >\n            <Bell className=\"h-7 w-7\" />\n            {unreadCount > 0 && (\n              <span className=\"absolute -right-1 -top-1 flex h-6 w-6 items-center justify-center rounded-full bg-red-500 text-[12px] font-medium text-white\">\n                {unreadCount}\n              </span>\n            )}\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\" className=\"w-80\">\n          <div className=\"flex items-center justify-between p-2 border-b\">\n            <h3 className=\"font-semibold\">Notifications</h3>\n            {unreadCount > 0 && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={markAllAsRead}\n                className=\"text-sm text-blue-600 hover:text-blue-700\"\n              >\n                Mark all as read\n              </Button>\n            )}\n          </div>\n          <div className=\"max-h-[400px] overflow-y-auto\">\n            {isLoading ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                Loading notifications...\n              </div>\n            ) : notifications.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                No notifications yet\n              </div>\n            ) : (\n              notifications.map(notification => (\n                <DropdownMenuItem\n                  key={notification.id}\n                  className={`p-4 hover:bg-gray-50 ${!notification.is_read ? 'bg-blue-50' : ''}`}\n                  onClick={() => handleNotificationClick(notification)}\n                >\n                  <div className=\"flex flex-col gap-1\">\n                    <p className=\"text-sm font-medium\">\n                      {notification.message}\n                    </p>\n                    {/* Show summary details with names */}\n                    <div className=\"text-xs text-gray-600 flex flex-wrap gap-2\">\n                      {notification.data.division_id && <span>Division: {getDivisionName(notification.data.division_id)}</span>}\n                      {notification.data.range_id && <span>Range: {getRangeName(notification.data.range_id)}</span>}\n                      {notification.data.activity_id && <span>Activity: {notification.data.activity_id}</span>}\n                    </div>\n                    <p className=\"text-xs text-gray-500\">\n                      {new Date(notification.created_at).toLocaleString()}\n                    </p>\n                  </div>\n                </DropdownMenuItem>\n              ))\n            )}\n          </div>\n        </DropdownMenuContent>\n      </DropdownMenu>\n      {/* Modal for activity details */}\n      <Dialog open={modalOpen} onOpenChange={setModalOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Activity Details</DialogTitle>\n          </DialogHeader>\n          {activityLoading ? (\n            <div className=\"p-4 text-center text-gray-500\">Loading details...</div>\n          ) : activityDetails ? (\n            <div className=\"space-y-2\">\n              {Object.entries(activityDetails).map(([key, value]) => {\n                if (value == null || value === '') return null;\n                let displayValue = value;\n                if (key === 'associated_division' || key === 'associated_division_id') displayValue = getDivisionName(value as string);\n                if (key === 'associated_range' || key === 'associated_range_id') displayValue = getRangeName(value as string);\n                if (key === 'associated_beat' || key === 'associated_beat_id') displayValue = getBeatName(value as string);\n                return (\n                  <div key={key} className=\"flex justify-between\">\n                    <span className=\"font-medium capitalize\">{key.replace(/_/g, ' ')}:</span>\n                    <span>{typeof displayValue === 'object' && displayValue instanceof Date ? displayValue.toLocaleString() : displayValue.toString()}</span>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"p-4 text-center text-gray-500\">No activity details found for this notification.</div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n} ","import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { supabase } from \"@/lib/supabaseClient\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"sonner\";\nimport { LogOut, UserCircle, Settings, User, PawPrint, Menu, X, WifiOff } from \"lucide-react\";\nimport { useNetworkStatus } from '@/utils/networkStatus';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\nimport { NotificationBell } from './NotificationBell';\n\nexport function Header() {\n  const { user, signOut, isAdmin, canManageUsers, canViewReports, canEditReports } = useAuth();\n  const navigate = useNavigate();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const { isOnline } = useNetworkStatus();\n\n  const handleSignOut = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('Logout button clicked');\n    \n    try {\n      if (!isOnline) {\n        toast.warning(\"Cannot log out while offline. Please reconnect to the internet and try again.\", {\n          duration: 5000\n        });\n        return;\n      }\n      \n      console.log('Starting sign out process...');\n      \n      // Use the signOut method from the auth context\n      // which handles navigation and toast messages internally\n      await signOut();\n      \n      // The signOut function from useAuth already handles navigation to /login\n      // No need to navigate again here\n      \n    } catch (error) {\n      console.error('Error during sign out:', error);\n      toast.error(\"Sign out failed. Please try again.\");\n    }\n  };\n\n  if (!user) return null;\n\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container flex flex-col sm:flex-row h-auto sm:h-16 items-center justify-between px-4 sm:px-0 py-2 sm:py-0\">\n        <div className=\"flex flex-col sm:flex-row items-center w-full sm:w-auto\">\n          <div className=\"flex-shrink-0 flex items-center gap-2\">\n            <Link to=\"/\" className=\"flex items-center gap-2\">\n              <span className=\"relative flex items-center justify-center w-8 h-8\">\n                <span className=\"absolute inset-0 bg-gradient-to-r from-blue-500 to-green-500 rounded-full blur-md opacity-30 animate-pulse\"></span>\n                <img\n                  src={`${import.meta.env.BASE_URL}elephant_photo.png`}\n                  alt=\"Elephant Logo\"\n                  className=\"relative w-full h-full object-contain\"\n                />\n              </span>\n              <span className=\"text-lg sm:text-xl font-bold bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent\">Eravat</span>\n            </Link>\n          </div>\n          \n          {/* Enhanced Mobile Navigation */}\n          <div className=\"sm:hidden ml-auto\">\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500\"\n              aria-expanded={isMobileMenuOpen}\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              {isMobileMenuOpen ? (\n                <X className=\"h-6 w-6\" aria-hidden=\"true\" />\n              ) : (\n                <Menu className=\"h-6 w-6\" aria-hidden=\"true\" />\n              )}\n            </button>\n          </div>\n\n          {/* Mobile Menu */}\n          <div className={`absolute left-0 top-16 w-full bg-white border-b shadow-md z-40 transform transition-all duration-300 ease-in-out ${\n            isMobileMenuOpen ? 'translate-y-0 opacity-100' : '-translate-y-2 opacity-0 pointer-events-none'\n          } sm:hidden`}>\n            <nav className=\"flex flex-col items-center py-2 gap-2\">\n              {user?.role !== 'data_collector' && (\n                <Link \n                  to=\"/dashboard\" \n                  className=\"w-full text-center px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-50 transition-colors\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  Dashboard\n                </Link>\n              )}\n              <Link \n                to=\"/report\" \n                className=\"w-full text-center px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-50 transition-colors\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                Report Activity\n              </Link>\n            </nav>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"ml-0 sm:ml-6 hidden sm:flex space-x-8\">\n            {user?.role !== 'data_collector' && (\n              <Link \n                to=\"/dashboard\" \n                className=\"inline-flex items-center px-1 pt-1 text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors\"\n              >\n                Dashboard\n              </Link>\n            )}\n            <Link \n              to=\"/report\" \n              className=\"inline-flex items-center px-1 pt-1 text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors\"\n            >\n              Report Activity\n            </Link>\n          </nav>\n        </div>\n\n        {/* User Menu Section */}\n        <div className=\"flex items-center gap-2 sm:gap-4 mt-2 sm:mt-0 w-full sm:w-auto justify-end\">\n          {!isOnline && (\n            <div className=\"flex items-center text-sm text-amber-600 mr-2\">\n              <WifiOff className=\"h-4 w-4 mr-1\" />\n              <span>Offline</span>\n            </div>\n          )}\n          <NotificationBell />\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button \n                variant=\"ghost\" \n                className=\"relative h-12 px-4 rounded-full w-full sm:w-auto hover:bg-gray-100 transition-colors\"\n              >\n                <span className=\"text-xs sm:text-sm font-medium truncate max-w-[120px] sm:max-w-none\">\n                  {user?.email}\n                </span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n              <DropdownMenuLabel className=\"font-normal\">\n                <div className=\"flex flex-col space-y-1\">\n                  <p className=\"text-sm font-medium leading-none\">{user?.email || user?.phone}</p>\n                  <p className=\"text-xs leading-none text-muted-foreground capitalize\">\n                    {user?.role.replace('_', ' ')}\n                  </p>\n                </div>\n              </DropdownMenuLabel>\n              <DropdownMenuSeparator />\n\n              {/* Admin Menu Items */}\n              {user?.role === 'admin' && (\n                <>\n                  <DropdownMenuItem onClick={() => navigate('/admin')}>\n                    Admin Dashboard\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => navigate('/admin/users')}>\n                    User Management\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => navigate('/admin/observations')}>\n                    Observations\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => navigate('/admin/settings')}>\n                    Settings\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => navigate('/admin/logs')}>\n                    System Logs\n                  </DropdownMenuItem>\n                  <DropdownMenuSeparator />\n                </>\n              )}\n\n              {/* Common Menu Items */}\n              <DropdownMenuItem asChild>\n                <button \n                  className=\"w-full text-left flex items-center px-2 py-1.5 text-sm\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    console.log('Logout button clicked directly');\n                    handleSignOut(e);\n                  }}\n                >\n                  <LogOut className=\"mr-2 h-4 w-4\" />\n                  <span>Log out</span>\n                </button>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </header>\n  );\n} ","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '@/contexts/NewAuthContext';\n\n/**\n * This component sets up the navigation callback for the auth context.\n * It should be rendered inside a Router component.\n */\nexport const NavigationSetup: React.FC = () => {\n  const navigate = useNavigate();\n  const { setNavigation } = useAuth();\n\n  useEffect(() => {\n    // Set up the navigation callback\n    setNavigation(navigate);\n    \n    // Clean up when the component unmounts\n    return () => {\n      // No need to call cleanup as it's handled by the AuthProvider\n    };\n  }, [navigate, setNavigation]);\n\n  return null; // This component doesn't render anything\n};\n\nexport default NavigationSetup;\n","import React, { Suspense, lazy, Component, ErrorInfo, ReactNode } from 'react';\nimport { Toaster } from '@/components/ui/toaster';\nimport { Toaster as Sonner } from '@/components/ui/sonner';\nimport { TooltipProvider } from '@/components/ui/tooltip';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { createHashRouter, RouterProvider, Outlet } from 'react-router-dom';\nimport { AuthProvider } from '@/contexts/NewAuthContext';\nimport { Footer } from '@/components/Footer';\nimport { ProtectedRoute } from '@/components/ProtectedRoute';\nimport { FullPageLoader } from './components/ui/FullPageLoader';\nimport { Header } from '@/components/Header';\nimport { NavigationSetup } from '@/components/NavigationSetup';\n\n// Lazy load pages\nconst Index = lazy(() => import('./pages/Index'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\nconst ReportActivityPage = lazy(() => import('./pages/ReportActivityPage'));\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst Admin = lazy(() => import('./pages/Admin'));\nconst Login = lazy(() => import('./components/Login'));\nconst AdminUsers = lazy(() => import('./pages/AdminUsers'));\nconst AdminObservations = lazy(() => import('./pages/AdminObservations'));\nconst AdminStatistics = lazy(() => import('./pages/AdminStatistics'));\nconst AdminSettings = lazy(() => import('./pages/AdminSettings'));\nconst AdminNotifications = lazy(() => import('./pages/AdminNotifications'));\n\nclass ErrorBoundary extends Component<{ children: ReactNode, fallback: ReactNode }, { hasError: boolean }> {\n  constructor(props: { children: ReactNode, fallback: ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_: Error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback;\n    }\n    return this.props.children;\n  }\n}\n\nconst queryClient = new QueryClient();\n\nconst ProtectedLayout = () => (\n  <div className=\"flex flex-col min-h-screen\">\n    <Header />\n    <NavigationSetup />\n    <main className=\"flex-grow container mx-auto p-4\">\n      <Outlet />\n    </main>\n    <Footer />\n  </div>\n);\n\nconst router = createHashRouter([\n  {\n    path: '/login',\n    element: <Suspense fallback={<FullPageLoader />}><Login /></Suspense>,\n  },\n  {\n    path: '/',\n    element: <ProtectedRoute />,\n    children: [\n      {\n        element: <ProtectedLayout />,\n        children: [\n          { index: true, element: <Suspense fallback={<FullPageLoader />}><Index /></Suspense> },\n          { path: 'report-activity', element: <Suspense fallback={<FullPageLoader />}><ReportActivityPage /></Suspense> },\n          { path: 'dashboard', element: (\n            <ErrorBoundary fallback={<div>Failed to load dashboard. Please try refreshing the page.</div>}>\n              <Suspense fallback={<FullPageLoader />}>\n                <Dashboard />\n              </Suspense>\n            </ErrorBoundary>\n          )},\n          {\n            path: 'admin',\n            element: <Suspense fallback={<FullPageLoader />}><Admin /></Suspense>\n          },\n          {\n            path: 'admin/users',\n            element: <Suspense fallback={<FullPageLoader />}><AdminUsers /></Suspense>\n          },\n          {\n            path: 'admin/observations',\n            element: <Suspense fallback={<FullPageLoader />}><AdminObservations /></Suspense>\n          },\n          {\n            path: 'admin/statistics',\n            element: <Suspense fallback={<FullPageLoader />}><AdminStatistics /></Suspense>\n          },\n          {\n            path: 'admin/settings',\n            element: <Suspense fallback={<FullPageLoader />}><AdminSettings /></Suspense>\n          },\n          {\n            path: 'admin/notifications',\n            element: <Suspense fallback={<FullPageLoader />}><AdminNotifications /></Suspense>\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: '*',\n    element: <Suspense fallback={<FullPageLoader />}><NotFound /></Suspense>,\n  },\n]);\n\nconst AppProviders: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <QueryClientProvider client={queryClient}>\n    <TooltipProvider>\n      <AuthProvider>\n        <Toaster />\n        <Sonner />\n        {children}\n      </AuthProvider>\n    </TooltipProvider>\n  </QueryClientProvider>\n);\n\nconst AppContent: React.FC = () => {\n  return <RouterProvider router={router} />;\n};\n\nconst App: React.FC = () => (\n  <AppProviders>\n    <AppContent />\n  </AppProviders>\n);\n\nexport default App;\n","// import { Ion } from \"cesium\";\n// Ion.defaultAccessToken = \"\"; // Leave blank unless you have a token\n(window as any).CESIUM_BASE_URL = \"/cesium\";\n\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./globals.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n"],"file":"assets/index-CVoE3lMI.js"}