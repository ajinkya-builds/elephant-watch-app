{"version":3,"file":"AdminObservations-DkYSWAl7.js","sources":["../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/components/ui/date-picker.tsx","../../src/pages/AdminObservations.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>;\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","import * as React from \"react\";\nimport { format } from \"date-fns\";\nimport { Calendar as CalendarIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\ninterface DatePickerProps {\n  date: Date | null;\n  setDate: (date: Date | null) => void;\n  className?: string;\n}\n\nexport function DatePicker({ date, setDate, className }: DatePickerProps) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant={\"outline\"}\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !date && \"text-muted-foreground\",\n            className\n          )}\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-0\">\n        <Calendar\n          mode=\"single\"\n          selected={date || undefined}\n          onSelect={(day: Date | undefined) => setDate(day || null)}\n          initialFocus\n        />\n      </PopoverContent>\n    </Popover>\n  );\n} ","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { supabase } from \"@/lib/supabaseClient\";\nimport { ActivityReport, ActivityObservation, User, ObservationType, IndirectSightingType, LossType, ActivityReportUpdate, ReportStatus } from \"@/types/activity-report\";\nimport { toast } from \"sonner\";\nimport { Loader2, ChevronLeft, ChevronRight, Download, CheckCircle2, AlertCircle, RefreshCw } from \"lucide-react\";\nimport { DatePicker } from \"@/components/ui/date-picker\";\nimport { Breadcrumb } from \"@/components/ui/breadcrumb\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\n\n// All user_id references in this file must be public.users.id, not the auth UID. If setting user_id, look up by auth_id.\n\ninterface SupabaseResponse {\n  id: string;\n  created_at: string;\n  updated_at: string;\n  user_id: string;\n  activity_date: string;\n  activity_time: string;\n  latitude: number;\n  longitude: number;\n  observation_type: 'direct' | 'indirect' | 'loss';\n  status: 'draft' | 'submitted' | 'synced' | 'error';\n  is_offline: boolean;\n  users?: any;\n  activity_observation?: any[];\n  [key: string]: any;\n}\n\nfunction isSupabaseResponse(data: any): data is SupabaseResponse {\n  return (\n    data &&\n    typeof data.id === 'string' &&\n    typeof data.created_at === 'string' &&\n    typeof data.updated_at === 'string' &&\n    typeof data.user_id === 'string' &&\n    typeof data.activity_date === 'string' &&\n    typeof data.activity_time === 'string' &&\n    typeof data.latitude === 'number' &&\n    typeof data.longitude === 'number' &&\n    ['direct', 'indirect', 'loss'].includes(data.observation_type) &&\n    ['draft', 'submitted', 'synced', 'error'].includes(data.status) &&\n    typeof data.is_offline === 'boolean'\n  );\n}\n\ninterface SupabaseUser {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  mobile?: string;\n}\n\ninterface SupabaseActivityObservation {\n  id: string;\n  activity_report_id: string;\n  total_elephants: number;\n  adult_male_count: number;\n  adult_female_count: number;\n  sub_adult_male_count: number;\n  sub_adult_female_count: number;\n  calf_count: number;\n  unknown_count: number;\n  indirect_sighting_type?: string;\n  damage_done: string;\n  damage_description?: string;\n  loss_type?: string;\n  compass_bearing?: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface SupabaseActivityReport {\n  id: string;\n  created_at: string;\n  updated_at: string;\n  user_id: string;\n  activity_date: string;\n  activity_time: string;\n  latitude: number;\n  longitude: number;\n  observation_type: 'direct' | 'indirect' | 'loss';\n  status: 'draft' | 'submitted' | 'synced' | 'error';\n  is_offline: boolean;\n  division_id?: string;\n  range_id?: string;\n  beat_id?: string;\n  division_name?: string;\n  range_name?: string;\n  beat_name?: string;\n  compass_bearing?: number;\n  indirect_sighting_type?: string;\n  damage_done?: string;\n  damage_description?: string;\n  loss_type?: string;\n  photo_url?: string;\n  users?: SupabaseUser;\n  activity_observation?: SupabaseActivityObservation[];\n  reporter_mobile?: string;\n  total_elephants?: number;\n  adult_male_count?: number;\n  adult_female_count?: number;\n  unknown_count?: number;\n  associated_division?: string;\n  associated_range?: string;\n  associated_beat?: string;\n  email?: string;\n}\n\nfunction isSupabaseActivityReport(data: any): data is SupabaseActivityReport {\n  return (\n    typeof data === 'object' &&\n    data !== null &&\n    typeof data.id === 'string' &&\n    typeof data.created_at === 'string' &&\n    typeof data.updated_at === 'string' &&\n    typeof data.user_id === 'string' &&\n    typeof data.activity_date === 'string' &&\n    typeof data.activity_time === 'string' &&\n    typeof data.latitude === 'number' &&\n    typeof data.longitude === 'number' &&\n    ['direct', 'indirect', 'loss'].includes(data.observation_type) &&\n    ['draft', 'submitted', 'synced', 'error'].includes(data.status) &&\n    typeof data.is_offline === 'boolean'\n  );\n}\n\nconst indirectSightingTypes: IndirectSightingType[] = [\n  'Pugmark', 'Dung', 'Broken Branches', 'Sound', 'Eyewitness'\n];\nconst lossTypes: LossType[] = [\n  'No loss', 'property', 'crop', 'livestock', 'fencing', 'solar panels', 'FD establishment', 'Other'\n];\n\nfunction toIndirectSightingType(val: string | undefined): IndirectSightingType | undefined {\n  return indirectSightingTypes.includes(val as IndirectSightingType) ? (val as IndirectSightingType) : undefined;\n}\nfunction toLossType(val: string | undefined): LossType | undefined {\n  return lossTypes.includes(val as LossType) ? (val as LossType) : undefined;\n}\n\nfunction convertToActivityReport(data: SupabaseResponse): ActivityReport {\n  const activityObservation = data.activity_observation?.[0];\n  return {\n    ...data,\n    latitude: String(data.latitude),\n    longitude: String(data.longitude),\n    activity_date: new Date(data.activity_date),\n    created_at: new Date(data.created_at),\n    updated_at: new Date(data.updated_at),\n    activity_observation: activityObservation ? [{\n      ...activityObservation,\n      created_at: new Date(activityObservation.created_at),\n      updated_at: activityObservation.updated_at ? new Date(activityObservation.updated_at) : undefined,\n      indirect_sighting_type: toIndirectSightingType(activityObservation.indirect_sighting_type),\n      loss_type: toLossType(activityObservation.loss_type),\n      damage_done: activityObservation.damage_done || '',\n      damage_description: activityObservation.damage_description || '',\n      unknown_count: activityObservation.unknown_count ?? 0,\n      calf_count: activityObservation.calf_count ?? 0,\n      adult_male_count: activityObservation.adult_male_count ?? 0,\n      adult_female_count: activityObservation.adult_female_count ?? 0,\n      sub_adult_male_count: activityObservation.sub_adult_male_count ?? 0,\n      sub_adult_female_count: activityObservation.sub_adult_female_count ?? 0,\n      total_elephants: activityObservation.total_elephants ?? 0\n    }] : undefined\n  };\n}\n\ninterface Observation extends ActivityReport {\n  activity_observation?: ActivityObservation[];\n  users?: User;\n}\n\ninterface SupabaseResponseWithUsers extends SupabaseResponse {\n  users: SupabaseUser;\n}\n\nexport default function AdminObservations() {\n  const [observations, setObservations] = useState<Observation[]>([]);\n  const [viewObs, setViewObs] = useState<Observation | null>(null);\n  const [editObs, setEditObs] = useState<Observation | null>(null);\n  const [selectedReports, setSelectedReports] = useState<Set<string>>(new Set());\n  const [filters, setFilters] = useState({\n    reporterName: \"\",\n    dateRange: null as Date | null,\n    showUnsyncedOnly: false\n  });\n  const [sortConfig, setSortConfig] = useState<{ key: keyof ActivityReport; direction: 'asc' | 'desc' } | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [syncing, setSyncing] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [activityDate, setActivityDate] = useState<Date | null>(null);\n  const navigate = useNavigate();\n\n  const fetchObservations = async () => {\n    try {\n      const { data: reports, error: reportsError } = await supabase\n        .from('activity_reports')\n        .select('*, users(*)');\n\n      if (reportsError) throw reportsError;\n\n      const observations: Observation[] = Array.isArray(reports)\n        ? reports\n            .filter((report): report is SupabaseResponseWithUsers => \n              isSupabaseResponse(report) && 'users' in report)\n            .map(convertToActivityReport)\n        : [];\n\n      setObservations(observations);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch observations');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchObservations();\n  }, []);\n\n  const handleExport = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('activity_reports')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      // Convert data to CSV\n      const headers = [\n        'Date/Time',\n        'Division',\n        'Range',\n        'Beat',\n        'Total Elephants',\n        'Damage Done',\n        'Reporter Name',\n        'Email',\n        'Contact'\n      ];\n\n      const validReports = (data || [])\n        .filter(isSupabaseActivityReport)\n        .map(convertToActivityReport);\n\n      const csvContent = [\n        headers.join(','),\n        ...validReports.map(obs => [\n          new Date(obs.created_at).toLocaleString(),\n          obs.division_name || '',\n          obs.range_name || '',\n          obs.beat_name || '',\n          obs.total_elephants || 0,\n          obs.damage_done || '',\n          `${obs.users?.first_name || ''} ${obs.users?.last_name || ''}`.trim() || 'Unknown',\n          obs.users?.email || '',\n          obs.reporter_mobile || ''\n        ].join(','))\n      ].join('\\n');\n\n      // Create and download file\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `activity_reports_${new Date().toISOString()}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error exporting data:', error);\n      toast.error('Failed to export data');\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      const { error } = await supabase\n        .from('activity_reports')\n        .delete()\n        .eq('id', id);\n\n      if (error) throw error;\n      setObservations(observations.filter(obs => obs.id !== id));\n      toast.success('Report deleted successfully');\n    } catch (error) {\n      console.error('Error deleting report:', error);\n      toast.error('Failed to delete report');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (selectedReports.size === 0) {\n      toast.warning('Please select reports to delete');\n      return;\n    }\n\n    try {\n      const { error } = await supabase\n        .from('activity_reports')\n        .delete()\n        .in('id', Array.from(selectedReports));\n\n      if (error) throw error;\n      setObservations(observations.filter(obs => !selectedReports.has(obs.id)));\n      setSelectedReports(new Set());\n      toast.success('Selected reports deleted successfully');\n    } catch (error) {\n      console.error('Error deleting reports:', error);\n      toast.error('Failed to delete reports');\n    }\n  };\n\n  const handleSort = (key: keyof ActivityReport) => {\n    setSortConfig(current => ({\n      key,\n      direction: current?.key === key && current.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleEdit = async (formData: FormData) => {\n    if (!editObs?.id) return;\n    \n    try {\n      const result = await supabase\n        .from('activity_reports')\n        .update({\n          activity_date: formData.get('activity_date'),\n          activity_time: formData.get('activity_time'),\n          latitude: formData.get('latitude'),\n          longitude: formData.get('longitude'),\n          observation_type: formData.get('observation_type'),\n          status: formData.get('status'),\n          is_offline: formData.get('is_offline') === 'true',\n          division_id: formData.get('division_id'),\n          range_id: formData.get('range_id'),\n          beat_id: formData.get('beat_id'),\n          compass_bearing: formData.get('compass_bearing'),\n          indirect_sighting_type: formData.get('indirect_sighting_type'),\n          damage_done: formData.get('damage_done'),\n          damage_description: formData.get('damage_description'),\n          loss_type: formData.get('loss_type'),\n          photo_url: formData.get('photo_url'),\n          reporter_mobile: formData.get('reporter_mobile'),\n          total_elephants: formData.get('total_elephants'),\n          adult_male_count: formData.get('adult_male_count'),\n          adult_female_count: formData.get('adult_female_count'),\n          unknown_count: formData.get('unknown_count'),\n          associated_division: formData.get('associated_division'),\n          associated_range: formData.get('associated_range'),\n          associated_beat: formData.get('associated_beat'),\n          email: formData.get('email')\n        })\n        .eq('id', editObs.id);\n\n      if (result.error) {\n        throw result.error;\n      }\n\n      toast.success('Observation updated successfully');\n      setEditObs(null);\n      fetchObservations();\n    } catch (error) {\n      toast.error('Failed to update observation');\n      console.error('Error updating observation:', error);\n    }\n  };\n\n  const handleManualSync = async (reportId: string) => {\n    setSyncing(reportId);\n    try {\n      const result = await supabase\n        .from('activity_reports')\n        .update({ status: 'synced' })\n        .eq('id', reportId);\n\n      if (result.error) {\n        throw result.error;\n      }\n\n      toast.success('Report synced successfully');\n      fetchObservations();\n    } catch (error) {\n      toast.error('Failed to sync report');\n      console.error('Error syncing report:', error);\n    } finally {\n      setSyncing(null);\n    }\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n\n  const handleImport = async () => {\n    if (!selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n\n    try {\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        const text = e.target?.result;\n        if (!text) throw new Error('Failed to read file');\n\n        const observations = JSON.parse(text as string);\n        const { error } = await supabase\n          .from('activity_reports')\n          .insert(observations);\n\n        if (error) throw error;\n        await fetchObservations();\n      };\n      reader.readAsText(selectedFile);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to import observations');\n    }\n  };\n\n  const getStatusColor = (status: ReportStatus) => {\n    switch (status) {\n      case 'draft':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'submitted':\n        return 'bg-blue-100 text-blue-800';\n      case 'synced':\n        return 'bg-green-100 text-green-800';\n      case 'error':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-blue-50 py-10\">\n      <div className=\"container mx-auto p-2 sm:p-4\">\n        {/* Breadcrumb */}\n        <nav className=\"mb-6\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n            <li>\n              <button\n                className=\"hover:underline text-green-800 font-medium\"\n                onClick={() => navigate('/admin')}\n              >\n                Admin Panel\n              </button>\n            </li>\n            <li>\n              <span className=\"mx-1\">/</span>\n            </li>\n            <li className=\"text-gray-600\">Observations</li>\n          </ol>\n        </nav>\n\n        <h1 className=\"text-3xl font-bold mb-8 text-center bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent\">\n          Observation & Report Management\n        </h1>\n\n        <Card className=\"border-blue-100 shadow-lg\">\n          <CardHeader className=\"bg-gradient-to-r from-blue-50 to-blue-100\">\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n              <CardTitle className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent\">User-Submitted Reports</CardTitle>\n              <div className=\"flex gap-2\">\n                <Button \n                  variant=\"outline\"\n                  onClick={() => setFilters(prev => ({ ...prev, showUnsyncedOnly: !prev.showUnsyncedOnly }))}\n                  className={`border-blue-200 hover:bg-blue-50 hover:text-blue-600 ${filters.showUnsyncedOnly ? \"bg-red-100\" : \"\"}`}\n                >\n                  {filters.showUnsyncedOnly ? \"Show All\" : \"Show Unsynced Only\"}\n                </Button>\n                <Button \n                  variant=\"outline\"\n                  onClick={handleExport}\n                  className=\"flex items-center gap-2 border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  Export CSV\n                </Button>\n                <Button \n                  variant=\"destructive\" \n                  onClick={handleBulkDelete}\n                  disabled={selectedReports.size === 0}\n                  className=\"bg-red-500 hover:bg-red-600\"\n                >\n                  Delete Selected\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"mb-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <Input\n                placeholder=\"Search by reporter name...\"\n                value={filters.reporterName}\n                onChange={(e) => setFilters(prev => ({ ...prev, reporterName: e.target.value }))}\n                className=\"border-blue-100 focus:border-blue-500 focus:ring-blue-500\"\n              />\n              <div className=\"flex items-center gap-4 mb-4\">\n                <DatePicker\n                  date={filters.dateRange}\n                  setDate={(date: Date | null) => setFilters(prev => ({ ...prev, dateRange: date }))}\n                />\n              </div>\n              <Select\n                value={pageSize.toString()}\n                onValueChange={(value) => setPageSize(Number(value))}\n              >\n                <SelectTrigger className=\"border-blue-100 focus:border-blue-500 focus:ring-blue-500\">\n                  <SelectValue placeholder=\"Rows per page\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"10\">10 rows</SelectItem>\n                  <SelectItem value=\"25\">25 rows</SelectItem>\n                  <SelectItem value=\"50\">50 rows</SelectItem>\n                  <SelectItem value=\"100\">100 rows</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"relative\">\n              {isLoading && (\n                <div className=\"absolute inset-0 bg-white/50 backdrop-blur-sm flex items-center justify-center z-10\">\n                  <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />\n                </div>\n              )}\n              \n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow className=\"bg-blue-50\">\n                      <TableHead className=\"w-[50px]\">\n                        <Checkbox\n                          checked={selectedReports.size === observations.length}\n                          onCheckedChange={(checked) => {\n                            if (checked) {\n                              setSelectedReports(new Set(observations.map(obs => obs.id)));\n                            } else {\n                              setSelectedReports(new Set());\n                            }\n                          }}\n                          className=\"border-blue-200\"\n                        />\n                      </TableHead>\n                      <TableHead \n                        className=\"cursor-pointer text-blue-900\"\n                        onClick={() => handleSort('created_at')}\n                      >\n                        Date/Time {sortConfig?.key === 'created_at' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\n                      </TableHead>\n                      <TableHead className=\"text-blue-900\">Reporter</TableHead>\n                      <TableHead className=\"text-blue-900\">Details</TableHead>\n                      <TableHead className=\"text-blue-900\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {observations.map(obs => {\n                      const isSynced = obs.activity_observation && obs.activity_observation.length > 0;\n                      return (\n                        <TableRow key={obs.id} className=\"hover:bg-blue-50/50 transition-colors\">\n                          <TableCell>\n                            <Checkbox\n                              checked={selectedReports.has(obs.id)}\n                              onCheckedChange={(checked) => {\n                                const newSelected = new Set(selectedReports);\n                                if (checked) {\n                                  newSelected.add(obs.id);\n                                } else {\n                                  newSelected.delete(obs.id);\n                                }\n                                setSelectedReports(newSelected);\n                              }}\n                              className=\"border-blue-200\"\n                            />\n                          </TableCell>\n                          <TableCell>\n                            {obs.created_at ? new Date(obs.created_at).toLocaleString() : 'N/A'}\n                          </TableCell>\n                          <TableCell>{`${obs.users?.first_name || ''} ${obs.users?.last_name || ''}`.trim() || 'Unknown'}</TableCell>\n                          <TableCell>\n                            {obs.total_elephants && obs.total_elephants > 0 ?\n                              `${obs.total_elephants} elephants` :\n                              obs.observation_type === 'indirect' ? 'Indirect Sign' : 'Loss Report'\n                            }\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-2\">\n                              {isSynced ? (\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"default\"\n                                  className=\"flex items-center gap-1 bg-gradient-to-r from-blue-600 to-green-600 hover:from-blue-700 hover:to-green-700 text-white\"\n                                  disabled\n                                >\n                                  <CheckCircle2 className=\"w-4 h-4\" />\n                                  Synced\n                                </Button>\n                              ) : (\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"destructive\"\n                                  onClick={() => handleManualSync(obs.id)}\n                                  disabled={syncing === obs.id}\n                                  className=\"flex items-center gap-1 bg-red-500 hover:bg-red-600\"\n                                >\n                                  {syncing === obs.id ? (\n                                    <>\n                                      <CheckCircle2 className=\"w-4 h-4\" />\n                                      Syncing...\n                                    </>\n                                  ) : (\n                                    <>\n                                      <RefreshCw className=\"w-4 h-4\" />\n                                      Sync Now\n                                    </>\n                                  )}\n                                </Button>\n                              )}\n                              <Button \n                                size=\"sm\" \n                                variant=\"outline\" \n                                onClick={() => setViewObs(obs)}\n                                className=\"border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                              >\n                                View\n                              </Button>\n                              <Button \n                                size=\"sm\" \n                                variant=\"outline\" \n                                onClick={() => setEditObs(obs)}\n                                className=\"border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                              >\n                                Edit\n                              </Button>\n                              <Button \n                                size=\"sm\" \n                                variant=\"destructive\" \n                                onClick={() => handleDelete(obs.id)}\n                                className=\"bg-red-500 hover:bg-red-600\"\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </div>\n\n              <div className=\"mt-4 flex items-center justify-between\">\n                <div className=\"text-sm text-blue-900\">\n                  Showing {((currentPage - 1) * pageSize) + 1} to {Math.min(currentPage * pageSize, totalRecords)} of {totalRecords} records\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                    className=\"border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                  >\n                    <ChevronLeft className=\"w-4 h-4\" />\n                  </Button>\n                  <span className=\"text-sm text-blue-900\">\n                    Page {currentPage} of {totalPages}\n                  </span>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                    className=\"border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                  >\n                    <ChevronRight className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* View Modal */}\n        {viewObs && (\n          <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-xl shadow-xl p-8 w-full max-w-2xl border border-blue-100\">\n              <h2 className=\"text-2xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent\">View Report</h2>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-blue-900\"><strong>Date:</strong> {viewObs.created_at ? new Date(viewObs.created_at).toLocaleDateString() : 'N/A'}</p>\n                  <p className=\"text-blue-900\"><strong>Time:</strong> {viewObs.created_at ? new Date(viewObs.created_at).toLocaleTimeString() : 'N/A'}</p>\n                  <p className=\"text-blue-900\"><strong>Reporter:</strong> {`${viewObs.users?.first_name || ''} ${viewObs.users?.last_name || ''}`.trim() || 'Unknown'}</p>\n                  {viewObs.reporter_mobile && <p className=\"text-blue-900\"><strong>Contact:</strong> {viewObs.reporter_mobile}</p>}\n                  {viewObs.email && <p className=\"text-blue-900\"><strong>Email:</strong> {viewObs.email}</p>}\n                  {viewObs.associated_division && <p className=\"text-blue-900\"><strong>Division:</strong> {viewObs.associated_division}</p>}\n                  {viewObs.associated_range && <p className=\"text-blue-900\"><strong>Range:</strong> {viewObs.associated_range}</p>}\n                  {viewObs.associated_beat && <p className=\"text-blue-900\"><strong>Beat:</strong> {viewObs.associated_beat}</p>}\n                </div>\n                <div>\n                  {viewObs.total_elephants !== undefined && viewObs.total_elephants > 0 && (\n                    <p className=\"text-blue-900\">\n                      <strong>Total Elephants:</strong> {viewObs.total_elephants}\n                    </p>\n                  )}\n                  {viewObs.damage_done && <p className=\"text-blue-900\"><strong>Damage:</strong> {viewObs.damage_done}</p>}\n                  {viewObs.damage_description && <p className=\"text-blue-900\"><strong>Description:</strong> {viewObs.damage_description}</p>}\n                  {viewObs.latitude && <p className=\"text-blue-900\"><strong>Latitude:</strong> {viewObs.latitude}</p>}\n                  {viewObs.longitude && <p className=\"text-blue-900\"><strong>Longitude:</strong> {viewObs.longitude}</p>}\n                  {viewObs.activity_observation?.[0] && (\n                    <>\n                      <p className=\"mt-4 font-semibold bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent\">Observation Details:</p>\n                      {viewObs.activity_observation[0].total_elephants > 0 && (\n                        <p className=\"text-blue-900\"><strong>Observed Elephants:</strong> {viewObs.activity_observation[0].total_elephants}</p>\n                      )}\n                      {viewObs.activity_observation[0].adult_male_count > 0 && (\n                        <p className=\"text-blue-900\"><strong>Adult Males:</strong> {viewObs.activity_observation[0].adult_male_count}</p>\n                      )}\n                      {viewObs.activity_observation[0].adult_female_count > 0 && (\n                        <p className=\"text-blue-900\"><strong>Adult Females:</strong> {viewObs.activity_observation[0].adult_female_count}</p>\n                      )}\n                      {viewObs.activity_observation[0].sub_adult_male_count > 0 && (\n                        <p className=\"text-blue-900\"><strong>Sub-adult Males:</strong> {viewObs.activity_observation[0].sub_adult_male_count}</p>\n                      )}\n                      {viewObs.activity_observation[0].sub_adult_female_count > 0 && (\n                        <p className=\"text-blue-900\"><strong>Sub-adult Females:</strong> {viewObs.activity_observation[0].sub_adult_female_count}</p>\n                      )}\n                      {viewObs.activity_observation[0].calf_count > 0 && (\n                        <p className=\"text-blue-900\"><strong>Calves:</strong> {viewObs.activity_observation[0].calf_count}</p>\n                      )}\n                      {viewObs.activity_observation[0].damage_done && (\n                        <p className=\"text-blue-900\"><strong>Observed Damage:</strong> {viewObs.activity_observation[0].damage_done}</p>\n                      )}\n                      {viewObs.activity_observation[0].damage_description && (\n                        <p className=\"text-blue-900\"><strong>Damage Description:</strong> {viewObs.activity_observation[0].damage_description}</p>\n                      )}\n                      {viewObs.activity_observation[0].created_at && (\n                        <p className=\"text-blue-900\"><strong>Observation Date:</strong> {new Date(viewObs.activity_observation[0].created_at).toLocaleString()}</p>\n                      )}\n                    </>\n                  )}\n                </div>\n              </div>\n              <div className=\"mt-6 flex justify-end\">\n                <Button \n                  variant=\"outline\" \n                  onClick={() => setViewObs(null)}\n                  className=\"border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                >\n                  Close\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Modal */}\n        {editObs && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n            <div className=\"bg-white p-6 rounded-lg max-w-2xl w-full\">\n              <h2 className=\"text-xl font-bold mb-4\">Edit Observation</h2>\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                const form = e.currentTarget;\n                if (form instanceof HTMLFormElement) {\n                  const formData = new FormData(form);\n                  handleEdit(formData);\n                }\n              }}>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"activity_date\">Date</Label>\n                    <DatePicker\n                      date={activityDate}\n                      setDate={setActivityDate}\n                      className=\"w-full\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"activity_time\">Time</Label>\n                    <Input \n                      name=\"activity_time\" \n                      type=\"time\" \n                      defaultValue={editObs.activity_date.toISOString().split('T')[1]}\n                      className=\"border-blue-100 focus:border-blue-500 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label htmlFor=\"observation_type\">Observation Type</Label>\n                    <Select\n                      value={editObs.observation_type}\n                      onValueChange={(value) => {\n                        const newObservationType = value as ObservationType;\n                        handleEdit(new FormData(new Map([\n                          ['activity_date', editObs.activity_date.toISOString()],\n                          ['activity_time', editObs.activity_date.toISOString().split('T')[1]],\n                          ['observation_type', newObservationType],\n                          ['latitude', editObs.latitude],\n                          ['longitude', editObs.longitude]\n                        ])));\n                      }}\n                    >\n                      <SelectTrigger className=\"border-blue-100 focus:border-blue-500 focus:ring-blue-500\">\n                        <SelectValue placeholder=\"Select observation type\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"direct\">Direct</SelectItem>\n                        <SelectItem value=\"indirect\">Indirect</SelectItem>\n                        <SelectItem value=\"loss\">Loss</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label htmlFor=\"latitude\">Latitude</Label>\n                    <Input \n                      name=\"latitude\" \n                      type=\"text\" \n                      defaultValue={editObs.latitude}\n                      className=\"border-blue-100 focus:border-blue-500 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label htmlFor=\"longitude\">Longitude</Label>\n                    <Input \n                      name=\"longitude\" \n                      type=\"text\" \n                      defaultValue={editObs.longitude}\n                      className=\"border-blue-100 focus:border-blue-500 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex justify-end gap-2 mt-6\">\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    onClick={() => setEditObs(null)}\n                    className=\"border-blue-200 hover:bg-blue-50 hover:text-blue-600\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button \n                    type=\"submit\"\n                    className=\"bg-gradient-to-r from-blue-600 to-green-600 hover:from-blue-700 hover:to-green-700 text-white shadow-sm\"\n                  >\n                    Save Changes\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":["Calendar","className","classNames","showOutsideDays","props","jsx","DayPicker","cn","buttonVariants","ChevronLeft","ChevronRight","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","React.forwardRef","align","sideOffset","ref","PopoverPrimitive.Portal","PopoverPrimitive.Content","DatePicker","date","setDate","jsxs","Button","CalendarIcon","format","day","isSupabaseResponse","data","isSupabaseActivityReport","indirectSightingTypes","lossTypes","toIndirectSightingType","val","toLossType","convertToActivityReport","activityObservation","_a","AdminObservations","observations","setObservations","useState","viewObs","setViewObs","editObs","setEditObs","selectedReports","setSelectedReports","filters","setFilters","sortConfig","setSortConfig","isLoading","setIsLoading","currentPage","setCurrentPage","totalPages","setTotalPages","totalRecords","setTotalRecords","pageSize","setPageSize","syncing","setSyncing","loading","setLoading","error","setError","selectedDate","setSelectedDate","selectedFile","setSelectedFile","activityDate","setActivityDate","navigate","useNavigate","fetchObservations","reports","reportsError","supabase","report","err","useEffect","handleExport","headers","validReports","csvContent","obs","_b","_c","blob","link","url","toast","handleDelete","id","handleBulkDelete","handleSort","key","current","handleEdit","formData","result","handleManualSync","reportId","Card","CardHeader","CardTitle","prev","Download","CardContent","Input","e","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Loader2","Table","TableHeader","TableRow","TableHead","Checkbox","checked","TableBody","isSynced","TableCell","newSelected","CheckCircle2","Fragment","RefreshCw","form","Label","newObservationType"],"mappings":"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"}