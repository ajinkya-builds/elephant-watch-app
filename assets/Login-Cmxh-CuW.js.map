{"version":3,"file":"Login-Cmxh-CuW.js","sources":["../../src/lib/supabaseAdmin.ts","../../src/components/Login.tsx"],"sourcesContent":["import { supabase } from './supabaseClient';\n\n/**\n * The frontend should never expose the service-role key, but several legacy\n * components still import `supabaseAdmin` expecting a Supabase client with the\n * same API surface.  We therefore export the normal client under that name.\n *\n * TODO: migrate those components to import { supabase } from '@/lib/supabaseClient'\n * directly and remove this shim.\n */\nexport const supabaseAdmin = supabase; ","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { supabaseAdmin } from \"@/lib/supabaseAdmin\";\nimport { toast } from \"sonner\";\nimport { Loader2 } from \"lucide-react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useAuth } from '@/hooks/useAuth';\nimport { checkSupabaseConnection } from \"@/lib/supabaseClient\";\nimport { motion } from \"framer-motion\";\n\n// Helper to get browser info\nfunction getBrowserInfo() {\n  return navigator.userAgent;\n}\n\n// Helper to get IP address\nasync function getIpAddress() {\n  try {\n    const res = await fetch('https://api.ipify.org?format=json');\n    const data = await res.json();\n    return data.ip;\n  } catch {\n    return '';\n  }\n}\n\nconst logLoginAttempt = async (identifier: string, status: 'success' | 'failed') => {\n  try {\n    const { data: browserInfo } = await supabaseAdmin.rpc('get_browser_info');\n    const { data: ipInfo } = await supabaseAdmin.rpc('get_ip_info');\n\n    const isEmail = identifier.includes('@');\n    const ip = ipInfo && typeof ipInfo === 'object' && ipInfo !== null && 'ip' in ipInfo ? ipInfo.ip : null;\n    const userAgent = browserInfo && typeof browserInfo === 'object' && browserInfo !== null && 'user_agent' in browserInfo ? browserInfo.user_agent : null;\n    const loginData = {\n      email: isEmail ? identifier : null,\n      phone: !isEmail ? identifier : null,\n      login_type: isEmail ? 'email' : 'phone',\n      status,\n      time: new Date().toISOString(),\n      ip,\n      browser: userAgent\n    };\n\n    const { error } = await supabaseAdmin\n      .from('login_logs')\n      .insert([loginData]);\n\n    if (error) {\n      console.error('Error logging login attempt:', error);\n    }\n  } catch (error) {\n    console.error('Error logging login attempt:', error);\n  }\n};\n\nexport default function Login() {\n  const [identifier, setIdentifier] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { signIn, error: authError } = useAuth();\n\n  useEffect(() => {\n    // Only check connection to show error if connection fails\n    const checkConnection = async () => {\n      const isConnected = await checkSupabaseConnection();\n      if (!isConnected) {\n        toast.error(\"Failed to connect to Supabase. Please check your configuration.\");\n      }\n      // Success message removed to prevent showing on every refresh\n    };\n    checkConnection();\n  }, []);\n\n  const validateIdentifier = (value: string) => {\n    // Check if it's an email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    // Check if it's a phone number\n    const phoneRegex = /^\\d{10}$/;\n    \n    return emailRegex.test(value) || phoneRegex.test(value);\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Validate identifier\n      if (!validateIdentifier(identifier)) {\n        setError(\"Please enter a valid email or phone number\");\n        setIsLoading(false);\n        return;\n      }\n\n      console.log('Starting login process for:', identifier);\n\n      // Attempt to sign in\n      console.log('Calling signIn with:', { identifier });\n      const { user, error } = await signIn(identifier, password, rememberMe);\n      console.log('Sign in result:', { user, error });\n      \n      if (error) {\n        throw error;\n      }\n\n      if (!user) {\n        throw new Error('No user data received after login');\n      }\n\n      // Log successful login attempt\n      await logLoginAttempt(identifier, 'success');\n      \n      // Always redirect to home page after login regardless of previous location\n      const redirectPath = '/';\n      console.log(\"Login successful, redirecting to home page\");\n      \n      // Navigate to the home page\n      navigate(redirectPath, { replace: true });\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred during login\";\n      \n      // Type assertion for the error object\n      const errorObj = err as any;\n      console.error(\"Error details:\", {\n        error: err,\n        name: errorObj?.name,\n        code: errorObj?.code,\n        status: errorObj?.status,\n        response: errorObj?.response\n      });\n      setError(errorMessage);\n      toast.error(errorMessage);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-blue-50\">\n      <div className=\"container mx-auto py-12 px-4\">\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center mb-16\"\n        >\n          <div className=\"flex items-center justify-center mb-8\">\n            <img\n              src={`${import.meta.env.BASE_URL}elephant_photo.png`}\n              alt=\"Elephant Logo\"\n              className=\"w-24 h-24 object-contain\"\n            />\n          </div>\n          <motion.h1 \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.3 }}\n            className=\"text-6xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent\"\n          >\n            Eravat\n          </motion.h1>\n          <motion.p \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.4 }}\n            className=\"text-xl text-gray-600 max-w-2xl mx-auto\"\n          >\n            Wild Elephant Monitoring System\n          </motion.p>\n          <motion.p \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.5 }}\n            className=\"text-lg text-gray-500 mt-2\"\n          >\n            जंगली हाथी निगरानी प्रणाली (2025)\n          </motion.p>\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.6 }}\n          className=\"max-w-md mx-auto\"\n        >\n          <Card className=\"bg-white shadow-lg border-0 rounded-2xl overflow-hidden\">\n            <CardHeader className=\"space-y-1\">\n              <CardTitle className=\"text-2xl font-bold text-gray-900\">Welcome back</CardTitle>\n              <CardDescription className=\"text-gray-600\">\n                Enter your email or phone number to access the system\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"identifier\" className=\"text-gray-700\">Email or Phone Number</Label>\n                  <Input\n                    id=\"identifier\"\n                    type=\"text\"\n                    placeholder=\"Enter email or 10-digit phone number\"\n                    value={identifier}\n                    onChange={(e) => setIdentifier(e.target.value)}\n                    required\n                    className=\"focus:ring-blue-600 border-gray-200\"\n                    disabled={isLoading}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"password\" className=\"text-gray-700\">Password</Label>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    className=\"focus:ring-blue-600 border-gray-200\"\n                    disabled={isLoading}\n                  />\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"remember\"\n                    checked={rememberMe}\n                    onCheckedChange={(checked) => setRememberMe(checked as boolean)}\n                    disabled={isLoading}\n                    className=\"border-gray-200\"\n                  />\n                  <Label htmlFor=\"remember\" className=\"text-sm font-normal text-gray-600\">\n                    Remember me\n                  </Label>\n                </div>\n                <Button \n                  type=\"submit\" \n                  className=\"w-full bg-gradient-to-r from-blue-600 to-green-600 hover:from-blue-700 hover:to-green-700 text-white rounded-xl py-6 text-lg font-semibold transition-all duration-300\" \n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Logging in...\n                    </>\n                  ) : (\n                    \"Login\"\n                  )}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}"],"names":["supabaseAdmin","supabase","logLoginAttempt","identifier","status","browserInfo","ipInfo","isEmail","ip","userAgent","loginData","error","Login","setIdentifier","useState","password","setPassword","isLoading","setIsLoading","rememberMe","setRememberMe","setError","navigate","useNavigate","useLocation","signIn","useAuth","useEffect","checkSupabaseConnection","toast","validateIdentifier","value","emailRegex","phoneRegex","handleLogin","e","user","redirectPath","err","errorMessage","errorObj","jsxs","motion","jsx","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","Input","Checkbox","checked","Button","Fragment","Loader2"],"mappings":"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"}