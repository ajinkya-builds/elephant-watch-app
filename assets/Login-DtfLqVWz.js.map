{"version":3,"file":"Login-DtfLqVWz.js","sources":["../../src/lib/supabaseAdmin.ts","../../src/components/ui/checkbox.tsx","../../src/hooks/useAuth.ts","../../src/components/Login.tsx"],"sourcesContent":["import { supabase } from './supabaseClient';\n\n/**\n * The frontend should never expose the service-role key, but several legacy\n * components still import `supabaseAdmin` expecting a Supabase client with the\n * same API surface.  We therefore export the normal client under that name.\n *\n * TODO: migrate those components to import { supabase } from '@/lib/supabaseClient'\n * directly and remove this shim.\n */\nexport const supabaseAdmin = supabase; ","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { useContext, useMemo } from 'react';\nimport type { UserRole, AuthContextType, ExtendedUser } from '@/contexts/NewAuthContext';\nimport AuthContext from '@/contexts/NewAuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from '@/components/ui/use-toast';\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  const {\n    user,\n    session,\n    loading,\n    error,\n    signIn,\n    signOut: contextSignOut,\n    resetPassword,\n    updatePassword,\n    refreshUser,\n    initialized,\n  } = context;\n\n  const isAuthenticated = useMemo(() => !!user && !!session, [user, session]);\n  const isAdmin = useMemo(() => user?.role === 'admin', [user]);\n  const hasRole = useMemo(() => (role: UserRole) => user?.role === role, [user]);\n  const hasAnyRole = useMemo(() => (roles: UserRole[]) => user ? roles.includes(user.role) : false, [user]);\n  const hasAllRoles = useMemo(() => (roles: UserRole[]) => user ? roles.every(role => user.role === role) : false, [user]);\n\n  const signOut = async () => {\n    try {\n      await contextSignOut();\n      toast({\n        title: 'Signed out',\n        description: 'You have been signed out successfully.',\n      });\n      navigate('/login');\n    } catch (error) {\n      console.error('Sign out error:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to sign out. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const checkPermission = (permission: string) => {\n    if (!user) return false;\n    \n    // Admin has all permissions\n    if (user.role === 'admin') return true;\n    \n    // Implement permission logic based on user role\n    switch (permission) {\n      case 'view_dashboard':\n        return ['admin', 'manager', 'data_collector', 'viewer'].includes(user.role);\n      case 'manage_users':\n        return ['admin', 'manager'].includes(user.role);\n      case 'view_reports':\n        return ['admin', 'manager', 'data_collector', 'viewer'].includes(user.role);\n      case 'create_reports':\n        return ['admin', 'manager', 'data_collector'].includes(user.role);\n      case 'edit_reports':\n        return ['admin', 'manager', 'data_collector'].includes(user.role);\n      case 'delete_reports':\n        return ['admin', 'manager'].includes(user.role);\n      case 'view_admin_panel':\n        return ['admin', 'manager'].includes(user.role);\n      case 'manage_settings':\n        return ['admin'].includes(user.role);\n      default:\n        return false;\n    }\n  };\n\n  return {\n    // State\n    user,\n    session,\n    loading,\n    error,\n    isAuthenticated,\n    isAdmin,\n    initialized,\n    \n    // Actions\n    signIn,\n    signOut,\n    resetPassword,\n    updatePassword,\n    refreshUser,\n    \n    // Role and permission checks\n    hasRole,\n    hasAnyRole,\n    hasAllRoles,\n    hasPermission: checkPermission,\n    \n    // Helpers\n    canCreateUserWithRole: (role: UserRole) => {\n      if (!user) return false;\n      if (user.role === 'admin') return true;\n      if (user.role === 'manager' && role !== 'admin') return true;\n      return false;\n    },\n    canManageUsers: () => checkPermission('manage_users'),\n    canViewReports: () => checkPermission('view_reports'),\n    canEditReports: () => checkPermission('edit_reports'),\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { supabaseAdmin } from \"@/lib/supabaseAdmin\";\nimport { toast } from \"sonner\";\nimport { Loader2 } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useAuth } from '@/hooks/useAuth';\nimport { checkSupabaseConnection } from \"@/lib/supabaseClient\";\nimport { motion } from \"framer-motion\";\n\n// Note: These helpers are used by logLoginAttempt function via Supabase RPCs\n\nconst logLoginAttempt = async (identifier: string, status: 'success' | 'failed') => {\n  try {\n    const { data: browserInfo } = await supabaseAdmin.rpc('get_browser_info');\n    const { data: ipInfo } = await supabaseAdmin.rpc('get_ip_info');\n\n    const isEmail = identifier.includes('@');\n    const ip = ipInfo && typeof ipInfo === 'object' && ipInfo !== null && 'ip' in ipInfo ? ipInfo.ip : null;\n    const userAgent = browserInfo && typeof browserInfo === 'object' && browserInfo !== null && 'user_agent' in browserInfo ? browserInfo.user_agent : null;\n    const loginData = {\n      user_identifier: identifier,\n      email: isEmail ? identifier : null,\n      phone: !isEmail ? identifier : null,\n      login_type: isEmail ? 'email' : 'phone',\n      status,\n      time: new Date().toISOString(),\n      ip,\n      browser: userAgent\n    };\n\n    const { error } = await supabaseAdmin\n      .from('login_logs')\n      .insert([loginData]);\n\n    if (error) {\n      console.error('Error logging login attempt:', error);\n    }\n  } catch (error) {\n    console.error('Error logging login attempt:', error);\n  }\n};\n\nexport default function Login() {\n  const [identifier, setIdentifier] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const { signIn } = useAuth();\n\n  // Set the page title\n  useEffect(() => {\n    document.title = 'Wild Elephant Monitoring System - Login';\n    // Restore the original title when component unmounts\n    return () => {\n      document.title = 'Wild Elephant Monitoring System';\n    };\n  }, []);\n\n  useEffect(() => {\n    // Only check connection for informational purposes\n    const checkConnection = async () => {\n      try {\n        const isConnected = await checkSupabaseConnection();\n        // Don't show any errors about connectivity - app will work offline\n        if (!isConnected) {\n          console.log(\"Working in offline mode\");\n        }\n      } catch (error) {\n        // Silently handle connection errors\n        console.log(\"Connection check error, continuing in offline mode if possible\");\n      }\n    };\n    checkConnection();\n  }, []);\n\n  const validateIdentifier = (value: string) => {\n    // Check if it's an email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    // Check if it's a phone number\n    const phoneRegex = /^\\d{10}$/;\n    \n    return emailRegex.test(value) || phoneRegex.test(value);\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Validate identifier\n      if (!validateIdentifier(identifier)) {\n        toast.error(\"Please enter a valid email or phone number\");\n        setError(\"Please enter a valid email or phone number\");\n        setIsLoading(false);\n        return;\n      }\n\n      console.log('Starting login process for:', identifier);\n\n      // Always set the rememberMe flag to true for 30-day persistence\n      const shouldRemember = true; // Force remember me to be true for offline support\n      \n      // Attempt to sign in\n      console.log('Calling signIn with:', { identifier, shouldRemember });\n      const { user, error } = await signIn(identifier, password, shouldRemember);\n      console.log('Sign in result:', { user, error });\n      \n      if (error) {\n        throw error;\n      }\n\n      if (!user) {\n        throw new Error('No user data received after login');\n      }\n\n      // Try to log successful login attempt - don't fail if this doesn't work offline\n      try {\n        await logLoginAttempt(identifier, 'success');\n      } catch (logError) {\n        console.log('Unable to log login attempt (possibly offline)');\n      }\n      \n      // Always redirect to home page after login regardless of previous location\n      const redirectPath = '/';\n      console.log(\"Login successful, redirecting to home page\");\n      \n      // Navigate to the home page\n      navigate(redirectPath, { replace: true });\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred during login\";\n      \n      // Type assertion for the error object\n      const errorObj = err as any;\n      console.error(\"Error details:\", {\n        error: err,\n        name: errorObj?.name,\n        code: errorObj?.code,\n        status: errorObj?.status,\n        response: errorObj?.response\n      });\n      setError(errorMessage);\n      toast.error(errorMessage);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col justify-center py-12 bg-gradient-to-b from-[#f8fafc] to-[#e8f1fe]/50 backdrop-blur-sm\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md px-4\">\n        <motion.div \n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"flex flex-col items-center\"\n        >\n          <motion.img\n            initial={{ scale: 0.8, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n            src=\"/elephant_photo.png\"\n            alt=\"Elephant Watch Logo\"\n            className=\"h-24 w-auto drop-shadow-sm\"\n          />\n          <motion.p \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.4 }}\n            className=\"text-xl text-gray-600 max-w-2xl mx-auto\"\n          >\n            Wild Elephant Monitoring System\n          </motion.p>\n          <motion.p \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.5 }}\n            className=\"text-lg text-gray-500 mt-2\"\n          >\n            जंगली हाथी निगरानी प्रणाली (2025)\n          </motion.p>\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.6 }}\n          className=\"max-w-md mx-auto\"\n        >\n          <Card className=\"bg-white shadow-md border-0 rounded-xl overflow-hidden backdrop-blur-sm bg-opacity-95\">\n            <CardHeader className=\"space-y-1 pb-3\">\n              <CardTitle className=\"text-2xl font-light tracking-tight text-primary\">Welcome back</CardTitle>\n              <CardDescription className=\"text-gray-600\">\n                Enter your email or phone number to access the system\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-3\">\n              <form onSubmit={handleLogin} className=\"space-y-5\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"identifier\" className=\"text-sm font-medium text-gray-700\">Email or Phone Number</Label>\n                  <Input\n                    id=\"identifier\"\n                    type=\"text\"\n                    placeholder=\"Enter email or 10-digit phone number\"\n                    value={identifier}\n                    onChange={(e) => setIdentifier(e.target.value)}\n                    required\n                    className=\"rounded-lg border-gray-200 focus:border-primary focus:ring-1 focus:ring-primary shadow-sm\"\n                    disabled={isLoading}\n                  />\n                  {error && <p className=\"text-sm text-error mt-1\">{error}</p>}\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">Password</Label>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    className=\"rounded-lg border-gray-200 focus:border-primary focus:ring-1 focus:ring-primary shadow-sm\"\n                    disabled={isLoading}\n                  />\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"remember\"\n                    checked={rememberMe}\n                    onCheckedChange={(checked) => setRememberMe(checked as boolean)}\n                    disabled={isLoading}\n                    className=\"border-gray-200 text-primary focus:ring-primary/20\"\n                  />\n                  <Label htmlFor=\"remember\" className=\"text-sm font-normal text-gray-600 select-none\">\n                    Remember me\n                  </Label>\n                </div>\n                <Button \n                  type=\"submit\" \n                  className=\"w-full bg-primary hover:bg-primary/90 text-white rounded-lg py-5 text-base font-medium transition-all duration-200 shadow-sm hover:shadow\" \n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Signing in...\n                    </>\n                  ) : (\n                    \"Sign in\"\n                  )}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}"],"names":["supabaseAdmin","supabase","Checkbox","React.forwardRef","className","props","ref","jsx","CheckboxPrimitive.Root","cn","CheckboxPrimitive.Indicator","Check","useAuth","context","useContext","AuthContext","navigate","useNavigate","user","session","loading","error","signIn","contextSignOut","resetPassword","updatePassword","refreshUser","initialized","isAuthenticated","useMemo","isAdmin","hasRole","role","hasAnyRole","roles","hasAllRoles","signOut","toast","checkPermission","permission","logLoginAttempt","identifier","status","browserInfo","ipInfo","isEmail","ip","userAgent","loginData","Login","setIdentifier","useState","password","setPassword","isLoading","setIsLoading","rememberMe","setRememberMe","setError","useEffect","checkSupabaseConnection","validateIdentifier","value","emailRegex","phoneRegex","handleLogin","e","shouldRemember","redirectPath","err","errorMessage","errorObj","jsxs","motion","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","Input","checked","Button","Fragment","Loader2"],"mappings":"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"}