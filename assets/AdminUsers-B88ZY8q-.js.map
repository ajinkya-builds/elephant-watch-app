{"version":3,"file":"AdminUsers-B88ZY8q-.js","sources":["../../src/components/ui/badge.tsx","../../src/pages/AdminUsers.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import { useState, useEffect, useCallback, useReducer, useRef, useMemo } from 'react';\nimport { toast } from 'sonner';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Plus, Pencil, Trash2, Loader2, AlertTriangle, RotateCw, Search } from 'lucide-react';\nimport { useAuth } from '@/contexts/NewAuthContext';\nimport { supabase } from '@/lib/supabaseClient';\n\n// Types\ntype UserRole = 'admin' | 'manager' | 'data_collector' | 'viewer';\ntype UserPosition = 'Ranger' | 'DFO' | 'Officer' | 'Guard' | 'Manager' | 'Admin';\n\ninterface User {\n  id: string;\n  auth_id: string;\n  email: string;\n  phone: string | null;\n  first_name: string;\n  last_name: string;\n  role: UserRole;\n  position: UserPosition;\n  is_active: boolean;\n  status: 'active' | 'inactive' | 'pending';\n  created_at: string;\n  updated_at: string;\n  created_by: string;\n}\n\ninterface ExtendedUser extends User {\n  divisions?: Array<{ id: string; name: string }>;\n  ranges?: Array<{ id: string; name: string }>;\n  beats?: Array<{ id: string; name: string }>;\n}\n\n// Define types for our state\ntype UsersState = {\n  users: ExtendedUser[];\n  loading: boolean;\n  error: string | null;\n  lastFetched: number | null;\n};\n\ntype UsersAction =\n  | { type: 'FETCH_START' }\n  | { type: 'FETCH_SUCCESS'; payload: ExtendedUser[] }\n  | { type: 'FETCH_ERROR'; error: string };\n\nconst usersReducer = (state: UsersState, action: UsersAction): UsersState => {\n  switch (action.type) {\n    case 'FETCH_START':\n      return { ...state, loading: true, error: null };\n    case 'FETCH_SUCCESS':\n      return { \n        ...state, \n        loading: false, \n        users: action.payload,\n        lastFetched: Date.now()\n      };\n    case 'FETCH_ERROR':\n      return { ...state, loading: false, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default function AdminUsers() {\n  const [search, setSearch] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [divisions, setDivisions] = useState<Array<{ id: string; name: string }>>([]);\n  const [ranges, setRanges] = useState<Array<{ id: string; name: string }>>([]);\n  const [beats, setBeats] = useState<Array<{ id: string; name: string }>>([]);\n  const [isLoadingRanges, setIsLoadingRanges] = useState(false);\n  const [rangesError, setRangesError] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const { user } = useAuth();\n  const abortControllerRef = useRef<AbortController | null>(null);\n  const [usersState, dispatch] = useReducer(usersReducer, {\n    users: [],\n    loading: true,\n    error: null,\n    lastFetched: null\n  });\n  \n  const [newUser, setNewUser] = useState({\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    role: 'data_collector' as UserRole,\n    position: 'Ranger' as UserPosition,\n    division_id: '',\n    range_id: '',\n    beat_id: '',\n  });\n\n  // Fetch divisions on modal open or when needed\n  useEffect(() => {\n    if (!showModal) return;\n    \n    let isMounted = true;\n    const controller = new AbortController();\n    \n    const fetchDivisions = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('divisions')\n          .select('id, name')\n          .order('name')\n          .abortSignal(controller.signal);\n        \n        if (!isMounted) return;\n        \n        if (error) throw error;\n        \n        if (data) {\n          setDivisions(data as unknown as Array<{id: string, name: string}>);\n        }\n      } catch (err: unknown) {\n        const error = err as Error;\n        if (error.name !== 'AbortError') {\n          console.error('Error fetching divisions:', error);\n          toast.error('Failed to load divisions');\n        }\n      }\n    };\n    \n    // Add a small delay to prevent rapid successive calls\n    const timer = setTimeout(fetchDivisions, 100);\n    \n    return () => {\n      isMounted = false;\n      controller.abort();\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  // Fetch ranges when division changes (for Ranger/Guard)\n  useEffect(() => {\n    let isMounted = true;\n    \n    const shouldFetchRanges = showModal && \n                           newUser.division_id && \n                           ['Ranger', 'Guard'].includes(newUser.position);\n    \n    if (!shouldFetchRanges) {\n      if (isMounted) {\n        setRanges([]);\n        setRangesError(null);\n      }\n      return;\n    }\n    \n    async function fetchRanges() {\n      if (!isMounted) return;\n      \n      setIsLoadingRanges(true);\n      setRangesError(null);\n      \n      try {\n        const { data, error } = await supabase\n          .from('ranges')\n          .select('new_id, name, new_division_id')\n          .eq('new_division_id', newUser.division_id)\n          .order('name');\n        \n        if (!isMounted) return;\n        \n        if (error) throw error;\n        \n        const typedData = data.map(item => ({\n          id: item.new_id as string,\n          name: item.name as string\n        }));\n        \n        setRanges(typedData);\n      } catch (error) {\n        console.error('Error fetching ranges:', error);\n        if (isMounted) {\n          setRangesError('Failed to load ranges. Please try again.');\n          toast.error('Failed to load ranges');\n        }\n      } finally {\n        if (isMounted) {\n          setIsLoadingRanges(false);\n        }\n      }\n    }\n    \n    // Add a small delay to prevent rapid successive calls\n    const timer = setTimeout(fetchRanges, 300);\n    \n    return () => {\n      isMounted = false;\n      clearTimeout(timer);\n    };\n  }, [showModal, newUser.division_id, newUser.position]);\n\n  // Fetch beats when range changes (for Guard)\n  useEffect(() => {\n    let isMounted = true;\n    const controller = new AbortController();\n    \n    const shouldFetchBeats = showModal && \n                           newUser.range_id && \n                           newUser.position === 'Guard';\n    \n    if (!shouldFetchBeats) {\n      setBeats([]);\n      return;\n    }\n    \n    const fetchBeats = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('beats')\n          .select('new_id, name, new_range_id, new_division_id')\n          .eq('new_range_id', newUser.range_id)\n          .eq('new_division_id', newUser.division_id)\n          .order('name')\n          .abortSignal(controller.signal);\n        \n        if (!isMounted) return;\n        \n        if (error) throw error;\n        \n        if (data) {\n          const typedData = data.map(item => ({\n            id: item.new_id as string,\n            name: item.name as string\n          }));\n          setBeats(typedData);\n        }\n      } catch (err: unknown) {\n        const error = err as Error;\n        if (error.name !== 'AbortError') {\n          console.error('Error fetching beats:', error);\n          toast.error('Failed to load beats');\n        }\n      }\n    };\n    \n    // Add a small delay to prevent rapid successive calls\n    const timer = setTimeout(fetchBeats, 300);\n    \n    return () => {\n      isMounted = false;\n      controller.abort();\n      clearTimeout(timer);\n    };\n  }, [showModal, newUser.range_id, newUser.position, newUser.division_id]);\n\n  const fetchData = useCallback(async () => {\n    // Cancel any in-progress requests\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n    \n    const controller = new AbortController();\n    abortControllerRef.current = controller;\n    \n    // Don't refetch if data is fresh (less than 30 seconds old)\n    if (usersState.lastFetched && (Date.now() - usersState.lastFetched < 30000)) {\n      return;\n    }\n    \n    dispatch({ type: 'FETCH_START' });\n    \n    try {\n      const timeoutId = setTimeout(() => {\n        controller.abort('Request timed out');\n      }, 10000); // 10 second timeout\n      \n      const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n      \n      if (sessionError || !sessionData.session) {\n        throw new Error(sessionError?.message || 'Not authenticated');\n      }\n      \n      const response = await fetch(\n        `${import.meta.env.VITE_SUPABASE_URL}/functions/v1/get-users`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${sessionData.session.access_token}`,\n            'apikey': import.meta.env.VITE_SUPABASE_ANON_KEY\n          },\n          body: JSON.stringify({}),\n          signal: controller.signal\n        }\n      );\n      \n      clearTimeout(timeoutId);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error?.message || 'Failed to fetch users');\n      }\n      \n      const responseData = await response.json();\n      \n      if (!responseData.users) {\n        throw new Error('Invalid response format from server');\n      }\n      \n      const formattedUsers = responseData.users.map((user: any) => ({\n        ...user,\n        user_region_assignments: user.user_region_assignments || []\n      }));\n      \n      dispatch({ type: 'FETCH_SUCCESS', payload: formattedUsers });\n    } catch (err: any) {\n      // Don't show error if the fetch was aborted\n      if (err.name === 'AbortError') return;\n      \n      console.error('Error fetching users:', err);\n      const errorMessage = err.message || 'Failed to load users';\n      dispatch({ type: 'FETCH_ERROR', error: errorMessage });\n      toast.error(errorMessage);\n    }\n  }, [usersState.lastFetched]);\n  \n  useEffect(() => {\n    fetchData();\n    \n    // Set up auto-refresh every 5 minutes\n    const refreshInterval = setInterval(fetchData, 5 * 60 * 1000);\n    \n    return () => {\n      // Clean up on unmount\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n      clearInterval(refreshInterval);\n    };\n  }, [fetchData]);\n\n  const handleCreateUser = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Basic form validation\n    if (!newUser.email || !newUser.password || !newUser.first_name || !newUser.last_name || !newUser.role || !newUser.position) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    // Position-specific validation\n    if (['DFO', 'Ranger', 'Guard'].includes(newUser.position) && !newUser.division_id) {\n      toast.error('Please select a division');\n      return;\n    }\n    if (['Ranger', 'Guard'].includes(newUser.position) && !newUser.range_id) {\n      toast.error('Please select a range');\n      return;\n    }\n    if (newUser.position === 'Guard' && !newUser.beat_id) {\n      toast.error('Please select a beat');\n      return;\n    }\n\n    setIsSubmitting(true);\n    \n    try {\n      const userData = {\n        email: newUser.email,\n        password: newUser.password,\n        user_metadata: {\n          first_name: newUser.first_name,\n          last_name: newUser.last_name,\n          role: newUser.role,\n          position: newUser.position,\n        },\n      };\n      \n      // Build assignments based on position\n      const assignments: any = {\n        first_name: newUser.first_name,\n        last_name: newUser.last_name,\n        email: newUser.email,\n        role: newUser.role,\n        position: newUser.position,\n        status: 'active',\n        created_by: user?.id,\n      };\n      \n      if (newUser.position === 'DFO' && newUser.division_id) {\n        assignments.division_id = newUser.division_id;\n      }\n      if (newUser.position === 'Ranger' && newUser.division_id && newUser.range_id) {\n        assignments.division_id = newUser.division_id;\n        assignments.range_id = newUser.range_id;\n      }\n      if (newUser.position === 'Guard' && newUser.division_id && newUser.range_id && newUser.beat_id) {\n        assignments.division_id = newUser.division_id;\n        assignments.range_id = newUser.range_id;\n        assignments.beat_id = newUser.beat_id;\n      }\n\n      console.log('Calling create-user function with:', { \n        userData: { ...userData, password: '[REDACTED]' }, \n        assignments \n      });\n      \n      // Get the current session\n      const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n      const accessToken = session?.access_token;\n      \n      if (!accessToken || sessionError) {\n        throw new Error(sessionError?.message || 'No active session found. Please log in again.');\n      }\n      \n      // Make the request to the Edge Function\n      const response = await fetch(`${import.meta.env.VITE_SUPABASE_URL}/functions/v1/create-user`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`,\n          'apikey': import.meta.env.VITE_SUPABASE_ANON_KEY || ''\n        },\n        body: JSON.stringify({ userData, assignments })\n      });\n      \n      console.log('Raw response status:', response.status, response.statusText);\n      \n      let responseData;\n      try {\n        responseData = await response.json();\n        console.log('Response data:', responseData);\n      } catch (parseError) {\n        const text = await response.text();\n        console.error('Error parsing response. Raw response:', text);\n        throw new Error('Invalid response from server');\n      }\n      \n      if (!response.ok) {\n        console.error('Error response:', responseData);\n        const errorMessage = responseData?.error?.message || \n                            responseData?.message || \n                            `Request failed with status ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      \n      // If we get here, user was created successfully\n      toast.success('User created successfully');\n      setIsSubmitting(false);\n      setShowModal(false);\n      \n      // Reset form\n      setNewUser({\n        email: '',\n        password: '',\n        first_name: '',\n        last_name: '',\n        role: 'data_collector',\n        position: 'Ranger',\n        division_id: '',\n        range_id: '',\n        beat_id: '',\n      });\n      \n      // Refresh user list\n      await fetchData();\n    } catch (err: any) {\n      console.error('Error creating user:', err);\n      const errorMessage = err.message || 'Failed to create user. Please try again.';\n      toast.error(errorMessage);\n      setIsSubmitting(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteUser = async (userToDelete: ExtendedUser) => {\n    console.log('handleDeleteUser called with:', userToDelete);\n    if (!userToDelete) {\n      console.error('No user provided to delete');\n      return;\n    }\n    \n    if (!window.confirm(`Are you sure you want to delete ${userToDelete.email}?`)) {\n      console.log('User cancelled deletion');\n      return;\n    }\n\n    try {\n      console.log('Getting current session...');\n      const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n      console.log('Session data:', { session, sessionError });\n      \n      if (sessionError) {\n        console.error('Error getting session:', sessionError);\n        throw new Error('Failed to verify authentication. Please try again.');\n      }\n      \n      if (!session) {\n        console.error('No active session found');\n        throw new Error('No active session. Please log in again.');\n      }\n\n      const requestBody = {\n        userId: userToDelete.id,\n        authId: userToDelete.auth_id || userToDelete.id, // Fallback to user.id if auth_id is not available\n      };\n\n      const functionName = 'delete-user';\n      const functionUrl = `${import.meta.env.VITE_SUPABASE_URL}/functions/v1/${functionName}`;\n      \n      console.log('Calling delete-user function with:', {\n        functionUrl,\n        method: 'POST',\n        body: requestBody,\n        hasAuthToken: !!session?.access_token\n      });\n\n      // Call the Edge Function with POST and JSON body\n      const response = await fetch(functionUrl, {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${session.access_token}`,\n          'apikey': import.meta.env.VITE_SUPABASE_ANON_KEY || ''\n        },\n      });\n\n      let data = null;\n      let error = null;\n      \n      try {\n        const responseData = await response.json();\n        if (!response.ok) {\n          error = responseData.error || { message: 'Unknown error occurred' };\n        } else {\n          data = responseData;\n        }\n      } catch (e) {\n        console.error('Error parsing response:', e);\n        error = { message: 'Failed to parse server response' };\n      }\n\n      console.log('delete-user function response:', { data, error });\n\n      if (error) {\n        console.error('Error from delete-user function:', {\n          name: error.name,\n          message: error.message,\n          status: error.status,\n          statusText: error.statusText,\n          cause: error.cause,\n        });\n        \n        // Try to extract more detailed error message\n        let errorMessage = error.message || 'Failed to delete user';\n        if (error.status === 500) {\n          errorMessage = 'Server error while deleting user. Please try again later.';\n        } else if (error.status === 403) {\n          errorMessage = 'You do not have permission to delete users';\n        } else if (error.status === 401) {\n          errorMessage = 'Session expired. Please log in again.';\n        }\n        \n        throw new Error(errorMessage);\n      }\n\n      if (!data) {\n        throw new Error('No response data from server');\n      }\n\n      console.log('User deleted successfully:', data);\n      \n      // Update the UI by removing the deleted user using the reducer\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: usersState.users.filter(u => u.id !== userToDelete.id)\n      });\n      \n      // Show success message\n      toast.success('User deleted successfully');\n      \n    } catch (error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to delete user';\n      \n      console.error('Error in handleDeleteUser:', {\n        error,\n        message: errorMessage,\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      \n      // Show user-friendly error message\n      toast.error(errorMessage);\n    }\n  };\n\n  // Memoize filtered users to prevent unnecessary recalculations\n  const filteredUsers = useMemo(() => {\n    if (!search) return usersState.users;\n    \n    const searchTerm = search.toLowerCase();\n    return usersState.users.filter((u: ExtendedUser) =>\n      `${u.first_name} ${u.last_name}`.toLowerCase().includes(searchTerm) ||\n      u.email.toLowerCase().includes(searchTerm)\n    );\n  }, [usersState.users, search]);\n\n  // Loading skeleton\n  if (usersState.loading && usersState.users.length === 0) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"h-10 w-48 bg-muted rounded animate-pulse\" />\n          <div className=\"h-10 w-32 bg-muted rounded animate-pulse\" />\n        </div>\n        <div className=\"space-y-2\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"h-16 bg-muted/50 rounded-lg animate-pulse\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n  \n  // Error state with retry button\n  if (usersState.error) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"bg-destructive/10 border border-destructive text-destructive p-4 rounded-lg\">\n          <div className=\"flex items-center\">\n            <AlertTriangle className=\"w-5 h-5 mr-2\" />\n            <span>Failed to load users: {usersState.error}</span>\n          </div>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            className=\"mt-2\"\n            onClick={fetchData}\n            disabled={usersState.loading}\n          >\n            {usersState.loading ? (\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n            ) : (\n              <RotateCw className=\"mr-2 h-4 w-4\" />\n            )}\n            Try Again\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Page Header with Blue-Green Gradient */}\n      <div className=\"rounded-2xl bg-gradient-to-r from-blue-600 to-green-500 px-6 py-6 shadow-md flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-extrabold tracking-tight text-white drop-shadow\">User Management</h1>\n          <p className=\"text-blue-100 mt-1 text-base\">Manage user accounts and permissions</p>\n        </div>\n        <Button onClick={() => setShowModal(true)} className=\"bg-white text-blue-700 hover:bg-blue-50 border-blue-200 border font-semibold shadow-sm\">\n          <Plus className=\"mr-2 h-4 w-4 text-green-600\" /> Add User\n        </Button>\n      </div>\n\n      {/* Card with Themed Border */}\n      <Card className=\"bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-100/60 shadow-lg\">\n        <CardHeader className=\"bg-gradient-to-r from-blue-100/60 to-green-100/60 rounded-t-2xl px-6 py-4 border-b border-green-200/40\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 w-full\">\n            <div className=\"w-full\">\n              <CardTitle className=\"text-lg mb-1 text-blue-700 font-bold tracking-wide\">Users</CardTitle>\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"relative w-full max-w-md\">\n                  <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-blue-400\" />\n                  <Input\n                    placeholder=\"Search users...\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    className=\"w-full pl-9 bg-white/70 border border-blue-200 focus:border-green-400\"\n                  />\n                </div>\n                <span className=\"ml-2 text-sm text-green-700 font-medium bg-green-100/70 rounded-xl px-3 py-1\">\n                  {filteredUsers.length} user{filteredUsers.length !== 1 ? 's' : ''}\n                </span>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-0\">\n          <div className=\"overflow-x-auto rounded-b-2xl\">\n            <Table className=\"min-w-full divide-y divide-blue-100\">\n              <TableHeader className=\"bg-gradient-to-r from-blue-100/40 to-green-100/40\">\n                <TableRow>\n                  <TableHead className=\"text-blue-700 font-semibold\">Name</TableHead>\n                  <TableHead className=\"text-blue-700 font-semibold\">Email</TableHead>\n                  <TableHead className=\"text-green-700 font-semibold\">Role</TableHead>\n                  <TableHead className=\"text-green-700 font-semibold\">Position</TableHead>\n                  <TableHead className=\"text-blue-700 font-semibold\">Status</TableHead>\n                  <TableHead className=\"text-right text-blue-700 font-semibold\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredUsers.map((u) => (\n                  <TableRow key={u.id} className=\"hover:bg-blue-50/60\">\n                    <TableCell className=\"font-medium text-blue-900\">{u.first_name} {u.last_name}</TableCell>\n                    <TableCell className=\"text-blue-800\">{u.email}</TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\" className=\"capitalize border-green-300 text-green-700 bg-green-50/80\">\n                        {u.role.replace('_', ' ')}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-green-800\">{u.position}</TableCell>\n                    <TableCell>\n                      <Badge variant={u.status === 'active' ? 'default' : 'destructive'} className={u.status === 'active' ? 'bg-green-100 text-green-700 border-green-300' : 'bg-red-100 text-red-700 border-red-300'}>\n                        {u.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button variant=\"outline\" size=\"sm\" className=\"h-8 w-8 p-0 border-blue-200 text-blue-700 hover:bg-blue-100/60\">\n                          <Pencil className=\"h-4 w-4\" />\n                        </Button>\n                        <Button \n                          variant=\"destructive\" \n                          size=\"sm\" \n                          className=\"h-8 w-8 p-0 border-red-200 text-red-700 hover:bg-red-100/60\"\n                          onClick={(e) => {\n                            console.log('Delete button clicked');\n                            e.stopPropagation();\n                            handleDeleteUser(u);\n                          }}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n\n        <Dialog open={showModal} onOpenChange={setShowModal}>\n          <DialogContent className=\"sm:max-w-4xl w-[90vw] max-w-[90vw]\">\n            <DialogHeader className=\"px-1\">\n              <DialogTitle className=\"text-2xl font-bold text-blue-800\">Add New User</DialogTitle>\n              <DialogDescription className=\"text-blue-600\">\n                Create a new user account with the appropriate permissions and access levels.\n              </DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleCreateUser}>\n              <div className=\"flex flex-col md:flex-row gap-8 py-2\">\n                {/* LEFT: Personal Details */}\n                <div className=\"flex-1 bg-gradient-to-br from-blue-50 to-green-50 rounded-xl p-6 shadow-sm border border-blue-100\">\n                  <h3 className=\"text-lg font-semibold mb-4 text-blue-700\">Personal Details</h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"first_name\">First Name</Label>\n                      <Input\n                        id=\"first_name\"\n                        placeholder=\"John\"\n                        value={newUser.first_name}\n                        onChange={(e) => setNewUser(p => ({...p, first_name: e.target.value}))}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"last_name\">Last Name</Label>\n                      <Input\n                        id=\"last_name\"\n                        placeholder=\"Doe\"\n                        value={newUser.last_name}\n                        onChange={(e) => setNewUser(p => ({...p, last_name: e.target.value}))}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"email\">Email</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"john.doe@example.com\"\n                        value={newUser.email}\n                        onChange={(e) => setNewUser(p => ({...p, email: e.target.value}))}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"password\">Password</Label>\n                      <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"••••••••\"\n                        value={newUser.password}\n                        onChange={(e) => setNewUser(p => ({...p, password: e.target.value}))}\n                        required\n                        minLength={8}\n                      />\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        Password must be at least 8 characters long\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                {/* RIGHT: Role, Position, Assignment */}\n                <div className=\"flex-1 bg-gradient-to-br from-green-50 to-blue-50 rounded-xl p-6 shadow-sm border border-green-100\">\n                  <h3 className=\"text-lg font-semibold mb-4 text-green-700\">Role & Assignment</h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"position\">Position</Label>\n                      <Select\n                        value={newUser.position}\n                        onValueChange={(value) => setNewUser(p => ({ ...p, position: value as UserPosition }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select position\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"DFO\">DFO</SelectItem>\n                          <SelectItem value=\"Ranger\">Ranger</SelectItem>\n                          <SelectItem value=\"Guard\">Guard</SelectItem>\n                          <SelectItem value=\"Officer\">Officer</SelectItem>\n                          <SelectItem value=\"Manager\">Manager</SelectItem>\n                          <SelectItem value=\"Admin\">Admin</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    <div>\n                      <Label htmlFor=\"role\">Role</Label>\n                      <Select\n                        value={newUser.role}\n                        onValueChange={(value) => setNewUser(p => ({ ...p, role: value as UserRole }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select role\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"admin\">Admin</SelectItem>\n                          <SelectItem value=\"manager\">Manager</SelectItem>\n                          <SelectItem value=\"data_collector\">Data Collector</SelectItem>\n                          <SelectItem value=\"viewer\">Viewer</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    {/* Region selectors based on position */}\n                    {['DFO', 'Ranger', 'Guard'].includes(newUser.position) && (\n                      <div>\n                        <Label>Division</Label>\n                        <Select\n                          value={newUser.division_id || ''}\n                          onValueChange={(value) => setNewUser(p => ({ ...p, division_id: value }))}\n                          disabled={divisions.length === 0}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder={\n                              divisions.length === 0 ? 'Loading divisions...' : 'Select division'\n                            } />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {divisions.map(div => (\n                              <SelectItem key={div.id} value={div.id}>\n                                {div.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    )}\n                    {['Ranger', 'Guard'].includes(newUser.position) && newUser.division_id && (\n                      <div>\n                        <div className=\"flex items-center justify-between\">\n                          <Label>Range</Label>\n                          {isLoadingRanges && (\n                            <span className=\"text-xs text-blue-600 flex items-center\">\n                              <Loader2 className=\"h-3 w-3 mr-1 animate-spin\" />\n                              Loading...\n                            </span>\n                          )}\n                        </div>\n                        <Select\n                          value={newUser.range_id || ''}\n                          onValueChange={(value) => setNewUser(p => ({ ...p, range_id: value }))}\n                          disabled={isLoadingRanges || rangesError !== null}\n                        >\n                          <SelectTrigger className={rangesError ? 'border-red-300' : ''}>\n                            <SelectValue \n                              placeholder={\n                                isLoadingRanges \n                                  ? 'Loading ranges...' \n                                  : rangesError \n                                    ? 'Error loading ranges'\n                                    : 'Select range'\n                              } \n                            />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {rangesError ? (\n                              <div className=\"text-sm text-red-600 p-2\">\n                                {rangesError}\n                              </div>\n                            ) : ranges.length > 0 ? (\n                              ranges.map(range => (\n                                <SelectItem key={range.id} value={range.id}>\n                                  {range.name}\n                                </SelectItem>\n                              ))\n                            ) : (\n                              <div className=\"text-sm text-muted-foreground p-2\">\n                                No ranges found\n                              </div>\n                            )}\n                          </SelectContent>\n                        </Select>\n                        {rangesError && (\n                          <p className=\"text-xs text-red-500 mt-1\">\n                            {rangesError}\n                          </p>\n                        )}\n                      </div>\n                    )}\n                    {newUser.position === 'Guard' && newUser.range_id && (\n                      <div>\n                        <Label>Beat</Label>\n                        <Select\n                          value={newUser.beat_id || ''}\n                          onValueChange={(value) => setNewUser(p => ({ ...p, beat_id: value }))}\n                          disabled={beats.length === 0}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder={\n                              beats.length === 0 ? 'Loading beats...' : 'Select beat'\n                            } />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {beats.map(beat => (\n                              <SelectItem key={beat.id} value={beat.id}>\n                                {beat.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <DialogFooter className=\"gap-2\">\n                <Button \n                  type=\"button\" \n                  variant=\"outline\" \n                  onClick={() => setShowModal(false)}\n                  disabled={isSubmitting}\n                >\n                  Cancel\n                </Button>\n                <Button \n                  type=\"submit\" \n                  className=\"bg-blue-600 hover:bg-blue-700\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Creating...\n                    </>\n                  ) : (\n                    'Create User'\n                  )}\n                </Button>\n              </DialogFooter>\n            </form>\n            </DialogContent>\n          </Dialog>\n    </div>\n  );\n}"],"names":["badgeVariants","cva","Badge","className","variant","props","jsx","cn","usersReducer","state","action","AdminUsers","search","setSearch","useState","showModal","setShowModal","divisions","setDivisions","ranges","setRanges","beats","setBeats","isLoadingRanges","setIsLoadingRanges","rangesError","setRangesError","isSubmitting","setIsSubmitting","user","useAuth","abortControllerRef","useRef","usersState","dispatch","useReducer","newUser","setNewUser","useEffect","isMounted","controller","timer","data","error","supabase","err","toast","fetchRanges","typedData","item","fetchData","useCallback","timeoutId","sessionData","sessionError","response","errorData","_a","responseData","formattedUsers","errorMessage","refreshInterval","handleCreateUser","e","userData","assignments","session","accessToken","text","handleDeleteUser","userToDelete","requestBody","functionUrl","u","filteredUsers","useMemo","searchTerm","jsxs","_","i","AlertTriangle","Button","Loader2","RotateCw","Plus","Card","CardHeader","CardTitle","Search","Input","CardContent","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Pencil","Trash2","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","p","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","div","range","beat","DialogFooter","Fragment"],"mappings":"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"}