{"version":3,"mappings":"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","names":["TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","cn","inputs","twMerge","clsx","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","ref","jsx","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","jsxs","theme","useTheme","Sonner","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","supabaseUrl","supabaseAnonKey","STORAGE_KEY","supabaseInstance","customStorage","key","error","value","getSupabaseClient","createClient","data","supabase","checkSupabaseConnection","hasLocalSession","storageError","timeoutPromise","_","reject","connectionPromise","statusCode","useNetworkStatus","isOnline","setIsOnline","useState","useEffect","handleOnline","handleOffline","requestLocationPermission","Capacitor","status","Geolocation","checkLocationPermission","getCurrentPosition","position","FullPageLoader","message","Loader2","SESSION_EXPIRATION","initialState","AuthContext","createContext","AuthProvider","children","navigate","setNavigate","to","promiseWithTimeout","promise","timeoutMs","errorMessage","fetchUserProfile","useCallback","userId","supabaseUser","profileData","result","timeoutError","user","userError","profileResult","profile","profileError","extendedUser","_a","_b","_c","isMounted","onlineStatus","session","userProfile","storedSession","Preferences","parsedSession","sessionTimestamp","sessionDate","validationError","parseError","currentSession","getSessionError","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","cachedProfileStr","cachedProfile","cacheError","mainError","prevState","handleSignIn","email","password","rememberMe","loginAttempt","locationData","history","lastIndex","err","locationError","permissionError","handleOrientation","event","sensorError","loginHistoryStr","loginHistory","storedSessionStr","cachedUserStr","cachedUser","offlineError","authResponse","noUserError","sessionWithMetadata","unexpectedError","handleSignOut","handleResetPassword","handleUpdatePassword","newPassword","setNavigation","nav","refreshUser","isAdmin","useMemo","isManager","isDataCollector","canCreateUserWithRole","role","canManageUsers","canViewReports","canEditReports","hasPermission","permission","contextValue","useAuth","context","useContext","ProtectedRoute","initialized","location","useLocation","Outlet","Navigate","AndroidBottomNavigation","items","onValueChange","showLabels","activeItem","setActiveItem","getCurrentRouteValue","React","handleItemClick","itemId","item","isActive","Link","pathname","exactMatch","partialMatch","defaultItem","AndroidNavRail","header","fab","defaultLightTheme","defaultDarkTheme","ThemeContext","useAndroidTheme","AndroidThemeProvider","initialTheme","setTheme","toggleDarkMode","getColorClass","colorKey","type","getTypographyClass","getElevationClass","elevationLevel","getShapeClass","shapeKey","getSpacingClass","direction","size","directions","spacing","spacingValue","tailwindValue","applyThemeClasses","baseClasses","options","classes","AndroidAppBar","elevated","navigationIcon","onNavigationIconClick","actions","prominent","centerTitle","bottom","themeClasses","HomeIcon","DashboardIcon","ActivityIcon","AdminIcon","ProfileIcon","navigationItems","AndroidMaterialLayout","isLargeScreen","setIsLargeScreen","getCurrentPageTitle","path","checkScreenSize","Index","lazy","__vitePreload","NotFound","ReportActivityPage","Dashboard","Admin","Login","AdminUsers","AdminObservations","AdminStatistics","AdminSettings","AdminNotifications","UserProfilePage","ErrorBoundary","Component","errorInfo","queryClient","QueryClient","router","createHashRouter","Suspense","AppProviders","QueryClientProvider","AppContent","RouterProvider","App","createRoot"],"ignoreList":[],"sources":["../../src/hooks/use-toast.ts","../../src/lib/utils.ts","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/components/ui/sonner.tsx","../../src/components/ui/tooltip.tsx","../../src/lib/supabaseClient.ts","../../src/utils/networkStatus.ts","../../src/utils/locationService.ts","../../src/components/ui/FullPageLoader.tsx","../../src/contexts/NewAuthContext.tsx","../../src/components/ProtectedRoute.tsx","../../src/components/ui/android-bottom-navigation.tsx","../../src/components/ui/android-nav-rail.tsx","../../src/theme/AndroidThemeProvider.tsx","../../src/theme/AndroidThemeUtils.tsx","../../src/components/ui/android-app-bar.tsx","../../src/layouts/AndroidMaterialLayout.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import { createClient } from '@supabase/supabase-js';\n\n// These environment variables will be read from your .env file\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL?.trim();\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY?.trim();\n\n// Storage key constant for consistency\nconst STORAGE_KEY = 'sb-vfsyjvjghftfebvxyjba-auth-token';\n\n// Validate environment variables\nif (!supabaseUrl || !supabaseUrl.startsWith('https://')) {\n  throw new Error('Invalid VITE_SUPABASE_URL format');\n}\n\nif (!supabaseAnonKey || !supabaseAnonKey.startsWith('eyJ')) {\n  throw new Error('Invalid VITE_SUPABASE_ANON_KEY format');\n}\n\n// Create a single instance of the Supabase client\nlet supabaseInstance: ReturnType<typeof createClient> | null = null;\n\n// Custom storage implementation with debugging\nconst customStorage = {\n  getItem: (key: string): string | null => {\n    try {\n      if (import.meta.env.DEV) {\n        console.log(`Getting item from storage: ${key}`);\n      }\n      const value = localStorage.getItem(key);\n      if (import.meta.env.DEV) {\n        console.log(`Item ${key} ${value ? 'found' : 'not found'}`);\n      }\n      return value;\n    } catch (error) {\n      console.error(`Error getting item ${key} from storage:`, error);\n      return null;\n    }\n  },\n  setItem: (key: string, value: string): void => {\n    try {\n      if (import.meta.env.DEV) {\n        console.log(`Setting item in storage: ${key}`);\n      }\n      localStorage.setItem(key, value);\n    } catch (error) {\n      console.error(`Error setting item ${key} in storage:`, error);\n    }\n  },\n  removeItem: (key: string): void => {\n    try {\n      if (import.meta.env.DEV) {\n        console.log(`Removing item from storage: ${key}`);\n      }\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.error(`Error removing item ${key} from storage:`, error);\n    }\n  },\n};\n\nexport const getSupabaseClient = () => {\n  if (supabaseInstance) {\n    return supabaseInstance;\n  }\n\n  if (import.meta.env.DEV) {\n    console.log('Creating new Supabase client instance');\n  }\n\n  try {\n    supabaseInstance = createClient(supabaseUrl, supabaseAnonKey, {\n      auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true,\n        storage: customStorage,\n        storageKey: STORAGE_KEY,\n        flowType: 'pkce',\n        debug: import.meta.env.DEV\n      }\n    });\n\n    // Add debug logging for auth state changes in development\n    if (import.meta.env.DEV) {\n      supabaseInstance.auth.onAuthStateChange((event, session) => {\n        console.log('Supabase auth state changed:', {\n          event,\n          userId: session?.user?.id,\n          timestamp: new Date().toISOString()\n        });\n      });\n    }\n\n    // Test the connection and session\n    supabaseInstance.auth.getSession().then(({ data, error }) => {\n      if (error) {\n        console.error('Error testing Supabase connection:', error);\n      } else {\n        console.log('Supabase connection test successful:', {\n          hasSession: !!data.session,\n          timestamp: new Date().toISOString()\n        });\n      }\n    });\n\n    return supabaseInstance;\n  } catch (error) {\n    console.error('Error creating Supabase client:', error);\n    throw error;\n  }\n};\n\n// Export the singleton instance\nexport const supabase = getSupabaseClient();\n\n// Helper function to check Supabase connection\nexport const checkSupabaseConnection = async () => {\n  try {\n    console.log('Checking Supabase connection (offline operation will still work)...');\n\n    // Check if we have a locally stored session first\n    let hasLocalSession = false;\n    try {\n      const storedSession = localStorage.getItem(STORAGE_KEY);\n      hasLocalSession = !!storedSession;\n    } catch (storageError) {\n      console.warn('Error checking local storage for session:', storageError);\n    }\n\n    // Set a timeout to prevent hanging too long on network requests when offline\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(() => reject(new Error('Connection check timed out')), 3000); // 3 second timeout\n    });\n\n    const connectionPromise = supabase.from('users').select('id').limit(1);\n    \n    // Race between timeout and actual request\n    const { error } = await Promise.race([\n      connectionPromise,\n      timeoutPromise\n    ]) as { error?: { status?: number } };\n\n    if (!error) {\n      console.log('Supabase connection successful');\n      return true;\n    }\n\n    // Treat auth/permission errors as \"still connected\" because they prove\n    // the backend responded.\n    const statusCode = error?.status;\n    if (statusCode === 401 || statusCode === 403) {\n      console.warn('Supabase reachable but access denied (expected for unauthenticated request).');\n      return true;\n    }\n\n    if (hasLocalSession) {\n      console.log('Supabase connection failed, but local session exists. App will work offline.');\n      return true; // Return true to prevent logout when operating offline with cached session\n    }\n\n    console.error('Supabase connection error:', error);\n    return false;\n  } catch (error) {\n    // Even if connection check fails with an exception, as long as we have a local session, \n    // we should return true to enable offline operation\n    try {\n      const storedSession = localStorage.getItem(STORAGE_KEY);\n      if (storedSession) {\n        console.log('Supabase connection check failed, but local session exists. Will work offline.');\n        return true; \n      }\n    } catch (storageError) {\n      console.warn('Error checking local storage for session:', storageError);\n    }\n    \n    console.error('Supabase connection error:', error);\n    return false;\n  }\n};\n\n// Helper function to get current user\nexport const getCurrentUser = async () => {\n  try {\n    const { data: { session } } = await supabase.auth.getSession();\n    return session?.user || null;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n};\n\n// Helper function for authentication\nexport const signInWithRedirect = async (provider: 'google' | 'phone' | 'email', options: any = {}) => {\n  try {\n    let signInResult;\n    \n    if (provider === 'google') {\n      signInResult = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: window.location.origin\n        }\n      });\n    } else if (provider === 'phone') {\n      signInResult = await supabase.auth.signInWithPassword({\n        phone: options.phone,\n        password: options.password\n      });\n    } else {\n      signInResult = await supabase.auth.signInWithPassword({\n        email: options.email,\n        password: options.password\n      });\n    }\n\n    if (signInResult.error) {\n      console.error('Sign in failed:', signInResult.error);\n      throw signInResult.error;\n    }\n\n    return signInResult;\n  } catch (error) {\n    console.error('Sign in error:', error);\n    throw error;\n  }\n};\n\n// Update the user type to include separate email and phone fields\nexport type User = {\n  id: string;\n  email: string | null;\n  phone: string | null;\n  password_hash: string;\n  role: 'admin' | 'manager' | 'data_collector';\n  status: 'active' | 'inactive';\n  created_at: string;\n  updated_at: string;\n};\n","import { useState, useEffect } from 'react';\n\nexport const useNetworkStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return { isOnline };\n};\n","import { Geolocation, PermissionStatus } from '@capacitor/geolocation';\nimport { Capacitor } from '@capacitor/core';\n\n// Interface for location data\nexport interface LocationData {\n  latitude: number;\n  longitude: number;\n  accuracy: number;\n  timestamp: number;\n}\n\n/**\n * Request location permissions explicitly\n * @returns Promise with permission status\n */\nexport const requestLocationPermission = async (): Promise<PermissionStatus> => {\n  console.log('Requesting location permission');\n  if (!Capacitor.isNativePlatform()) {\n    console.warn('Geolocation is not available on web platform. Returning default denied status.');\n    return { location: 'denied', coarseLocation: 'denied' };\n  }\n  try {\n    const status = await Geolocation.requestPermissions();\n    console.log('Location permission status:', status);\n    return status;\n  } catch (error) {\n    console.error('Error requesting location permission:', error);\n    throw error;\n  }\n};\n\n/**\n * Check if location permissions are granted\n * @returns Promise with boolean indicating if permission is granted\n */\nexport const checkLocationPermission = async (): Promise<boolean> => {\n  try {\n    const status = await Geolocation.checkPermissions();\n    return status.location === 'granted';\n  } catch (error) {\n    console.error('Error checking location permissions:', error);\n    return false;\n  }\n};\n\n/**\n * Get current position with proper error handling\n * @param options Optional position options\n * @returns Promise with location data\n */\nexport const getCurrentPosition = async (): Promise<LocationData> => {\n  if (!Capacitor.isNativePlatform()) {\n    console.warn('Geolocation is not available on web platform. Returning default location.');\n    // Return a default or null location for web\n    return {\n      latitude: 0,\n      longitude: 0,\n      accuracy: 0,\n      timestamp: Date.now()\n    };\n  }\n  try {\n    // First ensure we have permission\n    const hasPermission = await checkLocationPermission();\n    \n    if (!hasPermission) {\n      // Request permission if not granted\n      const permissionStatus = await requestLocationPermission();\n      if (permissionStatus.location !== 'granted') {\n        throw new Error('Location permission denied');\n      }\n    }\n    \n    // Get position with high accuracy\n    const position = await Geolocation.getCurrentPosition({\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0\n    });\n    \n    return {\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      accuracy: position.coords.accuracy,\n      timestamp: position.timestamp\n    };\n  } catch (error) {\n    console.error('Error getting current position:', error);\n    throw error;\n  }\n};\n","import React from 'react';\nimport { Loader2 } from 'lucide-react';\n\ninterface FullPageLoaderProps {\n  message?: string;\n}\n\nexport const FullPageLoader: React.FC<FullPageLoaderProps> = ({ message = 'Loading...' }) => {\n  return (\n    <div className=\"fixed inset-0 z-50 flex flex-col items-center justify-center bg-background/80 backdrop-blur-sm\">\n      <div className=\"text-center\">\n        <Loader2 className=\"mx-auto mb-4 h-12 w-12 animate-spin text-primary\" />\n        <p className=\"text-lg font-semibold text-foreground\">{message}</p>\n        <p className=\"text-sm text-muted-foreground\">Please wait a moment.</p>\n      </div>\n    </div>\n  );\n}; ","import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  ReactNode,\n} from 'react';\nimport { Session, User } from '@supabase/supabase-js';\nimport { Profile } from '../types/supabase';\nimport { supabase } from '@/lib/supabaseClient';\nimport { Preferences } from '@capacitor/preferences';\nimport { useNetworkStatus } from '../utils/networkStatus';\nimport { getCurrentPosition, requestLocationPermission } from '../utils/locationService';\nimport { FullPageLoader } from '@/components/ui/FullPageLoader';\n\n\n// Storage key for session persistence\nconst STORAGE_KEY = 'sb-vfsyjvjghftfebvxyjba-auth-token';\n\n// Session expiration duration (30 days in milliseconds)\nconst SESSION_EXPIRATION = 30 * 24 * 60 * 60 * 1000; // 30 days\n\n// User roles\nexport type UserRole = 'admin' | 'manager' | 'data_collector' | 'viewer';\n\n// User positions\nexport type UserPosition = 'Ranger' | 'DFO' | 'Officer' | 'Guard' | 'Manager' | 'Admin';\n\n// User status\nexport type UserStatus = 'active' | 'inactive' | 'pending';\n\n// Permission types\nexport type Permission = \n  | 'view_dashboard'\n  | 'manage_users'\n  | 'view_reports'\n  | 'create_reports'\n  | 'edit_reports'\n  | 'delete_reports'\n  | 'view_admin_panel'\n  | 'manage_settings';\n\n// User metadata stored in auth.users\nexport interface UserMetadata {\n  first_name?: string;\n  last_name?: string;\n  role?: UserRole;\n  position?: UserPosition;\n  avatar_url?: string;\n  [key: string]: any;\n}\n\nexport interface ExtendedUser {\n  id: string;\n  auth_id: string;\n  first_name: string;\n  last_name: string;\n  email: string | null;\n  phone: string | null;\n  role: UserRole;\n  position: UserPosition;\n  status: 'active' | 'inactive' | 'pending';\n  created_at: string;\n  updated_at: string;\n  last_login_at: string | null;\n  avatar_url: string;\n  metadata: Record<string, any>;\n  permissions?: string[];\n  cached_at?: string; // Timestamp for cache management\n}\n\n// Auth state type\ntype AuthState = {\n  user: ExtendedUser | null;\n  session: Session | null;\n  loading: boolean;\n  error: string | null;\n  initialized: boolean;\n};\n\n// Initial auth state\nconst initialState: AuthState = {\n  user: null,\n  session: null,\n  loading: true,\n  error: null,\n  initialized: false,\n};\n\n// Authentication context type\nexport interface AuthContextType extends AuthState {\n  // Authentication methods\n  signIn: (email: string, password: string, rememberMe?: boolean) => Promise<{\n    user: ExtendedUser | null;\n    error: Error | null\n  }>;\n  signOut: () => Promise<{ error: Error | null }>;\n  refreshUser: () => Promise<void>;\n  resetPassword: (email: string) => Promise<{ error: Error | null }>;\n  updatePassword: (newPassword: string) => Promise<{ error: Error | null }>;\n  \n  // Permission checks\n  canCreateUserWithRole: (role: UserRole) => boolean;\n  canManageUsers: () => boolean;\n  canViewReports: () => boolean;\n  canEditReports: () => boolean;\n  hasPermission: (permission: Permission) => boolean;\n  \n  // Navigation\n  setNavigation: (nav: (to: string) => void) => void;\n  navigate: (to: string) => void;\n  \n  // Convenience methods\n  isAdmin: boolean;\n  \n  // Auth state\n  initialized: boolean;\n};\n\n// Create the auth context with default values\nconst AuthContext = createContext<AuthContextType>({\n  ...initialState,\n  signIn: async () => ({ user: null, error: new Error('AuthContext not initialized') }),\n  signOut: async () => ({ error: new Error('AuthContext not initialized') }),\n  refreshUser: async () => {},\n  resetPassword: async () => ({ error: new Error('AuthContext not initialized') }),\n  updatePassword: async () => ({ error: new Error('AuthContext not initialized') }),\n  canCreateUserWithRole: () => false,\n  canManageUsers: () => false,\n  canViewReports: () => false,\n  canEditReports: () => false,\n  hasPermission: () => false,\n  setNavigation: () => {},\n  navigate: () => console.warn('Navigation not initialized'),\n  isAdmin: false,\n  initialized: false,\n});\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, setState] = useState<AuthState>(initialState);\n  const [navigate, setNavigate] = useState<((to: string) => void) | null>(() => {\n    return (to: string) => {\n      console.warn('Navigation not yet initialized. Attempted to navigate to:', to);\n    };\n  });\n  const { isOnline } = useNetworkStatus();\n  \n  // Memoized fetchUserProfile to avoid re-renders - properly moved inside component\n\n  // Function to create a timeout for any promise\n  const promiseWithTimeout = async (promise: Promise<any>, timeoutMs: number, errorMessage: string) => {\n    // Create a promise that rejects in <timeoutMs> milliseconds\n    const timeoutPromise = new Promise((_, reject) => {\n      const id = setTimeout(() => {\n        clearTimeout(id);\n        reject(new Error(`Timeout after ${timeoutMs}ms: ${errorMessage}`));\n      }, timeoutMs);\n    });\n  \n    // Returns a race between our timeout and the passed in promise\n    return Promise.race([\n      promise,\n      timeoutPromise\n    ]);\n  };\n\n  const fetchUserProfile = useCallback(async (userId: string): Promise<ExtendedUser | null> => {\n    console.log(\"Checking Supabase connection (will continue offline if unavailable)...\", userId);\n    console.log(\"fetchUserProfile: Checking for cached user data first...\");\n    \n    // No valid cached data, fetch from API\n    console.log(\"fetchUserProfile: Calling supabase.auth.getUser()...\");\n    let supabaseUser: User | null = null;\n    let profileData: Profile | null = null;\n\n    try {\n      // Use timeout to prevent indefinite hang\n      let result;\n      try {\n        result = await promiseWithTimeout(\n          supabase.auth.getUser(),\n          10000, // 10 second timeout\n          \"supabase.auth.getUser() call timed out\"\n        );\n      } catch (timeoutError) {\n        console.error(\"fetchUserProfile: Timeout error:\", timeoutError);\n        throw new Error(\"Could not get authentication data: network request timed out\");\n      }\n      \n      const { data: { user }, error: userError } = result;\n      supabaseUser = user;\n\n      console.log(\"fetchUserProfile: supabase.auth.getUser() completed. User error:\", userError, \"User exists:\", !!supabaseUser);\n      console.log(\"DEBUG: supabaseUser object:\", supabaseUser);\n\n      if (userError) {\n        console.error(\"fetchUserProfile: Error from supabase.auth.getUser():\", userError);\n        // If it's an AuthSessionMissingError, treat it as no user logged in\n        if (userError.name === 'AuthSessionMissingError') {\n          console.warn(\"fetchUserProfile: Auth session missing. Treating as no user logged in.\");\n          return null; // Return null to indicate no active user\n        } else {\n          throw userError; // Re-throw other unexpected errors\n        }\n      }\n      if (!supabaseUser) {\n        console.warn(\"fetchUserProfile: No user returned from supabase.auth.getUser(). Treating as no user logged in.\");\n        return null; // Return null to indicate no active user\n      }\n\n      // Fetch profile data with timeout\n      let profileResult;\n      try {\n        // Convert PostgrestBuilder to Promise for TypeScript compatibility\n        const fetchProfile = async () => {\n          // Make sure supabaseUser exists before trying to use it\n          if (!supabaseUser) {\n            throw new Error(\"Cannot fetch profile: user is null\");\n          }\n          \n          return await supabase\n            .from('users')\n            .select(`id, first_name, last_name, email, phone, role, position`)\n            .eq('auth_id', supabaseUser.id)\n            .single();\n        };\n        \n        profileResult = await promiseWithTimeout(\n          fetchProfile(),\n          10000, // 10 second timeout\n          \"Profile fetch from Supabase timed out\"\n        );\n      } catch (timeoutError) {\n        console.error(\"fetchUserProfile: Profile fetch timeout:\", timeoutError);\n        throw new Error(\"Could not get profile data: network request timed out\");\n      }\n      \n      const { data: profile, error: profileError } = profileResult;\n      profileData = profile;\n\n      console.log(\"DEBUG: Profile data from 'profiles' table:\", profileData);\n      console.log(\"DEBUG: Profile fetch error:\", profileError);\n      console.log(\"DEBUG: Role from profileData:\", profileData?.role);\n\n      if (profileError) {\n        console.error(\"fetchUserProfile: Error fetching profile from 'profiles' table:\", profileError);\n        throw profileError;\n      }\n\n      if (!profileData) {\n        console.warn(\"fetchUserProfile: No profile data found for user:\", supabaseUser.id);\n        throw new Error(\"No profile data found.\");\n      }\n\n    } catch (error) {\n      console.error(\"fetchUserProfile: An unexpected error occurred during user profile fetch:\", error);\n      throw error;\n    }\n\n    // Correctly construct ExtendedUser from supabaseUser and profileData\n    const extendedUser = {\n      id: supabaseUser.id,\n      auth_id: supabaseUser.id,\n      first_name: profileData?.first_name || '',\n      last_name: profileData?.last_name || '',\n      email: supabaseUser.email || null,\n      phone: supabaseUser.phone || null,\n      role: (profileData?.role || 'viewer') as UserRole, // Use role from profileData\n      position: (supabaseUser.user_metadata?.position || 'field_agent') as UserPosition,\n      status: (supabaseUser.user_metadata?.status || 'active') as UserStatus,\n      created_at: supabaseUser.created_at || new Date().toISOString(),\n      updated_at: supabaseUser.updated_at || new Date().toISOString(),\n      last_login_at: supabaseUser.last_sign_in_at || null,\n      avatar_url: '', // Removed avatar_url as it's not in the 'users' table\n      metadata: supabaseUser.user_metadata || {},\n      permissions: supabaseUser.user_metadata?.permissions || [],\n      cached_at: new Date().toISOString() // Add timestamp for cache invalidation\n    };\n\n    console.log(\"DEBUG: Final extendedUser object before return:\", extendedUser);\n    console.log(\"DEBUG: Role in final extendedUser object:\", extendedUser.role);\n    \n\n    \n    return extendedUser;\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true; // Declare isMounted here\n\n    console.log(\"AuthProvider: Running initialization effect.\");\n\n    const initializeAuth = async (onlineStatus: boolean) => {\n      console.log(\"AuthProvider: Starting initializeAuth.\");\n      let session: Session | null = null; // Declare session here\n      let userProfile: ExtendedUser | null = null; // Declare userProfile here\n\n      try {\n        // Try to load session from Capacitor Preferences first\n        console.log(\"AuthProvider: Attempting to load session from preferences...\");\n        const { value: storedSession } = await Preferences.get({ key: STORAGE_KEY });\n        console.log(\"AuthProvider: Preferences.get completed. Stored session exists:\", !!storedSession);\n\n        if (storedSession) {\n          try {\n            const parsedSession = JSON.parse(storedSession);\n            \n            // Check if the session is still within our 30-day validity period\n            const sessionTimestamp = parsedSession.created_at || parsedSession.expires_at;\n            const sessionDate = new Date(sessionTimestamp).getTime();\n            const currentDate = new Date().getTime();\n            const isSessionValid = (currentDate - sessionDate) < SESSION_EXPIRATION;\n            \n            if (isSessionValid) {\n              // When offline, just use the stored session without validation\n              if (!onlineStatus) {\n                session = parsedSession;\n                console.log(\"AuthProvider: Offline mode - using stored session without validation.\");\n              } else {\n                // Online mode - try to validate with Supabase\n                try {\n                  // Only attempt to set session if it's not null and has an access_token\n                  if (parsedSession && parsedSession.access_token) {\n                    await supabase.auth.setSession(parsedSession);\n                    session = parsedSession; // Assign to the outer-scoped session\n                    console.log(\"AuthProvider: Session restored and validated with Supabase.\");\n                  } else {\n                    console.warn(\"AuthProvider: Parsed session is invalid or missing access_token. Not setting session.\");\n                    await Preferences.remove({ key: STORAGE_KEY });\n                  }\n                } catch (validationError) {\n                  console.error(\"AuthProvider: Error validating session with Supabase:\", validationError);\n                  if (validationError instanceof Error && validationError.name === 'AuthSessionMissingError') {\n                    console.log(\"AuthProvider: AuthSessionMissingError during validation. Clearing session.\");\n                    await Preferences.remove({ key: STORAGE_KEY });\n                    session = null; // Explicitly clear session\n                  } else {\n                    // Even if online validation fails, keep the session if within 30 days\n                    console.log(\"AuthProvider: Online validation failed, but session is within 30 days. Keeping session.\");\n                    session = parsedSession;\n                  }\n                }\n              }\n            } else {\n              console.log(\"AuthProvider: Stored session expired (older than 30 days). Clearing.\");\n              await Preferences.remove({ key: STORAGE_KEY });\n            }\n          } catch (parseError) {\n            console.error(\"AuthProvider: Failed to parse stored session.\", parseError);\n            await Preferences.remove({ key: STORAGE_KEY });\n            console.log(\"AuthProvider: Invalid session format. Clearing.\");\n          }\n        }\n\n        // If no session from preferences, and we are online, try to get it from Supabase\n        if (!session && onlineStatus) {\n          console.log(\"AuthProvider: No session from preferences, attempting to get from Supabase...\");\n          try {\n            const { data: { session: currentSession }, error: getSessionError } = await supabase.auth.getSession();\n            if (getSessionError) {\n              console.error(\"AuthProvider: Error getting session from Supabase:\", getSessionError);\n              if (getSessionError.name === 'AuthSessionMissingError') {\n                console.log(\"AuthProvider: AuthSessionMissingError when getting session. Clearing session.\");\n                await Preferences.remove({ key: STORAGE_KEY });\n                session = null; // Explicitly clear session\n              }\n            } else {\n              console.log(\"AuthProvider: supabase.auth.getSession completed. Session exists:\", !!currentSession);\n              session = currentSession;\n              console.log(\"AuthProvider: Fetched session from Supabase.\");\n            }\n          } catch (error) {\n            console.warn(\"AuthProvider: Failed to get session from Supabase (possibly network issue or unexpected error):\");\n          }\n        }\n\n        if (session?.user) {\n          console.log(\"AuthProvider: Session user found, attempting to fetch user profile.\");\n          // Attempt to fetch full profile only if online, otherwise use minimal user data from session\n          if (onlineStatus) {\n            try {\n              userProfile = await fetchUserProfile(session.user.id);\n              console.log(\"AuthProvider: fetchUserProfile completed.\");\n            } catch (profileError) {\n              console.warn(\"AuthProvider: Failed to fetch user profile during initialization (possibly offline or error).\", profileError);\n              // Fallback to minimal user if online fetch fails\n              userProfile = {\n                id: session.user.id,\n                auth_id: session.user.id,\n                first_name: session.user.user_metadata?.first_name || '',\n                last_name: session.user.user_metadata?.last_name || '',\n                email: session.user.email || null,\n                phone: session.user.phone || null,\n                role: (session.user.user_metadata?.role || 'viewer') as UserRole,\n                position: (session.user.user_metadata?.position || 'field_agent') as UserPosition,\n                status: (session.user.user_metadata?.status || 'active') as UserStatus,\n                created_at: session.user.created_at || new Date().toISOString(),\n                updated_at: session.user.updated_at || new Date().toISOString(),\n                last_login_at: session.user.last_sign_in_at || new Date().toISOString(),\n                avatar_url: session.user.user_metadata?.avatar_url || '',\n                metadata: session.user.user_metadata || {},\n                permissions: session.user.user_metadata?.permissions || [],\n              };\n            }\n          } else {\n            // If offline, use the session's user data directly\n            userProfile = {\n              id: session.user.id,\n              auth_id: session.user.id,\n              first_name: session.user.user_metadata?.first_name || '',\n              last_name: session.user.user_metadata?.last_name || '',\n              email: session.user.email || null,\n              phone: session.user.phone || null,\n              role: (session.user.user_metadata?.role || 'viewer') as UserRole,\n              position: (session.user.user_metadata?.position || 'field_agent') as UserPosition,\n              status: (session.user.user_metadata?.status || 'active') as UserStatus,\n              created_at: session.user.created_at || new Date().toISOString(),\n              updated_at: session.user.updated_at || new Date().toISOString(),\n              last_login_at: session.user.last_sign_in_at || new Date().toISOString(),\n              avatar_url: session.user.user_metadata?.avatar_url || '',\n              metadata: session.user.user_metadata || {},\n              permissions: session.user.user_metadata?.permissions || [],\n              cached_at: new Date().toISOString(), // Add timestamp for cache invalidation\n            };\n            \n            // Try to retrieve cached profile first, even when offline\n            try {\n              const { value: cachedProfileStr } = await Preferences.get({ key: `user_profile_${session.user.id}` });\n              if (cachedProfileStr) {\n                const cachedProfile = JSON.parse(cachedProfileStr);\n                // Use cached profile if it's more complete than the basic one\n                if (cachedProfile.avatar_url && !userProfile.avatar_url) {\n                  userProfile.avatar_url = cachedProfile.avatar_url;\n                }\n                // Any other cached properties we want to use can be added here\n              }\n            } catch (cacheError) {\n              console.warn('AuthProvider: Error retrieving cached profile:', cacheError);\n            }\n            console.log(\"AuthProvider: Offline, using session user for profile.\");\n          }\n        }\n      } catch (mainError) {\n        console.error(\"AuthProvider: Error during main initialization process:\", mainError);\n      } finally {\n        console.log(\"AuthProvider: initializeAuth finally block reached. isMounted:\", isMounted);\n        if (isMounted) {\n          setState(prevState => ({\n            ...prevState,\n            user: userProfile,\n            session,\n            error: null,\n            loading: false,\n            initialized: true, // Ensure initialized is set to true\n          }));\n        }\n      }\n    };\n\n    initializeAuth(isOnline); // Call initializeAuth with the current online status\n  }, [isOnline, fetchUserProfile]);\n\n  // Refresh user data\n  // Sign in handler - with offline support and login tracking\n  const handleSignIn = useCallback(async (email: string, password: string, rememberMe: boolean = true): Promise<{\n    user: ExtendedUser | null;\n    error: Error | null\n  }> => {\n    console.log(\"handleSignIn: Attempting to sign in user:\", email);\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    // Record login attempt with device information and location if available\n    const loginAttempt: any = {\n      email,\n      timestamp: new Date().toISOString(),\n      success: false,\n      online: isOnline,\n      deviceInfo: {\n        userAgent: navigator.userAgent,\n        platform: navigator.platform,\n        screenSize: `${window.screen.width}x${window.screen.height}`,\n      }\n    };\n    \n    // Try to get geolocation data through the Capacitor Geolocation plugin\n    try {\n      // Request location permissions first\n      await requestLocationPermission();\n      \n      // Then try to get the current position\n      try {\n        const locationData = await getCurrentPosition();\n        \n        // When position is available, update the login record\n        loginAttempt.location = locationData;\n        \n        // Update the stored login history with location\n        try {\n          const { value } = await Preferences.get({ key: 'login_history' });\n          let history = value ? JSON.parse(value) : [];\n          \n          // Find and update the most recent login attempt\n          if (history.length > 0) {\n            const lastIndex = history.length - 1;\n            if (history[lastIndex].email === email) {\n              history[lastIndex].location = loginAttempt.location;\n              await Preferences.set({\n                key: 'login_history',\n                value: JSON.stringify(history)\n              });\n              console.log(\"Location data added to login history\");\n            }\n          }\n        } catch (err) {\n          console.warn(\"Failed to update location in login history:\", err);\n        }\n      } catch (locationError) {\n        console.warn(\"Error getting location:\", locationError);\n      }\n    } catch (permissionError) {\n      console.warn(\"Location permission error:\", permissionError);\n    }\n      \n    // Try to get device orientation (compass) if available\n    try {\n      if (window.DeviceOrientationEvent) {\n        const handleOrientation = (event: DeviceOrientationEvent) => {\n          // Only capture orientation once\n          window.removeEventListener('deviceorientation', handleOrientation);\n          \n          if (event.alpha !== null) {\n            loginAttempt.orientation = {\n              alpha: event.alpha, // compass direction (0-360)\n              beta: event.beta,   // front-to-back tilt\n              gamma: event.gamma  // left-to-right tilt\n            };\n            \n            // Update stored login history with orientation data\n            Preferences.get({ key: 'login_history' }).then(({ value }) => {\n              let history = value ? JSON.parse(value) : [];\n              if (history.length > 0) {\n                const lastIndex = history.length - 1;\n                if (history[lastIndex].email === email) {\n                  history[lastIndex].orientation = loginAttempt.orientation;\n                  Preferences.set({\n                    key: 'login_history',\n                    value: JSON.stringify(history)\n                  });\n                  console.log(\"Orientation data added to login history\");\n                }\n              }\n            }).catch(err => {\n              console.warn(\"Failed to update orientation in login history:\", err);\n            });\n          }\n        };\n        \n        // Request device orientation permission and data\n        window.addEventListener('deviceorientation', handleOrientation, true);\n      }\n    } catch (sensorError) {\n      console.warn(\"Error accessing device sensors:\", sensorError);\n    }\n    \n    try {\n      // Store login attempt in Preferences\n      const { value: loginHistoryStr } = await Preferences.get({ key: 'login_history' });\n      const loginHistory = loginHistoryStr ? JSON.parse(loginHistoryStr) : [];\n      loginHistory.push(loginAttempt);\n      await Preferences.set({\n        key: 'login_history',\n        value: JSON.stringify(loginHistory)\n      });\n      \n      // If offline, check for cached credentials\n      if (!isOnline) {\n        console.log(\"handleSignIn: Offline mode, checking cached session\");\n        try {\n          const { value: storedSessionStr } = await Preferences.get({ key: STORAGE_KEY });\n          if (storedSessionStr) {\n            const storedSession = JSON.parse(storedSessionStr);\n            \n            // Also load cached user profile\n            const { value: cachedUserStr } = await Preferences.get({\n              key: `user_profile_${storedSession.user.id}`\n            });\n            \n            if (cachedUserStr) {\n              const cachedUser = JSON.parse(cachedUserStr);\n              const cachedEmail = cachedUser.email;\n              \n              // Basic offline validation - just check if emails match\n              // In a real app, we'd want more secure offline auth\n              if (cachedEmail === email) {\n                console.log(\"handleSignIn: Offline login successful with cached credentials\");\n                \n                // Update login history to mark success\n                loginHistory[loginHistory.length - 1].success = true;\n                await Preferences.set({\n                  key: 'login_history',\n                  value: JSON.stringify(loginHistory)\n                });\n                \n                setState(prevState => ({\n                  ...prevState,\n                  user: cachedUser,\n                  session: storedSession,\n                  loading: false,\n                  error: null,\n                }));\n                \n                return {\n                  user: cachedUser,\n                  error: null\n                };\n              }\n            }\n            \n            // If we reach here, offline login failed\n            const offlineError = new Error(\"Offline login failed. Please ensure you've logged in at least once with internet connection.\");\n            setState(prevState => ({ ...prevState, loading: false, error: offlineError.message }));\n            return { user: null, error: offlineError };\n          }\n        } catch (offlineError) {\n          console.error(\"handleSignIn: Error during offline login:\", offlineError);\n          setState(prevState => ({\n            ...prevState,\n            loading: false,\n            error: \"Offline login failed. No cached session available.\"\n          }));\n          return {\n            user: null,\n            error: offlineError instanceof Error\n              ? offlineError\n              : new Error(\"Offline login failed\")\n          };\n        }\n      }\n      \n      // Online login with Supabase\n      console.log(\"handleSignIn: Online mode, calling Supabase auth\");\n      const authResponse = await promiseWithTimeout(\n        supabase.auth.signInWithPassword({ email, password }),\n        15000, // 15 second timeout\n        \"Supabase auth login request timed out\"\n      );\n      \n      const { data, error } = authResponse;\n      \n      if (error) {\n        console.error(\"handleSignIn: Error signing in with Supabase:\", error);\n        setState(prevState => ({ ...prevState, loading: false, error: error.message }));\n        return { user: null, error };\n      }\n      \n      if (!data.user || !data.session) {\n        const noUserError = new Error(\"No user or session returned from Supabase auth\");\n        console.error(\"handleSignIn: No user returned in auth response\");\n        setState(prevState => ({ ...prevState, loading: false, error: noUserError.message }));\n        return { user: null, error: noUserError };\n      }\n      \n      console.log(\"handleSignIn: Supabase auth successful, getting full user profile\");\n      \n      // Update login history to mark success\n      loginHistory[loginHistory.length - 1].success = true;\n      await Preferences.set({\n        key: 'login_history',\n        value: JSON.stringify(loginHistory)\n      });\n      \n      // Store session in Preferences for offline use if rememberMe is true\n      if (rememberMe) {\n        // Add timestamp information to ensure we can track the 30-day expiration\n        const sessionWithMetadata = {\n          ...data.session,\n          created_at: new Date().toISOString(),\n          local_expiry: new Date(Date.now() + SESSION_EXPIRATION).toISOString()\n        };\n        \n        await Preferences.set({\n          key: STORAGE_KEY,\n          value: JSON.stringify(sessionWithMetadata)\n        });\n        \n        console.log(\"handleSignIn: Session stored with 30-day local expiration date:\", sessionWithMetadata.local_expiry);\n      }\n      \n      // Get full user profile with location data and permissions\n      let userProfile: ExtendedUser | null = null;\n      try {\n        userProfile = await fetchUserProfile(data.user.id);\n        \n        if (!userProfile) {\n          console.warn(\"handleSignIn: fetchUserProfile returned null. User profile not found or session invalid.\");\n          // If userProfile is null, it means there's no active user or session.\n          // We should clear any potentially lingering session and return an error.\n          await Preferences.remove({ key: STORAGE_KEY });\n          setState(prevState => ({ ...prevState, loading: false, user: null, session: null, error: \"User profile not found or session invalid.\" }));\n          return { user: null, error: new Error(\"User profile not found or session invalid.\") };\n        }\n\n        // Store user profile for offline use\n        await Preferences.set({\n          key: `user_profile_${data.user.id}`,\n          value: JSON.stringify({\n            ...userProfile,\n            cached_at: new Date().toISOString()\n          })\n        });\n        \n        console.log(\"handleSignIn: User profile fetched and cached successfully\");\n      } catch (profileError) {\n        console.warn(\"handleSignIn: Error fetching full profile, using basic user data\", profileError);\n        // Still continue with basic user info if profile fetch fails\n        userProfile = {\n          id: data.user.id,\n          auth_id: data.user.id,\n          first_name: data.user.user_metadata?.first_name || '',\n          last_name: data.user.user_metadata?.last_name || '',\n          email: data.user.email || null,\n          phone: data.user.phone || null,\n          role: (data.user.user_metadata?.role || 'viewer') as UserRole,\n          position: (data.user.user_metadata?.position || 'field_agent') as UserPosition,\n          status: (data.user.user_metadata?.status || 'active') as UserStatus,\n          created_at: data.user.created_at || new Date().toISOString(),\n          updated_at: data.user.updated_at || new Date().toISOString(),\n          last_login_at: data.user.last_sign_in_at || new Date().toISOString(),\n          avatar_url: data.user.user_metadata?.avatar_url || '',\n          metadata: data.user.user_metadata || {},\n          permissions: data.user.user_metadata?.permissions || [],\n          cached_at: new Date().toISOString()\n        };\n        \n        // Still cache the basic user profile\n        await Preferences.set({\n          key: `user_profile_${data.user.id}`,\n          value: JSON.stringify(userProfile)\n        });\n      }\n      \n      setState(prevState => ({\n        ...prevState,\n        user: userProfile,\n        session: data.session,\n        loading: false,\n        error: null,\n      }));\n      \n      return { user: userProfile, error: null };\n      \n    } catch (unexpectedError) {\n      console.error(\"handleSignIn: Unexpected error during sign in:\", unexpectedError);\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: unexpectedError instanceof Error ? unexpectedError.message : \"An unexpected error occurred\"\n      }));\n      return {\n        user: null,\n        error: unexpectedError instanceof Error ? unexpectedError : new Error(\"Unknown error during sign in\")\n      };\n    }\n  }, [setState, isOnline, fetchUserProfile]);\n  \n  // Sign out handler\n  const handleSignOut = useCallback(async (): Promise<{ error: Error | null }> => {\n    console.log(\"handleSignOut: Signing out user\");\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    try {\n      // Record sign out in login history\n      const { value: loginHistoryStr } = await Preferences.get({ key: 'login_history' });\n      const loginHistory = loginHistoryStr ? JSON.parse(loginHistoryStr) : [];\n      \n      loginHistory.push({\n        timestamp: new Date().toISOString(),\n        event: 'signout',\n        online: isOnline,\n        userId: state.user?.id || null\n      });\n      \n      await Preferences.set({\n        key: 'login_history',\n        value: JSON.stringify(loginHistory)\n      });\n      \n      // If online, sign out from Supabase\n      if (isOnline) {\n        const { error } = await supabase.auth.signOut();\n        if (error) throw error;\n      }\n      \n      // Always remove cached session\n      await Preferences.remove({ key: STORAGE_KEY });\n      \n      // Don't remove cached user profiles to allow offline login later\n      \n      setState({\n        user: null,\n        session: null,\n        loading: false,\n        error: null,\n        initialized: true,\n      });\n      \n      return { error: null };\n    } catch (error) {\n      console.error('Error signing out:', error);\n      \n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error instanceof Error ? error.message : \"Error signing out\"\n      }));\n      \n      return { error: error instanceof Error ? error : new Error(\"Error signing out\") };\n    }\n  }, [setState, isOnline, state.user]);\n  \n  // Reset password\n  const handleResetPassword = useCallback(async (email: string): Promise<{ error: Error | null }> => {\n    console.log(\"handleResetPassword: Requesting password reset for:\", email);\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    try {\n      if (!isOnline) {\n        throw new Error(\"Cannot reset password while offline\");\n      }\n      \n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: window.location.origin + '/reset-password',\n      });\n      \n      if (error) throw error;\n      \n      setState(prevState => ({ ...prevState, loading: false }));\n      return { error: null };\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      \n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error instanceof Error ? error.message : \"Error resetting password\"\n      }));\n      \n      return { error: error instanceof Error ? error : new Error(\"Error resetting password\") };\n    }\n  }, [setState, isOnline]);\n  \n  // Update password\n  const handleUpdatePassword = useCallback(async (newPassword: string): Promise<{ error: Error | null }> => {\n    console.log(\"handleUpdatePassword: Updating password\");\n    setState(prevState => ({ ...prevState, loading: true, error: null }));\n    \n    try {\n      if (!isOnline) {\n        throw new Error(\"Cannot update password while offline\");\n      }\n      \n      const { error } = await supabase.auth.updateUser({\n        password: newPassword,\n      });\n      \n      if (error) throw error;\n      \n      setState(prevState => ({ ...prevState, loading: false }));\n      return { error: null };\n    } catch (error) {\n      console.error('Error updating password:', error);\n      \n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        error: error instanceof Error ? error.message : \"Error updating password\"\n      }));\n      \n      return { error: error instanceof Error ? error : new Error(\"Error updating password\") };\n    }\n  }, [setState, isOnline]);\n  \n  // Navigation setter\n  const setNavigation = useCallback((nav: (to: string) => void) => {\n    setNavigate(() => nav);\n  }, []);\n  \n  // Refresh user data\n  const refreshUser = useCallback(async () => {\n    try {\n      const { data: { user }, error } = await supabase.auth.getUser();\n      \n      if (error) throw error;\n      if (!user) return;\n      \n      const userProfile = await fetchUserProfile(user.id);\n      if (userProfile) {\n        setState(prevState => ({ ...prevState, user: userProfile }));\n      }\n    } catch (error) {\n      console.error('Error refreshing user:', error);\n      throw error;\n    }\n  }, [setState, fetchUserProfile]);\n\n  // Permission checks\n  const isAdmin = useMemo(() => state.user?.role === 'admin', [state.user]);\n  const isManager = useMemo(() => state.user?.role === 'manager', [state.user]);\n  const isDataCollector = useMemo(() => state.user?.role === 'data_collector', [state.user]);\n\n  const canCreateUserWithRole = useCallback((role: UserRole): boolean => {\n    if (!state.user) return false;\n    \n    switch (state.user.role) {\n      case 'admin':\n        return true;\n      case 'manager':\n        return ['data_collector', 'viewer'].includes(role);\n      default:\n        return false;\n    }\n  }, [state.user]);\n\n  const canManageUsers = useCallback((): boolean => {\n    return isAdmin || isManager;\n  }, [isAdmin, isManager]);\n\n  const canViewReports = useCallback((): boolean => {\n    return !!state.user;\n  }, [state.user]);\n\n  const canEditReports = useCallback((): boolean => {\n    return isAdmin || isDataCollector;\n  }, [isAdmin, isDataCollector]);\n\n  const hasPermission = useCallback((permission: Permission): boolean => {\n    if (!state.user) return false;\n    \n    switch (permission) {\n      case 'manage_users':\n        return canManageUsers();\n      case 'view_reports':\n        return canViewReports();\n      case 'edit_reports':\n        return canEditReports();\n      default:\n        return false;\n    }\n  }, [state.user, canManageUsers, canViewReports, canEditReports]);\n\n  // Context value\n  const contextValue = useMemo<AuthContextType>(() => ({\n    ...state,\n    signIn: handleSignIn,\n    signOut: handleSignOut,\n    refreshUser,\n    resetPassword: handleResetPassword,\n    updatePassword: handleUpdatePassword,\n    canCreateUserWithRole,\n    canManageUsers,\n    canViewReports,\n    canEditReports,\n    hasPermission,\n    setNavigation,\n    navigate: (to: string) => {\n      if (navigate) {\n        navigate(to);\n      } else {\n        console.warn('Navigation not initialized');\n      }\n    },\n    isAdmin: state.user?.role === 'admin',\n    initialized: state.initialized,\n  }), [\n    state,\n    handleSignIn,\n    handleSignOut,\n    refreshUser,\n    handleResetPassword,\n    handleUpdatePassword,\n    canCreateUserWithRole,\n    canManageUsers,\n    canViewReports,\n    canEditReports,\n    hasPermission,\n    navigate,\n    setNavigation\n  ]);\n\n  if (!state.initialized) {\n    return <FullPageLoader message=\"Initializing authentication...\" />;\n  }\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n","import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation, Outlet } from 'react-router-dom';\nimport { useAuth } from '@/contexts/NewAuthContext';\nimport { UserRole } from '@/types/auth';\nimport { Loader2 } from 'lucide-react';\nimport { supabase } from '@/lib/supabaseClient';\nimport { FullPageLoader } from '@/components/ui/FullPageLoader';\n\n// Storage key constant for consistency\nconst STORAGE_KEY = 'sb-vfsyjvjghftfebvxyjba-auth-token';\n\n// The fixed user ID we found in the diagnostics\nconst KNOWN_USER_ID = 'cda0c1cd-c91a-41c5-9bb8-93a1df73df6d';\nconst KNOWN_AUTH_ID = '5d261670-4476-4892-b3a4-3009cf49413b';\n\n// Function to check if there's a session in localStorage\nfunction hasLocalStorageSession(): boolean {\n  try {\n    const sessionStr = localStorage.getItem(STORAGE_KEY);\n    if (!sessionStr) return false;\n\n    const session = JSON.parse(sessionStr);\n    if (!session.access_token) return false;\n\n    // Check if session is expired\n    const now = Math.floor(Date.now() / 1000);\n    if (session.expires_at && session.expires_at < now) {\n      console.log('Local session exists but is expired');\n      return false;\n    }\n\n    return true;\n  } catch (e) {\n    console.error('Error checking localStorage session:', e);\n    return false;\n  }\n}\n\n// Function to create an emergency user object if needed\nasync function getEmergencyUserProfile(): Promise<any> {\n  // First try to get from database\n  try {\n    const { data: profile } = await supabase\n      .from('users')\n      .select('*')\n      .eq('id', KNOWN_USER_ID)\n      .single();\n\n    if (profile) {\n      console.log('Successfully loaded emergency user from database');\n      return profile;\n    }\n  } catch (e) {\n    console.error('Error fetching emergency user:', e);\n  }\n\n  // Fallback to hardcoded profile\n  return {\n    id: KNOWN_USER_ID,\n    auth_id: KNOWN_AUTH_ID,\n    email: \"yash.tagai@gmail.com\",\n    phone: \"9713010045\",\n    role: \"admin\",\n    first_name: \"Yash\",\n    last_name: \"Tagai\",\n    position: \"DFO\",\n    status: \"active\",\n    created_at: new Date().toISOString(),\n    updated_at: null\n  };\n}\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: UserRole;\n}\n\nexport const ProtectedRoute: React.FC = () => {\n  const { user, initialized } = useAuth();\n  const location = useLocation();\n\n  if (!initialized) {\n    // While the auth state is being determined, show a full-page loading indicator.\n    return <FullPageLoader message=\"Initializing session...\" />;\n  }\n\n  if (!user) {\n    // If initialization is complete and there's no user, redirect to login.\n    // Pass the original location in state so we can redirect back after login.\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If initialization is complete and a user exists, render the child routes.\n  return <Outlet />;\n};","import React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport interface AndroidBottomNavigationProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Navigation items to be displayed in the bottom bar\n   */\n  items: {\n    /**\n     * Unique identifier for the item\n     */\n    id: string;\n    \n    /**\n     * Display label for the navigation item\n     */\n    label: string;\n    \n    /**\n     * URL to navigate to when the item is clicked\n     */\n    href: string;\n    \n    /**\n     * Icon to display for the navigation item\n     */\n    icon: React.ReactNode;\n    \n    /**\n     * Optional badge count to display on the icon\n     */\n    badgeCount?: number;\n    \n    /**\n     * Whether the navigation item is disabled\n     */\n    disabled?: boolean;\n  }[];\n  \n  /**\n   * Custom value for the active item. If not provided, uses the current route.\n   */\n  value?: string;\n  \n  /**\n   * Handler for when a navigation item is changed\n   */\n  onValueChange?: (value: string) => void;\n  \n  /**\n   * Whether the bottom navigation should display labels\n   */\n  showLabels?: \"always\" | \"selected\" | \"never\";\n}\n\nexport function AndroidBottomNavigation({\n  className,\n  items,\n  value,\n  onValueChange,\n  showLabels = \"always\",\n  ...props\n}: AndroidBottomNavigationProps) {\n  const location = useLocation();\n  const [activeItem, setActiveItem] = useState(value || getCurrentRouteValue(location.pathname, items));\n  \n  // Update active item when route changes\n  React.useEffect(() => {\n    if (!value) {\n      setActiveItem(getCurrentRouteValue(location.pathname, items));\n    }\n  }, [location.pathname, items, value]);\n  \n  // Update active item when value prop changes\n  React.useEffect(() => {\n    if (value) {\n      setActiveItem(value);\n    }\n  }, [value]);\n\n  const handleItemClick = (itemId: string) => {\n    setActiveItem(itemId);\n    if (onValueChange) {\n      onValueChange(itemId);\n    }\n  };\n  \n  return (\n    <div\n      className={cn(\n        \"fixed bottom-0 left-0 right-0 z-50\",\n        \"bg-white dark:bg-gray-800\",\n        \"border-t border-gray-100 dark:border-gray-700\",\n        \"flex items-center justify-around\",\n        \"h-16 px-1\",\n        \"shadow-lg shadow-gray-100/50 dark:shadow-gray-900/20\",\n        \"backdrop-blur-sm bg-white/95 dark:bg-gray-800/95\",\n        className\n      )}\n      {...props}\n    >\n      {items.map((item) => {\n        const isActive = activeItem === item.id;\n        return (\n          <Link\n            key={item.id}\n            to={item.href}\n            onClick={() => !item.disabled && handleItemClick(item.id)}\n            className={cn(\n              \"relative flex-1 flex flex-col items-center justify-center h-full px-2\",\n              \"transition-all duration-200\",\n              isActive \n                ? \"text-blue-500 dark:text-blue-300\" \n                : \"text-gray-500 dark:text-gray-400\",\n              item.disabled \n                ? \"opacity-40 cursor-not-allowed\" \n                : \"hover:text-blue-400 hover:-translate-y-0.5 active:translate-y-0 dark:hover:text-blue-300\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-400/70 focus-visible:ring-offset-2 rounded-md\"\n            )}\n            aria-current={isActive ? \"page\" : undefined}\n            aria-disabled={item.disabled}\n            tabIndex={item.disabled ? -1 : 0}\n          >\n            {/* Icon */}\n            <div className=\"relative\">\n              <div className={cn(\n                \"text-xl\",\n                isActive ? \"scale-110 transition-transform text-blue-500 dark:text-blue-300\" : \"text-gray-500 dark:text-gray-400\"\n              )}>\n                {item.icon}\n              </div>\n              \n              {/* Badge */}\n              {item.badgeCount && item.badgeCount > 0 && (\n                <span className={cn(\n                  \"absolute -top-1 -right-1\",\n                  \"flex items-center justify-center\",\n                  \"min-w-[18px] h-[18px]\",\n                  \"text-[10px] font-medium\",\n                  \"rounded-full\",\n                  \"bg-red-500 text-white\",\n                  \"shadow-sm\",\n                  \"border border-white dark:border-gray-800\",\n                  \"px-1\"\n                )}>\n                  {item.badgeCount > 99 ? \"99+\" : item.badgeCount}\n                </span>\n              )}\n            </div>\n            \n            {/* Label */}\n            {(showLabels === \"always\" || (showLabels === \"selected\" && isActive)) && (\n              <span className={cn(\n                \"mt-1 text-xs font-medium\",\n                \"whitespace-nowrap overflow-hidden text-ellipsis\",\n                \"max-w-full\",\n                isActive ? \"text-blue-500 dark:text-blue-300\" : \"text-gray-500 dark:text-gray-400\"\n              )}>\n                {item.label}\n              </span>\n            )}\n            \n            {/* Active indicator */}\n            {isActive && (\n              <div className=\"absolute bottom-0 w-12 h-0.5 rounded-t-full bg-blue-500 dark:bg-blue-300 shadow-sm transition-all duration-200\" />\n            )}\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\n// Helper function to determine active item based on current route\nfunction getCurrentRouteValue(pathname: string, items: AndroidBottomNavigationProps[\"items\"]) {\n  // Try exact match first\n  const exactMatch = items.find((item) => item.href === pathname);\n  if (exactMatch) return exactMatch.id;\n  \n  // Try partial match (for nested routes)\n  const partialMatch = items.find((item) => \n    pathname.startsWith(item.href) && item.href !== \"/\"\n  );\n  if (partialMatch) return partialMatch.id;\n  \n  // Default to first non-disabled item\n  const defaultItem = items.find((item) => !item.disabled);\n  return defaultItem ? defaultItem.id : items[0].id;\n}\n","import React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport interface AndroidNavRailProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Navigation items to be displayed in the navigation rail\n   */\n  items: {\n    /**\n     * Unique identifier for the item\n     */\n    id: string;\n    \n    /**\n     * Display label for the navigation item\n     */\n    label: string;\n    \n    /**\n     * URL to navigate to when the item is clicked\n     */\n    href: string;\n    \n    /**\n     * Icon to display for the navigation item\n     */\n    icon: React.ReactNode;\n    \n    /**\n     * Optional badge count to display on the icon\n     */\n    badgeCount?: number;\n    \n    /**\n     * Whether the navigation item is disabled\n     */\n    disabled?: boolean;\n  }[];\n  \n  /**\n   * Custom value for the active item. If not provided, uses the current route.\n   */\n  value?: string;\n  \n  /**\n   * Handler for when a navigation item is changed\n   */\n  onValueChange?: (value: string) => void;\n  \n  /**\n   * Whether the nav rail should display labels\n   */\n  showLabels?: \"always\" | \"selected\" | \"never\";\n  \n  /**\n   * Optional header content to display at the top of the rail\n   */\n  header?: React.ReactNode;\n  \n  /**\n   * Optional fab element to display in the rail\n   */\n  fab?: React.ReactNode;\n}\n\nexport function AndroidNavRail({\n  className,\n  items,\n  value,\n  onValueChange,\n  showLabels = \"selected\",\n  header,\n  fab,\n  ...props\n}: AndroidNavRailProps) {\n  const location = useLocation();\n  const [activeItem, setActiveItem] = useState(value || getCurrentRouteValue(location.pathname, items));\n  \n  // Update active item when route changes\n  React.useEffect(() => {\n    if (!value) {\n      setActiveItem(getCurrentRouteValue(location.pathname, items));\n    }\n  }, [location.pathname, items, value]);\n  \n  // Update active item when value prop changes\n  React.useEffect(() => {\n    if (value) {\n      setActiveItem(value);\n    }\n  }, [value]);\n\n  const handleItemClick = (itemId: string) => {\n    setActiveItem(itemId);\n    if (onValueChange) {\n      onValueChange(itemId);\n    }\n  };\n  \n  return (\n    <div\n      className={cn(\n        \"fixed top-0 left-0 bottom-0 z-50\",\n        \"bg-white dark:bg-gray-800\",\n        \"border-r border-gray-100 dark:border-gray-700\",\n        \"flex flex-col items-center\",\n        \"w-20 py-3 px-1\",\n        \"shadow-lg shadow-gray-100/50 dark:shadow-gray-900/20\",\n        \"backdrop-blur-sm bg-white/95 dark:bg-gray-800/95\",\n        className\n      )}\n      {...props}\n    >\n      {/* Header if provided */}\n      {header && (\n        <div className=\"mb-4 w-full flex justify-center\">{header}</div>\n      )}\n      \n      {/* FAB if provided - typically placed after header */}\n      {fab && (\n        <div className=\"mb-6 mt-2 w-full flex justify-center\">{fab}</div>\n      )}\n      \n      {/* Navigation items */}\n      <div className=\"flex-1 w-full flex flex-col items-center gap-4 overflow-y-auto py-2\">\n        {items.map((item) => {\n          const isActive = activeItem === item.id;\n          return (\n            <Link\n              key={item.id}\n              to={item.href}\n              onClick={() => !item.disabled && handleItemClick(item.id)}\n              className={cn(\n                \"relative flex flex-col items-center justify-center\",\n                \"w-full py-3 px-1\",\n                \"transition-all duration-200 rounded-lg\",\n                isActive \n                  ? \"bg-blue-50 text-blue-500 dark:bg-blue-900/30 dark:text-blue-300 shadow-sm\" \n                  : \"text-gray-600 dark:text-gray-400\",\n                item.disabled \n                  ? \"opacity-40 cursor-not-allowed\" \n                  : \"hover:bg-gray-50 hover:text-blue-400 hover:-translate-y-0.5 active:translate-y-0 dark:hover:bg-gray-700/50 dark:hover:text-blue-300\",\n                \"focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-400/70 focus-visible:ring-offset-2\"\n              )}\n              aria-current={isActive ? \"page\" : undefined}\n              aria-disabled={item.disabled}\n              tabIndex={item.disabled ? -1 : 0}\n            >\n              {/* Icon */}\n              <div className=\"relative\">\n                <div className={cn(\n                  \"text-xl\",\n                  isActive ? \"scale-110 transition-transform text-blue-500 dark:text-blue-300\" : \"text-gray-500 dark:text-gray-400\"\n                )}>\n                  {item.icon}\n                </div>\n                \n                {/* Badge */}\n                {item.badgeCount && item.badgeCount > 0 && (\n                  <span className={cn(\n                    \"absolute -top-1 -right-1\",\n                    \"flex items-center justify-center\",\n                    \"min-w-[18px] h-[18px]\",\n                    \"text-[10px] font-medium\",\n                    \"rounded-full\",\n                    \"bg-red-500 text-white\",\n                    \"shadow-sm\",\n                    \"border border-white dark:border-gray-800\",\n                    \"px-1\"\n                  )}>\n                    {item.badgeCount > 99 ? \"99+\" : item.badgeCount}\n                  </span>\n                )}\n              </div>\n              \n              {/* Label */}\n              {(showLabels === \"always\" || (showLabels === \"selected\" && isActive)) && (\n                <span className={cn(\n                  \"mt-1.5 text-xs font-medium\",\n                  \"whitespace-nowrap overflow-hidden text-ellipsis\",\n                  \"max-w-full text-center\",\n                  isActive ? \"text-blue-500 dark:text-blue-300\" : \"text-gray-500 dark:text-gray-400\"\n                )}>\n                  {item.label}\n                </span>\n              )}\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\n// Helper function to determine active item based on current route\nfunction getCurrentRouteValue(pathname: string, items: AndroidNavRailProps[\"items\"]) {\n  // Try exact match first\n  const exactMatch = items.find((item) => item.href === pathname);\n  if (exactMatch) return exactMatch.id;\n  \n  // Try partial match (for nested routes)\n  const partialMatch = items.find((item) => \n    pathname.startsWith(item.href) && item.href !== \"/\"\n  );\n  if (partialMatch) return partialMatch.id;\n  \n  // Default to first non-disabled item\n  const defaultItem = items.find((item) => !item.disabled);\n  return defaultItem ? defaultItem.id : items[0].id;\n}\n","import React, { createContext, useContext, ReactNode } from 'react';\n\n// Define the theme colors based on Material Design 3\nexport interface AndroidThemeColors {\n  primary: string;\n  onPrimary: string;\n  primaryContainer: string;\n  onPrimaryContainer: string;\n  secondary: string;\n  onSecondary: string;\n  secondaryContainer: string;\n  onSecondaryContainer: string;\n  tertiary: string;\n  onTertiary: string;\n  tertiaryContainer: string;\n  onTertiaryContainer: string;\n  error: string;\n  onError: string;\n  errorContainer: string;\n  onErrorContainer: string;\n  background: string;\n  onBackground: string;\n  surface: string;\n  onSurface: string;\n  surfaceVariant: string;\n  onSurfaceVariant: string;\n  outline: string;\n  shadow: string;\n  inverseSurface: string;\n  inverseOnSurface: string;\n  inversePrimary: string;\n}\n\n// Define the theme typography\nexport interface AndroidThemeTypography {\n  fontFamily: string;\n  displayLarge: string;\n  displayMedium: string;\n  displaySmall: string;\n  headlineLarge: string;\n  headlineMedium: string;\n  headlineSmall: string;\n  titleLarge: string;\n  titleMedium: string;\n  titleSmall: string;\n  labelLarge: string;\n  labelMedium: string;\n  labelSmall: string;\n  bodyLarge: string;\n  bodyMedium: string;\n  bodySmall: string;\n}\n\n// Define the theme shapes\nexport interface AndroidThemeShape {\n  cornerSmall: string;\n  cornerMedium: string;\n  cornerLarge: string;\n  cornerExtraLarge: string;\n}\n\n// Define the theme spacing\nexport interface AndroidThemeSpacing {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  xxl: string;\n}\n\n// Define the complete theme\nexport interface AndroidTheme {\n  colors: AndroidThemeColors;\n  typography: AndroidThemeTypography;\n  shape: AndroidThemeShape;\n  spacing: AndroidThemeSpacing;\n  isDark: boolean;\n}\n\n// Default light theme\nexport const defaultLightTheme: AndroidTheme = {\n  colors: {\n    // Primary color (Blue) - refined for minimalist design\n    primary: '#1a73e8',\n    onPrimary: '#ffffff',\n    primaryContainer: '#e8f1fe',\n    onPrimaryContainer: '#0d3c78',\n    \n    // Secondary color (Green) - refined for minimalist design\n    secondary: '#0b8043',\n    onSecondary: '#ffffff',\n    secondaryContainer: '#e6f5ed',\n    onSecondaryContainer: '#07522b',\n    \n    // Tertiary color (Teal for subtle accents)\n    tertiary: '#00a0b0',\n    onTertiary: '#ffffff',\n    tertiaryContainer: '#e0f7fa',\n    onTertiaryContainer: '#006a75',\n    \n    // Error colors - refined\n    error: '#dc2626',\n    onError: '#ffffff',\n    errorContainer: '#fee2e2',\n    onErrorContainer: '#7f1d1d',\n    \n    // Background and surface colors - cleaner for minimalist approach\n    background: '#f8fafc',\n    onBackground: '#1c2434',\n    surface: '#ffffff',\n    onSurface: '#1c2434',\n    surfaceVariant: '#f1f5f9',\n    onSurfaceVariant: '#475569',\n    outline: '#cbd5e1',\n    shadow: 'rgba(0, 0, 0, 0.06)',\n    inverseSurface: '#1c2434',\n    inverseOnSurface: '#f8fafc',\n    inversePrimary: '#7eb6ff',\n  },\n  typography: {\n    fontFamily: 'Roboto, system-ui, sans-serif',\n    displayLarge: 'text-6xl font-normal leading-tight tracking-tighter',\n    displayMedium: 'text-5xl font-normal leading-tight tracking-tight',\n    displaySmall: 'text-4xl font-normal leading-tight',\n    headlineLarge: 'text-3xl font-normal leading-snug',\n    headlineMedium: 'text-2xl font-normal leading-snug',\n    headlineSmall: 'text-xl font-normal leading-snug',\n    titleLarge: 'text-lg font-medium leading-normal',\n    titleMedium: 'text-base font-medium leading-normal tracking-wide',\n    titleSmall: 'text-sm font-medium leading-normal tracking-wide',\n    labelLarge: 'text-sm font-medium leading-normal',\n    labelMedium: 'text-xs font-medium leading-normal tracking-wide',\n    labelSmall: 'text-[0.6875rem] font-medium leading-normal tracking-wide',\n    bodyLarge: 'text-base font-normal leading-relaxed',\n    bodyMedium: 'text-sm font-normal leading-relaxed',\n    bodySmall: 'text-xs font-normal leading-relaxed',\n  },\n  shape: {\n    cornerSmall: 'rounded',\n    cornerMedium: 'rounded-md',\n    cornerLarge: 'rounded-lg',\n    cornerExtraLarge: 'rounded-xl',\n  },\n  spacing: {\n    xs: '0.25rem',\n    sm: '0.5rem',\n    md: '1rem',\n    lg: '1.5rem',\n    xl: '2rem',\n    xxl: '3rem',\n  },\n  isDark: false,\n};\n\n// Default dark theme\nexport const defaultDarkTheme: AndroidTheme = {\n  colors: {\n    // Primary color (Blue) - Dark theme\n    primary: '#8ab4f8',\n    onPrimary: '#003785',\n    primaryContainer: '#004aac',\n    onPrimaryContainer: '#d6e2ff',\n    \n    // Secondary color (Green) - Dark theme\n    secondary: '#a5d6a7',\n    onSecondary: '#1b5e20',\n    secondaryContainer: '#2e7d32',\n    onSecondaryContainer: '#c8e6c9',\n    \n    // Tertiary color (Teal) - Dark theme\n    tertiary: '#4db6ac',\n    onTertiary: '#003731',\n    tertiaryContainer: '#004f45',\n    onTertiaryContainer: '#b2f5ea',\n    \n    // Error colors - Dark theme\n    error: '#ffb4ab',\n    onError: '#690005',\n    errorContainer: '#93000a',\n    onErrorContainer: '#ffdad6',\n    \n    // Background and surface colors - Dark theme\n    background: '#121212',\n    onBackground: '#e1e2e5',\n    surface: '#191c1e',\n    onSurface: '#e1e2e5',\n    surfaceVariant: '#43474e',\n    onSurfaceVariant: '#c3c7cf',\n    outline: '#8d9199',\n    shadow: '#000000',\n    inverseSurface: '#e1e2e5',\n    inverseOnSurface: '#2e3133',\n    inversePrimary: '#006abc',\n  },\n  typography: {\n    fontFamily: 'Roboto, system-ui, sans-serif',\n    displayLarge: 'text-6xl font-normal leading-tight tracking-tighter',\n    displayMedium: 'text-5xl font-normal leading-tight tracking-tight',\n    displaySmall: 'text-4xl font-normal leading-tight',\n    headlineLarge: 'text-3xl font-normal leading-snug',\n    headlineMedium: 'text-2xl font-normal leading-snug',\n    headlineSmall: 'text-xl font-normal leading-snug',\n    titleLarge: 'text-lg font-medium leading-normal',\n    titleMedium: 'text-base font-medium leading-normal tracking-wide',\n    titleSmall: 'text-sm font-medium leading-normal tracking-wide',\n    labelLarge: 'text-sm font-medium leading-normal',\n    labelMedium: 'text-xs font-medium leading-normal tracking-wide',\n    labelSmall: 'text-[0.6875rem] font-medium leading-normal tracking-wide',\n    bodyLarge: 'text-base font-normal leading-relaxed',\n    bodyMedium: 'text-sm font-normal leading-relaxed',\n    bodySmall: 'text-xs font-normal leading-relaxed',\n  },\n  shape: {\n    cornerSmall: 'rounded',\n    cornerMedium: 'rounded-md',\n    cornerLarge: 'rounded-lg',\n    cornerExtraLarge: 'rounded-xl',\n  },\n  spacing: {\n    xs: '0.25rem',\n    sm: '0.5rem',\n    md: '1rem',\n    lg: '1.5rem',\n    xl: '2rem',\n    xxl: '3rem',\n  },\n  isDark: true,\n};\n\n// Create theme context\ninterface ThemeContextType {\n  theme: AndroidTheme;\n  setTheme: (theme: AndroidTheme) => void;\n  toggleDarkMode: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useAndroidTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useAndroidTheme must be used within an AndroidThemeProvider');\n  }\n  return context;\n};\n\ninterface AndroidThemeProviderProps {\n  children: ReactNode;\n  initialTheme?: AndroidTheme;\n}\n\nexport const AndroidThemeProvider: React.FC<AndroidThemeProviderProps> = ({\n  children,\n  initialTheme = defaultLightTheme,\n}) => {\n  const [theme, setTheme] = React.useState<AndroidTheme>(initialTheme);\n\n  // Toggle between light and dark themes\n  const toggleDarkMode = () => {\n    setTheme(theme.isDark ? defaultLightTheme : defaultDarkTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, toggleDarkMode }}>\n      <div className={theme.isDark ? 'dark' : ''}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\n// Helper to apply theme-based styling\nexport const withAndroidTheme = (\n  Component: React.ComponentType<any>,\n  styleFactory: (theme: AndroidTheme) => Record<string, string>\n) => {\n  return (props: any) => {\n    const { theme } = useAndroidTheme();\n    const themeStyles = styleFactory(theme);\n    \n    return <Component {...props} themeStyles={themeStyles} />;\n  };\n};\n","import { AndroidTheme } from './AndroidThemeProvider';\nimport { cn } from '@/lib/utils';\n\n/**\n * AndroidThemeUtils\n * \n * Utility functions to apply theme-based styling with Tailwind CSS\n */\n\n/**\n * Maps theme color keys to corresponding Tailwind CSS classes\n */\nexport const getColorClass = (\n  theme: AndroidTheme, \n  colorKey: keyof AndroidTheme['colors'], \n  type: 'text' | 'bg' | 'border' = 'bg'\n): string => {\n  // This is a simplified approach since we're using predefined Tailwind colors\n  // In a real implementation with a custom design system, you'd use CSS variables\n  \n  const colorMap: Record<string, Record<string, string>> = {\n    // Primary colors\n    primary: { \n      bg: theme.isDark ? 'bg-blue-400' : 'bg-blue-600',\n      text: theme.isDark ? 'text-blue-400' : 'text-blue-600',\n      border: theme.isDark ? 'border-blue-400' : 'border-blue-600'\n    },\n    onPrimary: { \n      bg: 'bg-white',\n      text: 'text-white',\n      border: 'border-white'\n    },\n    primaryContainer: { \n      bg: theme.isDark ? 'bg-blue-900' : 'bg-blue-100',\n      text: theme.isDark ? 'text-blue-900' : 'text-blue-100',\n      border: theme.isDark ? 'border-blue-900' : 'border-blue-100'\n    },\n    onPrimaryContainer: { \n      bg: theme.isDark ? 'bg-blue-50' : 'bg-blue-900',\n      text: theme.isDark ? 'text-blue-50' : 'text-blue-900',\n      border: theme.isDark ? 'border-blue-50' : 'border-blue-900'\n    },\n    \n    // Secondary colors\n    secondary: { \n      bg: theme.isDark ? 'bg-slate-300' : 'bg-slate-600',\n      text: theme.isDark ? 'text-slate-300' : 'text-slate-600',\n      border: theme.isDark ? 'border-slate-300' : 'border-slate-600'\n    },\n    onSecondary: { \n      bg: 'bg-white',\n      text: 'text-white',\n      border: 'border-white'\n    },\n    secondaryContainer: { \n      bg: theme.isDark ? 'bg-slate-700' : 'bg-slate-100',\n      text: theme.isDark ? 'text-slate-700' : 'text-slate-100',\n      border: theme.isDark ? 'border-slate-700' : 'border-slate-100'\n    },\n    onSecondaryContainer: { \n      bg: theme.isDark ? 'bg-slate-100' : 'bg-slate-900',\n      text: theme.isDark ? 'text-slate-100' : 'text-slate-900',\n      border: theme.isDark ? 'border-slate-100' : 'border-slate-900'\n    },\n    \n    // Error colors\n    error: { \n      bg: theme.isDark ? 'bg-red-400' : 'bg-red-600',\n      text: theme.isDark ? 'text-red-400' : 'text-red-600',\n      border: theme.isDark ? 'border-red-400' : 'border-red-600'\n    },\n    onError: { \n      bg: 'bg-white',\n      text: 'text-white',\n      border: 'border-white'\n    },\n    errorContainer: { \n      bg: theme.isDark ? 'bg-red-900' : 'bg-red-100',\n      text: theme.isDark ? 'text-red-900' : 'text-red-100',\n      border: theme.isDark ? 'border-red-900' : 'border-red-100'\n    },\n    onErrorContainer: { \n      bg: theme.isDark ? 'bg-red-100' : 'bg-red-900',\n      text: theme.isDark ? 'text-red-100' : 'text-red-900',\n      border: theme.isDark ? 'border-red-100' : 'border-red-900'\n    },\n    \n    // Background colors\n    background: { \n      bg: theme.isDark ? 'bg-neutral-900' : 'bg-neutral-50',\n      text: theme.isDark ? 'text-neutral-900' : 'text-neutral-50',\n      border: theme.isDark ? 'border-neutral-900' : 'border-neutral-50'\n    },\n    onBackground: { \n      bg: theme.isDark ? 'bg-neutral-100' : 'bg-neutral-900',\n      text: theme.isDark ? 'text-neutral-100' : 'text-neutral-900',\n      border: theme.isDark ? 'border-neutral-100' : 'border-neutral-900'\n    },\n    surface: { \n      bg: theme.isDark ? 'bg-neutral-800' : 'bg-white',\n      text: theme.isDark ? 'text-neutral-800' : 'text-white',\n      border: theme.isDark ? 'border-neutral-800' : 'border-white'\n    },\n    onSurface: { \n      bg: theme.isDark ? 'bg-neutral-100' : 'bg-neutral-900',\n      text: theme.isDark ? 'text-neutral-100' : 'text-neutral-900',\n      border: theme.isDark ? 'border-neutral-100' : 'border-neutral-900'\n    },\n    surfaceVariant: { \n      bg: theme.isDark ? 'bg-neutral-700' : 'bg-neutral-100',\n      text: theme.isDark ? 'text-neutral-700' : 'text-neutral-100',\n      border: theme.isDark ? 'border-neutral-700' : 'border-neutral-100'\n    },\n    onSurfaceVariant: { \n      bg: theme.isDark ? 'bg-neutral-200' : 'bg-neutral-700',\n      text: theme.isDark ? 'text-neutral-200' : 'text-neutral-700',\n      border: theme.isDark ? 'border-neutral-200' : 'border-neutral-700'\n    },\n    outline: { \n      bg: theme.isDark ? 'bg-neutral-500' : 'bg-neutral-300',\n      text: theme.isDark ? 'text-neutral-500' : 'text-neutral-300',\n      border: theme.isDark ? 'border-neutral-500' : 'border-neutral-300'\n    }\n  };\n\n  return colorMap[colorKey]?.[type] || '';\n};\n\n/**\n * Get typography class based on theme's typography variants\n */\nexport const getTypographyClass = (\n  theme: AndroidTheme,\n  variant: keyof AndroidTheme['typography']\n): string => {\n  return theme.typography[variant] || '';\n};\n\n/**\n * Apply elevation (shadow) based on Material Design elevation levels\n */\nexport const getElevationClass = (\n  elevationLevel: 0 | 1 | 2 | 3 | 4 | 5\n): string => {\n  const elevationMap: Record<number, string> = {\n    0: 'shadow-none',\n    1: 'shadow-sm',\n    2: 'shadow',\n    3: 'shadow-md',\n    4: 'shadow-lg',\n    5: 'shadow-xl'\n  };\n  \n  return elevationMap[elevationLevel] || 'shadow-none';\n};\n\n/**\n * Apply shape (corner radius) based on theme's shape definitions\n */\nexport const getShapeClass = (\n  theme: AndroidTheme,\n  shapeKey: keyof AndroidTheme['shape']\n): string => {\n  return theme.shape[shapeKey] || '';\n};\n\n/**\n * Apply spacing based on theme's spacing definitions\n */\nexport const getSpacingClass = (\n  theme: AndroidTheme,\n  type: 'p' | 'm' | 'gap',\n  direction: 'x' | 'y' | 'l' | 'r' | 't' | 'b' | '',\n  size: keyof AndroidTheme['spacing']\n): string => {\n  const directions: Record<string, string> = {\n    '': '',\n    'x': 'x',\n    'y': 'y',\n    'l': 'l',\n    'r': 'r',\n    't': 't',\n    'b': 'b'\n  };\n  \n  // Map to Tailwind classes like \"px-4\" or \"mt-2\"\n  const spacing = theme.spacing[size].replace('rem', '');\n  const spacingValue = parseFloat(spacing);\n  \n  // Convert to Tailwind spacing scale\n  let tailwindValue = '0';\n  if (spacingValue === 0.25) tailwindValue = '1';\n  else if (spacingValue === 0.5) tailwindValue = '2';\n  else if (spacingValue === 1) tailwindValue = '4';\n  else if (spacingValue === 1.5) tailwindValue = '6';\n  else if (spacingValue === 2) tailwindValue = '8';\n  else if (spacingValue === 3) tailwindValue = '12';\n  else if (spacingValue === 4) tailwindValue = '16';\n  \n  return `${type}${directions[direction]}-${tailwindValue}`;\n};\n\n/**\n * Apply theme-aware styling to components\n */\nexport const applyThemeClasses = (\n  theme: AndroidTheme,\n  baseClasses: string = '',\n  options: {\n    color?: keyof AndroidTheme['colors'];\n    colorType?: 'bg' | 'text' | 'border';\n    typography?: keyof AndroidTheme['typography'];\n    elevation?: 0 | 1 | 2 | 3 | 4 | 5;\n    shape?: keyof AndroidTheme['shape'];\n    paddingX?: keyof AndroidTheme['spacing'];\n    paddingY?: keyof AndroidTheme['spacing'];\n    marginX?: keyof AndroidTheme['spacing'];\n    marginY?: keyof AndroidTheme['spacing'];\n  } = {}\n): string => {\n  const classes = [baseClasses];\n  \n  if (options.color) {\n    classes.push(getColorClass(theme, options.color, options.colorType || 'bg'));\n  }\n  \n  if (options.typography) {\n    classes.push(getTypographyClass(theme, options.typography));\n  }\n  \n  if (options.elevation !== undefined) {\n    classes.push(getElevationClass(options.elevation));\n  }\n  \n  if (options.shape) {\n    classes.push(getShapeClass(theme, options.shape));\n  }\n  \n  if (options.paddingX) {\n    classes.push(getSpacingClass(theme, 'p', 'x', options.paddingX));\n  }\n  \n  if (options.paddingY) {\n    classes.push(getSpacingClass(theme, 'p', 'y', options.paddingY));\n  }\n  \n  if (options.marginX) {\n    classes.push(getSpacingClass(theme, 'm', 'x', options.marginX));\n  }\n  \n  if (options.marginY) {\n    classes.push(getSpacingClass(theme, 'm', 'y', options.marginY));\n  }\n  \n  return cn(...classes);\n};\n","import React, { ReactNode } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { useAndroidTheme } from \"@/theme/AndroidThemeProvider\";\nimport { applyThemeClasses } from \"@/theme/AndroidThemeUtils\";\n\nexport interface AndroidAppBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Whether to apply elevation shadow to the app bar\n   * @default true\n   */\n  elevated?: boolean;\n  \n  /**\n   * The title text to display in the app bar\n   */\n  title?: string;\n  \n  /**\n   * Icon component to display on the left side of the app bar (typically a menu or back button)\n   */\n  navigationIcon?: ReactNode;\n  \n  /**\n   * Event handler for when the navigation icon is clicked\n   */\n  onNavigationIconClick?: () => void;\n  \n  /**\n   * Array of action items to display on the right side of the app bar\n   */\n  actions?: {\n    icon: ReactNode;\n    label: string;\n    onClick: () => void;\n    disabled?: boolean;\n  }[];\n  \n  /**\n   * Whether the app bar is in a prominent style (taller with larger title)\n   * @default false\n   */\n  prominent?: boolean;\n  \n  /**\n   * Center-align the title\n   * @default false\n   */\n  centerTitle?: boolean;\n  \n  /**\n   * Custom content to render below the main app bar (e.g., tabs)\n   */\n  bottom?: ReactNode;\n}\n\nexport function AndroidAppBar({\n  className,\n  elevated = true,\n  title,\n  navigationIcon,\n  onNavigationIconClick,\n  actions = [],\n  prominent = false,\n  centerTitle = false,\n  bottom,\n  children,\n  ...props\n}: AndroidAppBarProps) {\n  const { theme } = useAndroidTheme();\n  \n  // Apply theme colors\n  const themeClasses = applyThemeClasses(theme, \n    'bg-primary text-onPrimary'\n  );\n  \n  return (\n    <header\n      className={cn(\n        // Base styles\n        \"relative w-full flex flex-col\",\n        // Elevation and border\n        elevated ? \"shadow-md\" : \"border-b border-gray-200 dark:border-gray-800\",\n        themeClasses,\n        className\n      )}\n      {...props}\n    >\n      {/* Main toolbar area */}\n      <div\n        className={cn(\n          \"flex items-center gap-4 px-4\",\n          prominent ? \"h-24\" : \"h-14\",\n        )}\n      >\n        {/* Navigation icon (e.g., menu or back button) */}\n        {navigationIcon && (\n          <button\n            type=\"button\"\n            onClick={onNavigationIconClick}\n            className={cn(\n              \"flex items-center justify-center\",\n              \"w-10 h-10 rounded-full\",\n              \"text-current\",\n              \"hover:bg-white/10 active:bg-white/20\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\n            )}\n            aria-label=\"Navigation\"\n          >\n            {navigationIcon}\n          </button>\n        )}\n        \n        {/* Title */}\n        {title && (\n          <h1\n            className={cn(\n              \"font-medium truncate text-white\",\n              prominent ? \"text-2xl\" : \"text-xl\",\n              centerTitle && \"absolute left-1/2 transform -translate-x-1/2\",\n              centerTitle && navigationIcon && \"pl-10\", // Offset for nav icon\n              centerTitle && actions.length > 0 && \"pr-10\" // Offset for actions\n            )}\n          >\n            {title}\n          </h1>\n        )}\n        \n        {/* Action items */}\n        {actions.length > 0 && (\n          <div className=\"flex items-center gap-1 ml-auto\">\n            {actions.map((action, index) => (\n              <button\n                key={index}\n                type=\"button\"\n                onClick={action.onClick}\n                disabled={action.disabled}\n                className={cn(\n                  \"flex items-center justify-center\",\n                  \"w-10 h-10 rounded-full\",\n                  \"text-current\",\n                  \"hover:bg-white/10 active:bg-white/20\",\n                  \"focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\",\n                  \"disabled:opacity-40 disabled:cursor-not-allowed\"\n                )}\n                aria-label={action.label}\n                title={action.label}\n              >\n                {action.icon}\n              </button>\n            ))}\n          </div>\n        )}\n        \n        {/* Custom children */}\n        {children}\n      </div>\n      \n      {/* Bottom content (e.g., tabs) */}\n      {bottom && (\n        <div className=\"w-full bg-inherit\">\n          {bottom}\n        </div>\n      )}\n    </header>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport { cn } from \"@/lib/utils\";\nimport { AndroidBottomNavigation } from \"@/components/ui/android-bottom-navigation\";\nimport { AndroidNavRail } from \"@/components/ui/android-nav-rail\";\nimport { AndroidAppBar } from \"@/components/ui/android-app-bar\";\nimport { useAndroidTheme } from \"@/theme/AndroidThemeProvider\";\nimport { applyThemeClasses } from \"@/theme/AndroidThemeUtils\";\n\n// SVG Icons for navigation\nconst HomeIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" />\n    <polyline points=\"9 22 9 12 15 12 15 22\" />\n  </svg>\n);\n\nconst DashboardIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <rect x=\"3\" y=\"3\" width=\"7\" height=\"9\" />\n    <rect x=\"14\" y=\"3\" width=\"7\" height=\"5\" />\n    <rect x=\"14\" y=\"12\" width=\"7\" height=\"9\" />\n    <rect x=\"3\" y=\"16\" width=\"7\" height=\"5\" />\n  </svg>\n);\n\nconst ActivityIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <polygon points=\"3 11 22 2 13 21 11 13 3 11\"></polygon>\n  </svg>\n);\n\nconst AdminIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z\" />\n    <path d=\"m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65\" />\n    <path d=\"m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65\" />\n  </svg>\n);\n\nconst ProfileIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <circle cx=\"12\" cy=\"8\" r=\"5\" />\n    <path d=\"M20 21a8 8 0 1 0-16 0\" />\n  </svg>\n);\n\n// Navigation items\nconst navigationItems = [\n  {\n    id: 'home',\n    label: 'Home',\n    href: '/',\n    icon: <HomeIcon />,\n  },\n  {\n    id: 'dashboard',\n    label: 'Dashboard',\n    href: '/dashboard',\n    icon: <DashboardIcon />,\n  },\n  {\n    id: 'report',\n    label: 'Report',\n    href: '/report-activity',\n    icon: <ActivityIcon />,\n  },\n  {\n    id: 'admin',\n    label: 'Admin',\n    href: '/admin',\n    icon: <AdminIcon />,\n  },\n  {\n    id: 'profile',\n    label: 'Profile',\n    href: '/user-profile',\n    icon: <ProfileIcon />,\n  },\n];\n\nexport interface AndroidMaterialLayoutProps {\n  /**\n   * Optional additional class names for the layout container\n   */\n  className?: string;\n}\n\nexport function AndroidMaterialLayout({ className }: AndroidMaterialLayoutProps) {\n  const { theme, toggleDarkMode } = useAndroidTheme();\n  const location = useLocation(); // We use this to get current route for title\n  const [isLargeScreen, setIsLargeScreen] = useState(false);\n  \n  // Determine current page title based on route\n  const getCurrentPageTitle = () => {\n    const path = location.pathname;\n    \n    // Match routes to titles\n    if (path === '/' || path === '/dashboard') return 'Home';\n    if (path.startsWith('/report-activity')) return 'Report Activity';\n    if (path.startsWith('/admin')) {\n      if (path === '/admin') return 'Admin';\n      if (path.includes('/users')) return 'User Management';\n      if (path.includes('/observations')) return 'Observations';\n      if (path.includes('/statistics')) return 'Statistics';\n      if (path.includes('/settings')) return 'Settings';\n      if (path.includes('/notifications')) return 'Notifications';\n      return 'Admin';\n    }\n    if (path.startsWith('/user-profile')) return 'My Profile';\n    \n    return 'Elephant Watch';\n  };\n  \n  // Check if the screen is large enough for nav rail\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setIsLargeScreen(window.innerWidth >= 768); // 768px is typical tablet breakpoint\n    };\n    \n    // Initial check\n    checkScreenSize();\n    \n    // Add listener for resize events\n    window.addEventListener('resize', checkScreenSize);\n    \n    // Clean up\n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    };\n  }, []);\n  \n  // Apply appropriate theme background and text color to the layout\n  const themeClasses = applyThemeClasses(theme, \n    'bg-background text-onBackground'\n  );\n  \n  return (\n    <div className={cn(\n      \"flex h-screen w-full overflow-hidden\",\n      themeClasses,\n      className\n    )}>\n      {/* Navigation Rail for larger screens */}\n      {isLargeScreen && (\n        <AndroidNavRail \n          items={navigationItems}\n          showLabels=\"selected\"\n        />\n      )}\n      \n      {/* Main Content Area */}\n      <main className={cn(\n        \"flex-1 flex flex-col overflow-auto\",\n        isLargeScreen ? \"ml-20\" : \"\",\n        isLargeScreen ? \"pb-4\" : \"pb-20\" // Add padding for bottom navigation\n      )}>\n        {/* App Bar */}\n        <AndroidAppBar \n          title={getCurrentPageTitle()}\n          elevated\n          centerTitle={!isLargeScreen}\n          navigationIcon={\n            !isLargeScreen ? (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <line x1=\"4\" x2=\"20\" y1=\"12\" y2=\"12\" />\n                <line x1=\"4\" x2=\"20\" y1=\"6\" y2=\"6\" />\n                <line x1=\"4\" x2=\"20\" y1=\"18\" y2=\"18\" />\n              </svg>\n            ) : undefined\n          }\n          actions={[\n            {\n              icon: theme.isDark ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"4\" />\n                  <path d=\"M12 2v2\" />\n                  <path d=\"M12 20v2\" />\n                  <path d=\"m4.93 4.93 1.41 1.41\" />\n                  <path d=\"m17.66 17.66 1.41 1.41\" />\n                  <path d=\"M2 12h2\" />\n                  <path d=\"M20 12h2\" />\n                  <path d=\"m6.34 17.66-1.41 1.41\" />\n                  <path d=\"m19.07 4.93-1.41 1.41\" />\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\" />\n                </svg>\n              ),\n              label: theme.isDark ? 'Switch to Light Mode' : 'Switch to Dark Mode',\n              onClick: toggleDarkMode\n            }\n          ]}\n        />\n        \n        {/* Page Content - Rendered by Router */}\n        <div className=\"flex-1\">\n          <Outlet />\n        </div>\n      </main>\n      \n      {/* Bottom Navigation for mobile screens */}\n      {!isLargeScreen && (\n        <AndroidBottomNavigation \n          items={navigationItems}\n          showLabels=\"always\"\n        />\n      )}\n    </div>\n  );\n}\n","import React, { Suspense, lazy, Component, ErrorInfo, ReactNode } from 'react';\nimport { Toaster } from '@/components/ui/toaster';\nimport { Toaster as Sonner } from '@/components/ui/sonner';\nimport { TooltipProvider } from '@/components/ui/tooltip';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { createHashRouter, RouterProvider } from 'react-router-dom';\nimport { AuthProvider } from '@/contexts/NewAuthContext';\nimport { ProtectedRoute } from '@/components/ProtectedRoute';\nimport { FullPageLoader } from './components/ui/FullPageLoader';\n\n// Import our Android Material Design layout component\nimport { AndroidMaterialLayout } from './layouts/AndroidMaterialLayout';\nimport { AndroidThemeProvider } from './theme/AndroidThemeProvider';\n\n// Lazy load pages\nconst Index = lazy(() => import('./pages/Index'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\nconst ReportActivityPage = lazy(() => import('./pages/ReportActivityPage'));\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst Admin = lazy(() => import('./pages/Admin'));\nconst Login = lazy(() => import('./components/Login'));\nconst AdminUsers = lazy(() => import('./pages/AdminUsers'));\nconst AdminObservations = lazy(() => import('./pages/AdminObservations'));\nconst AdminStatistics = lazy(() => import('./pages/AdminStatistics'));\nconst AdminSettings = lazy(() => import('./pages/AdminSettings'));\nconst AdminNotifications = lazy(() => import('./pages/AdminNotifications'));\nconst UserProfilePage = lazy(() => import('./pages/UserProfilePage'));\n\nclass ErrorBoundary extends Component<{ children: ReactNode, fallback: ReactNode }, { hasError: boolean }> {\n  constructor(props: { children: ReactNode, fallback: ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_: Error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback;\n    }\n    return this.props.children;\n  }\n}\n\nconst queryClient = new QueryClient();\n\n// Replace traditional ProtectedLayout with Material Design layout\nconst router = createHashRouter([\n  {\n    path: '/login',\n    element: <Suspense fallback={<FullPageLoader />}><Login /></Suspense>,\n  },\n  {\n    path: '/',\n    element: <ProtectedRoute />,\n    children: [\n      {\n        // Use our Android Material Design layout\n        element: <AndroidMaterialLayout />,\n        children: [\n          { index: true, element: <Suspense fallback={<FullPageLoader />}><Index /></Suspense> },\n          { path: 'report-activity', element: <Suspense fallback={<FullPageLoader />}><ReportActivityPage /></Suspense> },\n          { path: 'dashboard', element: (\n            <ErrorBoundary fallback={<div>Failed to load dashboard. Please try refreshing the page.</div>}>\n              <Suspense fallback={<FullPageLoader />}>\n                <Dashboard />\n              </Suspense>\n            </ErrorBoundary>\n          )},\n          {\n            path: 'admin',\n            element: <Suspense fallback={<FullPageLoader />}><Admin /></Suspense>\n          },\n          {\n            path: 'admin/users',\n            element: <Suspense fallback={<FullPageLoader />}><AdminUsers /></Suspense>\n          },\n          {\n            path: 'admin/observations',\n            element: <Suspense fallback={<FullPageLoader />}><AdminObservations /></Suspense>\n          },\n          {\n            path: 'admin/statistics',\n            element: <Suspense fallback={<FullPageLoader />}><AdminStatistics /></Suspense>\n          },\n          {\n            path: 'admin/settings',\n            element: <Suspense fallback={<FullPageLoader />}><AdminSettings /></Suspense>\n          },\n          {\n            path: 'admin/notifications',\n            element: <Suspense fallback={<FullPageLoader />}><AdminNotifications /></Suspense>\n          },\n          {\n            path: 'user-profile',\n            element: <Suspense fallback={<FullPageLoader />}><UserProfilePage /></Suspense>\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: '*',\n    element: <Suspense fallback={<FullPageLoader />}><NotFound /></Suspense>,\n  },\n]);\n\nconst AppProviders: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  // Now using our custom AndroidThemeProvider\n  <AndroidThemeProvider>\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <AuthProvider>\n          <Toaster />\n          <Sonner />\n          {children}\n        </AuthProvider>\n    </TooltipProvider>\n  </QueryClientProvider>\n  </AndroidThemeProvider>\n  // </ThemeProvider>\n);\n\nconst AppContent: React.FC = () => {\n  return <RouterProvider router={router} />;\n};\n\nconst App: React.FC = () => (\n  <AppProviders>\n    <AppContent />\n  </AppProviders>\n);\n\nexport default App;\n","// import { Ion } from \"cesium\";\n// Ion.defaultAccessToken = \"\"; // Leave blank unless you have a token\n(window as any).CESIUM_BASE_URL = \"/cesium\";\n\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./globals.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n"],"file":"assets/index-DdtqKS7u.js"}