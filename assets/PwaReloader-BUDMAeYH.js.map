{"version":3,"file":"PwaReloader-BUDMAeYH.js","sources":["../../src/components/PwaReloader.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\n// import { useRegisterSW } from 'virtual:pwa-register/react'; // Commented out as vite-plugin-pwa is not currently compatible\r\nimport { toast } from 'sonner';\r\nimport { Button } from '@/components/ui/button';\r\n\r\nfunction PwaReloader() {\r\n  // Since useRegisterSW is commented out, the rest of the hook logic will not work.\r\n  // This component will effectively do nothing until vite-plugin-pwa is re-integrated.\r\n  const {\r\n    offlineReady: [offlineReady, setOfflineReady],\r\n    needRefresh: [needRefresh, setNeedRefresh],\r\n    updateServiceWorker,\r\n  } = { // Provide dummy values to prevent runtime errors if React.lazy still loads this in prod (though it shouldn't without the plugin)\r\n    offlineReady: [false, () => {}],\r\n    needRefresh: [false, () => {}],\r\n    updateServiceWorker: () => {},\r\n  }; // useRegisterSW(); // Original call commented out\r\n\r\n  useEffect(() => {\r\n    if (offlineReady) {\r\n      toast.success('App is ready to work offline!');\r\n      setOfflineReady(false); \r\n    }\r\n  }, [offlineReady, setOfflineReady]);\r\n\r\n  useEffect(() => {\r\n    if (needRefresh) {\r\n      const toastId = toast(\r\n        'New version available! Click to refresh.',\r\n        {\r\n          action: (\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                if (updateServiceWorker) updateServiceWorker(true); \r\n                setNeedRefresh(false); \r\n              }}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          ),\r\n          duration: Infinity, \r\n          onDismiss: () => setNeedRefresh(false), \r\n          onAutoClose: () => setNeedRefresh(false), \r\n        }\r\n      );\r\n      return () => {\r\n        toast.dismiss(toastId);\r\n      }\r\n    }\r\n  }, [needRefresh, setNeedRefresh, updateServiceWorker]);\r\n\r\n  return null; \r\n}\r\n\r\nexport default PwaReloader;"],"names":["PwaReloader","offlineReady","setOfflineReady","needRefresh","setNeedRefresh","updateServiceWorker","useEffect","toast","toastId","jsx","Button"],"mappings":"yLAKA,SAASA,GAAc,CAGf,KAAA,CACJ,aAAc,CAACC,EAAcC,CAAe,EAC5C,YAAa,CAACC,EAAaC,CAAc,EACzC,oBAAAC,CAAA,EACE,CACF,aAAc,CAAC,GAAO,IAAM,CAAA,CAAE,EAC9B,YAAa,CAAC,GAAO,IAAM,CAAA,CAAE,EAC7B,oBAAqB,IAAM,CAAA,CAC7B,EAEAC,OAAAA,EAAAA,UAAU,IAAM,CACVL,IACFM,EAAM,QAAQ,+BAA+B,EAC7CL,EAAgB,EAAK,EACvB,EACC,CAACD,EAAcC,CAAe,CAAC,EAElCI,EAAAA,UAAU,IAAM,CACd,GAAIH,EAAa,CACf,MAAMK,EAAUD,EACd,2CACA,CACE,OACEE,EAAA,IAACC,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM,CAEbN,EAAe,EAAK,CACtB,EACD,SAAA,SAAA,CAED,EAEF,SAAU,IACV,UAAW,IAAMA,EAAe,EAAK,EACrC,YAAa,IAAMA,EAAe,EAAK,CAAA,CAE3C,EACA,MAAO,IAAM,CACXG,EAAM,QAAQC,CAAO,CACvB,CAAA,CAED,EAAA,CAACL,EAAaC,EAAgBC,CAAmB,CAAC,EAE9C,IACT"}