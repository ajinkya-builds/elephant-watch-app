{"version":3,"file":"android-card-CV5hN7h4.js","sources":["../../src/components/ui/android-card.tsx"],"sourcesContent":["import { HTMLAttributes, forwardRef } from 'react'\nimport { cn } from '@/lib/utils'\n\n// Define interfaces\ninterface AndroidCardBaseProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Card variant based on Material Design 3\n   * - elevated: Card with shadow elevation\n   * - filled: Card with background color\n   * - outlined: Card with outline border\n   */\n  variant?: 'elevated' | 'filled' | 'outlined'\n\n  /**\n   * Whether to apply padding to the card\n   * @default true\n   */\n  padded?: boolean\n  \n  /**\n   * Whether the card should have rounded corners\n   * @default true\n   */\n  rounded?: boolean\n  \n  /**\n   * Whether to make the card interactive (adds hover effects)\n   * @default false\n   */\n  interactive?: boolean\n}\n\n/**\n * AndroidCardHeaderProps interface\n */\nexport interface AndroidCardHeaderProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst AndroidCardHeader = forwardRef<HTMLDivElement, AndroidCardHeaderProps>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"flex flex-col gap-1 p-6 pb-2\",\n        \"group-[.elevated]/elevated:px-6 group-[.elevated]/elevated:pt-6 group-[.elevated]/elevated:pb-2\",\n        \"group-[.filled]/filled:px-6 group-[.filled]/filled:pt-6 group-[.filled]/filled:pb-2\",\n        \"group-[.outlined]/outlined:px-6 group-[.outlined]/outlined:pt-6 group-[.outlined]/outlined:pb-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\n\nAndroidCardHeader.displayName = 'AndroidCardHeader'\n\n// Main Card Component\nconst AndroidCard = forwardRef<HTMLDivElement, AndroidCardBaseProps>(\n  ({ className, variant = 'elevated', padded = true, rounded = true, interactive = false, ...props }, ref) => {\n    // Define styling based on variant using our modern minimalist Material Design 3 tokens\n    const variantStyles = {\n      elevated: [\n        'bg-white',\n        'shadow-md',\n        'hover:shadow-lg',\n        'hover:-translate-y-0.5',\n        'active:shadow-sm',\n        'active:translate-y-0',\n        'dark:bg-gray-800',\n        'dark:shadow-gray-900/20',\n        'dark:ring-1 dark:ring-gray-700/30',\n        'transition-all duration-200 ease-in-out',\n        'group/elevated'\n      ],\n      filled: [\n        'bg-gray-50',\n        'hover:bg-gray-100',\n        'dark:bg-gray-800',\n        'dark:hover:bg-gray-700',\n        'transition-colors duration-200',\n        'group/filled'\n      ],\n      outlined: [\n        'border-2',\n        'border-gray-200',\n        'hover:border-blue-300',\n        'dark:border-gray-700',\n        'dark:hover:border-blue-700',\n        'bg-white',\n        'dark:bg-gray-900',\n        'transition-colors duration-200',\n        'group/outlined'\n      ]\n    }[variant];\n\n    // Interactive state styles - enhanced for modern minimalist design\n    const interactiveStyles = interactive ? [\n      'relative overflow-hidden',\n      'before:absolute before:inset-0 before:bg-current before:opacity-0',\n      'hover:before:opacity-[0.04]',\n      'active:before:opacity-[0.08]',\n      'focus-visible:before:opacity-[0.08]',\n      'transition-all duration-200 ease-in-out',\n      'cursor-pointer',\n      'hover:-translate-y-0.5',\n      'active:translate-y-0',\n      'focus-visible:outline-none',\n      'focus-visible:ring-2 focus-visible:ring-blue-400/70'\n    ] : [];\n\n    // Padding styles based on variant - more generous spacing for modern look\n    const paddingStyles = padded ? {\n      elevated: 'p-5',\n      filled: 'p-5',\n      outlined: 'p-5'\n    }[variant] : '';\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          // Base styles\n          'overflow-hidden',\n          'transition-all duration-200',\n          'text-on-surface dark:text-on-surface-dark',\n          \n          // Variant styles\n          variantStyles,\n          \n          // Padding\n          paddingStyles,\n          \n          // Border radius\n          rounded ? 'rounded-2xl' : 'rounded-none',\n          \n          // Interactive states\n          interactive && interactiveStyles,\n          \n          // Custom classname\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\nAndroidCard.displayName = 'AndroidCard'\n\n// Card title component\ninterface AndroidCardTitleProps extends HTMLAttributes<HTMLHeadingElement> {}\n\nconst AndroidCardTitle = forwardRef<HTMLParagraphElement, AndroidCardTitleProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <h3\n        ref={ref}\n        className={cn(\n          \"text-[1.5rem] font-medium leading-7 tracking-[0.00938em]\",\n          \"text-on-surface dark:text-on-surface-dark\",\n          \"group-[.elevated]/elevated:text-on-surface\",\n          \"group-[.filled]/filled:text-on-surface\",\n          \"group-[.outlined]/outlined:text-on-surface\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\nAndroidCardTitle.displayName = 'AndroidCardTitle'\n\n// Card description component\ninterface AndroidCardDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {}\n\nconst AndroidCardDescription = forwardRef<HTMLParagraphElement, AndroidCardDescriptionProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={cn(\n          \"text-sm leading-5 tracking-[0.03125em]\",\n          \"text-on-surface-variant dark:text-on-surface-variant-dark\",\n          \"group-[.elevated]/elevated:text-on-surface-variant\",\n          \"group-[.filled]/filled:text-on-surface-variant\",\n          \"group-[.outlined]/outlined:text-on-surface-variant\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\nAndroidCardDescription.displayName = 'AndroidCardDescription'\n\n// Card content container\ninterface AndroidCardContentProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst AndroidCardContent = forwardRef<HTMLDivElement, AndroidCardContentProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"px-6 pb-6 pt-0 text-on-surface-variant dark:text-on-surface-variant-dark\",\n          \"group-[.elevated]/elevated:px-6 group-[.elevated]/elevated:pb-6 group-[.elevated]/elevated:pt-0\",\n          \"group-[.filled]/filled:px-6 group-[.filled]/filled:pb-6 group-[.filled]/filled:pt-0\",\n          \"group-[.outlined]/outlined:px-6 group-[.outlined]/outlined:pb-6 group-[.outlined]/outlined:pt-0\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\nAndroidCardContent.displayName = 'AndroidCardContent'\n\n// Card footer container - typically for actions\ninterface AndroidCardFooterProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst AndroidCardFooter = forwardRef<HTMLDivElement, AndroidCardFooterProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center gap-2 p-6 pt-0\",\n          \"group-[.elevated]/elevated:px-6 group-[.elevated]/elevated:pt-0 group-[.elevated]/elevated:pb-6\",\n          \"group-[.filled]/filled:px-6 group-[.filled]/filled:pt-0 group-[.filled]/filled:pb-6\",\n          \"group-[.outlined]/outlined:px-6 group-[.outlined]/outlined:pt-0 group-[.outlined]/outlined:pb-6\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\nAndroidCardFooter.displayName = 'AndroidCardFooter'\n\n// Card image component\ninterface AndroidCardImageProps extends HTMLAttributes<HTMLDivElement> {\n  src: string\n  alt?: string\n  position?: 'top' | 'bottom'\n  aspectRatio?: '16:9' | '4:3' | '1:1' | 'auto'\n}\n\nconst AndroidCardImage = forwardRef<HTMLDivElement, AndroidCardImageProps>(\n  ({ className, src, alt = \"\", position = 'top', aspectRatio = '16:9', ...props }, ref) => {\n    // Calculate aspect ratio class\n    const aspectRatioClass = {\n      '16:9': 'aspect-video',\n      '4:3': 'aspect-[4/3]',\n      '1:1': 'aspect-square',\n      'auto': ''\n    }[aspectRatio];\n\n    // Position classes\n    const positionClass = position === 'bottom' ? 'order-last' : '';\n    \n    // Container styles based on card variant\n    const containerClass = cn(\n      'w-full overflow-hidden',\n      'group-[.elevated]/elevated:first:rounded-t-2xl group-[.elevated]/elevated:last:rounded-b-2xl',\n      'group-[.filled]/filled:first:rounded-t-2xl group-[.filled]/filled:last:rounded-b-2xl',\n      'group-[.outlined]/outlined:first:rounded-t-2xl group-[.outlined]/outlined:last:rounded-b-2xl',\n      positionClass,\n      className\n    );\n\n    // Image styles with transitions\n    const imageClass = cn(\n      'w-full h-full object-cover',\n      'transition-transform duration-300 ease-in-out',\n      'group-hover:scale-105',\n      aspectRatioClass\n    );\n\n    return (\n      <div \n        ref={ref}\n        className={containerClass}\n        {...props}\n      >\n        <img \n          src={src} \n          alt={alt}\n          className={imageClass}\n          loading=\"lazy\"\n        />\n      </div>\n    )\n  }\n);\n\n// Assign display names\nAndroidCard.displayName = 'AndroidCard';\nAndroidCardHeader.displayName = 'AndroidCard.Header';\nAndroidCardTitle.displayName = 'AndroidCard.Title';\nAndroidCardDescription.displayName = 'AndroidCard.Description';\nAndroidCardContent.displayName = 'AndroidCard.Content';\nAndroidCardFooter.displayName = 'AndroidCard.Footer';\nAndroidCardImage.displayName = 'AndroidCard.Image';\n\n// Create the compound component\nconst AndroidCardWithSubcomponents = Object.assign(AndroidCard, {\n  Header: AndroidCardHeader,\n  Title: AndroidCardTitle,\n  Description: AndroidCardDescription,\n  Content: AndroidCardContent,\n  Footer: AndroidCardFooter,\n  Image: AndroidCardImage,\n});\n\n// Export the component and its types\nexport { AndroidCardWithSubcomponents as AndroidCard };\nexport type { AndroidCardBaseProps as AndroidCardProps, AndroidCardImageProps };\n"],"names":["AndroidCardHeader","forwardRef","className","props","ref","jsx","cn","AndroidCard","variant","padded","rounded","interactive","variantStyles","interactiveStyles","paddingStyles","AndroidCardTitle","AndroidCardDescription","AndroidCardContent","AndroidCardFooter","AndroidCardImage","src","alt","position","aspectRatio","aspectRatioClass","containerClass","imageClass","AndroidCardWithSubcomponents"],"mappings":"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"}