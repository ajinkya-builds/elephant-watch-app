{"version":3,"file":"PwaReloader-DQno5FbK.js","sources":["../../src/components/PwaReloader.tsx"],"sourcesContent":["import { useEffect } from 'react';\n// import { useRegisterSW } from 'virtual:pwa-register/react'; // Commented out as vite-plugin-pwa is not currently compatible\nimport { toast } from 'sonner';\nimport { Button } from '@/components/ui/button';\n\nfunction PwaReloader() {\n  // Since useRegisterSW is commented out, the rest of the hook logic will not work.\n  // This component will effectively do nothing until vite-plugin-pwa is re-integrated.\n  const {\n    offlineReady: [offlineReady, setOfflineReady],\n    needRefresh: [needRefresh, setNeedRefresh],\n    updateServiceWorker,\n  } = { // Provide dummy values to prevent runtime errors if React.lazy still loads this in prod (though it shouldn't without the plugin)\n    offlineReady: [false, () => {}],\n    needRefresh: [false, () => {}],\n    updateServiceWorker: () => {},\n  }; // useRegisterSW(); // Original call commented out\n\n  useEffect(() => {\n    if (offlineReady) {\n      toast.success('App is ready to work offline!');\n      setOfflineReady(false); \n    }\n  }, [offlineReady, setOfflineReady]);\n\n  useEffect(() => {\n    if (needRefresh) {\n      const toastId = toast(\n        'New version available! Click to refresh.',\n        {\n          action: (\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => {\n                if (updateServiceWorker) updateServiceWorker(true); \n                setNeedRefresh(false); \n              }}\n            >\n              Refresh\n            </Button>\n          ),\n          duration: Infinity, \n          onDismiss: () => setNeedRefresh(false), \n          onAutoClose: () => setNeedRefresh(false), \n        }\n      );\n      return () => {\n        toast.dismiss(toastId);\n      }\n    }\n  }, [needRefresh, setNeedRefresh, updateServiceWorker]);\n\n  return null; \n}\n\nexport default PwaReloader;"],"names":["PwaReloader","offlineReady","setOfflineReady","needRefresh","setNeedRefresh","updateServiceWorker","useEffect","toast","toastId","jsx","Button"],"mappings":"yLAKA,SAASA,GAAc,CAGf,KAAA,CACJ,aAAc,CAACC,EAAcC,CAAe,EAC5C,YAAa,CAACC,EAAaC,CAAc,EACzC,oBAAAC,CAAA,EACE,CACF,aAAc,CAAC,GAAO,IAAM,CAAA,CAAE,EAC9B,YAAa,CAAC,GAAO,IAAM,CAAA,CAAE,EAC7B,oBAAqB,IAAM,CAAA,CAC7B,EAEAC,OAAAA,EAAAA,UAAU,IAAM,CACVL,IACFM,EAAM,QAAQ,+BAA+B,EAC7CL,EAAgB,EAAK,EACvB,EACC,CAACD,EAAcC,CAAe,CAAC,EAElCI,EAAAA,UAAU,IAAM,CACd,GAAIH,EAAa,CACf,MAAMK,EAAUD,EACd,2CACA,CACE,OACEE,EAAA,IAACC,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM,CAEbN,EAAe,EAAK,CACtB,EACD,SAAA,SAAA,CAED,EAEF,SAAU,IACV,UAAW,IAAMA,EAAe,EAAK,EACrC,YAAa,IAAMA,EAAe,EAAK,CAAA,CAE3C,EACA,MAAO,IAAM,CACXG,EAAM,QAAQC,CAAO,CACvB,CAAA,CAED,EAAA,CAACL,EAAaC,EAAgBC,CAAmB,CAAC,EAE9C,IACT"}